<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>spring boot解决如何同时上传多个图片和下载的问题</title>
      <link href="/2020/03/02/%E5%90%8E%E7%AB%AF/spring%20boot%E5%90%8C%E6%97%B6%E4%B8%8A%E4%BC%A0%E5%A4%9A%E4%B8%AA%E5%9B%BE%E7%89%87%E5%92%8C%E4%B8%8B%E8%BD%BD/"/>
      <url>/2020/03/02/%E5%90%8E%E7%AB%AF/spring%20boot%E5%90%8C%E6%97%B6%E4%B8%8A%E4%BC%A0%E5%A4%9A%E4%B8%AA%E5%9B%BE%E7%89%87%E5%92%8C%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="spring-boot解决如何同时上传多个图片和下载的问题"><a href="#spring-boot解决如何同时上传多个图片和下载的问题" class="headerlink" title="spring boot解决如何同时上传多个图片和下载的问题"></a>spring boot解决如何同时上传多个图片和下载的问题</h2><p>在平时的业务场景中，避免不了，要搭建文件上传服务器，作为公共服务。一般情况，只做了单个文件的上传，实际业务场景中，却发现单个文件上传，并不能满足一些业务需求，因此我们需要解决如何写一个同时上传多个文件的借口，并返回可下载的文件地址；</p><p>废话不多讲，不再从头建立一个<code>Spring boot</code>项目，如果不知道的话，请直接前往官网查看实例。</p><p>下面我们以上传图片为例，示例相对简单，仅供参考：</p><h3 id="1-后端上传图片接口逻辑"><a href="#1-后端上传图片接口逻辑" class="headerlink" title="1 后端上传图片接口逻辑"></a>1 后端上传图片接口逻辑</h3><blockquote><p>UploadController.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.controllers.fileUpload;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zz.Application;</span><br><span class="line"><span class="keyword">import</span> com.zz.model.Response;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.server.LocalServerPort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.Inet4Address;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Path;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.zz.config.ConfigConstants.getFileDir;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(Application<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;server.port&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//获取当前IP地址</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        InetAddress localhost = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            localhost = Inet4Address.getLocalHost();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(e.getMessage());</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> localhost.getHostAddress();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(value = <span class="string">"/upload"</span>, consumes = &#123;<span class="string">"multipart/form-data"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">upload</span><span class="params">(@RequestParam(<span class="string">"file"</span>)</span> MultipartFile[] files, Response response) </span>&#123;</span><br><span class="line">        log.info(<span class="string">"上传多个文件"</span>);</span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="comment">// file address</span></span><br><span class="line">        String fileAddress =<span class="string">"http://"</span>+ getIp()+ <span class="string">":"</span> + port + File.separator;</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; imgUrls = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; files.length; i++) &#123;</span><br><span class="line">                <span class="comment">// old file name</span></span><br><span class="line">                String fileName = files[i].getOriginalFilename();</span><br><span class="line">                <span class="comment">// new filename</span></span><br><span class="line">                String generateFileName = UUID.randomUUID().toString().replaceAll(<span class="string">"-"</span>, <span class="string">""</span>) + fileName.substring(fileName.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">                <span class="comment">// store filename</span></span><br><span class="line">                String distFileAddress = fileAddress + generateFileName;</span><br><span class="line">                builder.append(distFileAddress+<span class="string">","</span>);</span><br><span class="line">                imgUrls.add(distFileAddress);</span><br><span class="line">                <span class="comment">// generate file to disk</span></span><br><span class="line">                files[i].transferTo(<span class="keyword">new</span> File(getFileDir() + generateFileName));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        response.setMsg(<span class="string">"success"</span>);</span><br><span class="line">        log.info(builder.toString());</span><br><span class="line">        response.setData(imgUrls);</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相对于单个文件的接收，我们这里直接接受多个<code>file</code>对象，然后遍历生成每个对应的地址。</p><p>其中：</p><blockquote><p>getFileDir 设置存放图片的地址，我选择存在项目外的其他地方</p><p>com.zz.config.ConfigConstants.getFileDir</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package com.zz.config;</span><br><span class="line"></span><br><span class="line">public class ConfigConstants &#123;</span><br><span class="line"></span><br><span class="line">    public static String fileDir;</span><br><span class="line"></span><br><span class="line">    public static String getFileDir() &#123;</span><br><span class="line">        fileDir &#x3D; &quot;&#x2F;Users&#x2F;wz&#x2F;projects&#x2F;blog&#x2F;uploadFile&#x2F;&quot;;</span><br><span class="line">        return fileDir;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>当我们把文件生成到指定的文件夹后，我们如何配置在当前server下访问项目外的静态文件图片资源呢？</p></blockquote><p>这个我们就要利用<code>spring boot配置文件 application.yml,</code> 当前还有其他方法比如 <code>WebMvcConfigurer</code>   这里不再赘述。</p><blockquote><p>application.yml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pring:</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">multipart:</span></span><br><span class="line">      <span class="attr">max-file-size:</span> <span class="string">10MB</span></span><br><span class="line">      <span class="attr">max-request-size:</span> <span class="string">10MB</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 静态资源配置</span></span><br><span class="line">  <span class="attr">mvc:</span></span><br><span class="line">    <span class="attr">static-path-pattern:</span> <span class="string">/**</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">static-locations:</span> <span class="string">file:/Users/wz/projects/blog/uploadFile/,classpath:/static/,classpath:/resources/,classpath:/file/,classpath:/templates/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">use-forward-headers:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tomcat:</span></span><br><span class="line">    <span class="attr">remote-ip-header:</span> <span class="string">X-Real-IP</span></span><br><span class="line">    <span class="attr">protocol-header:</span> <span class="string">X-Forwarded-Proto</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#自定义</span></span><br><span class="line"><span class="attr">my:</span></span><br><span class="line">  <span class="attr">tokenURL:</span> <span class="string">"55555"</span></span><br><span class="line">  <span class="attr">authURL:</span> <span class="string">"88888"</span></span><br></pre></td></tr></table></figure><p>这样之后我们在生成的结果中的 <code>http://192.168.31.77:8080/a7ef32e3922b46aea256a93dd53de288.png</code>,这样的地址就可以把文件实质性的指向了<code>file:/Users/wz/projects/blog/uploadFile/</code>,这样大致就是一个简单文件服务器的配置了，当然远不及此，还有压缩一类的功能，后续再聊。</p><p>后端逻辑已经很清晰；</p><p>那前端如何向后端同时发送多个<code>file</code>对象呢？</p><h3 id="2-前端多个文件上传如何传参"><a href="#2-前端多个文件上传如何传参" class="headerlink" title="2 前端多个文件上传如何传参"></a>2 前端多个文件上传如何传参</h3><blockquote><p>html</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">multiple</span> <span class="attr">class</span>=<span class="string">"el-upload"</span> <span class="attr">accept</span>=<span class="string">"image/*"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//upload</span></span><br><span class="line"><span class="keyword">var</span> uploadBtn = <span class="built_in">document</span>.querySelector(<span class="string">'.el-upload'</span>);</span><br><span class="line"></span><br><span class="line">uploadBtn.onchange = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> files = <span class="keyword">this</span>.files;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.files);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    xhr.open(<span class="string">"post"</span>, <span class="string">"/upload"</span>, <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");</span></span><br><span class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.readyState === XMLHttpRequest.DONE &amp;&amp; <span class="keyword">this</span>.status === <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(<span class="keyword">this</span>.responseText));</span><br><span class="line">            <span class="keyword">const</span> &#123;data&#125; = <span class="built_in">JSON</span>.parse(<span class="keyword">this</span>.responseText);</span><br><span class="line">            <span class="keyword">if</span>(!data) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">const</span> imageList = data.slice(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">let</span> imageStr = <span class="string">''</span>;</span><br><span class="line">            imageList.forEach(<span class="function"><span class="params">img</span>=&gt;</span>&#123;</span><br><span class="line">                imageStr += <span class="string">`&lt;img src="<span class="subst">$&#123;img&#125;</span>" /&gt;`</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"result"</span>).innerHTML = imageStr;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多个file 同时上传</span></span><br><span class="line">    <span class="keyword">if</span>(files &amp;&amp; files.length)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;files.length;i++) &#123;</span><br><span class="line">            formData.append(<span class="string">"file"</span>, files[i])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(formData);</span><br><span class="line"></span><br><span class="line">    xhr.send(formData);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>前端通过<code>FormData</code>传参数发送POST请求；</p><p>区别于之前的单个<code>formData.append();</code> 这里我们可以同时<code>append</code>多个相同名字的文件二进制文件流；</p><p><img src="/images/image-20191123234150228-4523763.png" alt="image-20191123234150228"></p><p><img src="/images/image-20191123234325831.png" alt="image-20191123234325831"></p><p><img src="/images/image-20191123234358451.png" alt="image-20191123234358451"></p><p><img src="/images/image-20191123234557023.png" alt="image-20191123234557023"></p><p>如图结果正常显示，当我们部署到服务器的时候，这个就可以当作一个web服务器供大家使用。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> spring boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot 生成动态验证码并前后端校验</title>
      <link href="/2020/03/02/%E5%90%8E%E7%AB%AF/spring%20boot%E7%94%9F%E6%88%90%E5%8A%A8%E6%80%81%E9%AA%8C%E8%AF%81%E7%A0%81%E5%B9%B6%E9%AA%8C%E8%AF%81/"/>
      <url>/2020/03/02/%E5%90%8E%E7%AB%AF/spring%20boot%E7%94%9F%E6%88%90%E5%8A%A8%E6%80%81%E9%AA%8C%E8%AF%81%E7%A0%81%E5%B9%B6%E9%AA%8C%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h2 id="Spring-boot-生成动态验证码并前后端校验"><a href="#Spring-boot-生成动态验证码并前后端校验" class="headerlink" title="Spring boot 生成动态验证码并前后端校验"></a>Spring boot 生成动态验证码并前后端校验</h2><p>最近需要生成一个动态的验证码，在登录页面使用，并在前后端进行校验；</p><p><img src="/images/image-20190728183409195.png" alt="image-20190728183409195"></p><blockquote><p>后端生成动态二维码，存储在 session 里面；</p><p>前端调取接口，展示在登录页面；</p><p>前端登录时候，把验证码传给后端，后端和 session 里面的值进行对比。</p></blockquote><h3 id="1-生成动态验证码图片"><a href="#1-生成动态验证码图片" class="headerlink" title="1 生成动态验证码图片"></a>1 生成动态验证码图片</h3><p>新建一个 <code>class</code>类 <code>ValidateCode</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  生成随机验证码</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidateCode</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Random random = <span class="keyword">new</span> Random();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> width = <span class="number">160</span>;<span class="comment">// 宽</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> height = <span class="number">40</span>;<span class="comment">// 高</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> lineSize = <span class="number">30</span>;<span class="comment">// 干扰线数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> stringNum = <span class="number">4</span>;<span class="comment">//随机产生字符的个数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String randomString = <span class="string">"0123456789abcdefghijklmnopqrstuvwxyz"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String sessionKey = <span class="string">"RANDOMKEY"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *  获取字体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Font <span class="title">getFont</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Font(<span class="string">"Times New Roman"</span>, Font.ROMAN_BASELINE, <span class="number">40</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *  获取颜色</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Color <span class="title">getRandomColor</span><span class="params">(<span class="keyword">int</span> fc, <span class="keyword">int</span> bc)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        fc = Math.min(fc, <span class="number">255</span>);</span><br><span class="line">        bc = Math.min(bc, <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> r = fc + random.nextInt(bc - fc - <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">int</span> g = fc + random.nextInt(bc - fc - <span class="number">14</span>);</span><br><span class="line">        <span class="keyword">int</span> b = fc + random.nextInt(bc - fc - <span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Color(r, g, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *  绘制干扰线</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawLine</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = random.nextInt(width);</span><br><span class="line">        <span class="keyword">int</span> y = random.nextInt(height);</span><br><span class="line">        <span class="keyword">int</span> xl = random.nextInt(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">int</span> yl = random.nextInt(<span class="number">10</span>);</span><br><span class="line">        g.drawLine(x, y, x + xl, y + yl);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *  获取随机字符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getRandomString</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        num = num &gt; <span class="number">0</span> ? num : randomString.length();</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(randomString.charAt(random.nextInt(num)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *  绘制字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">drawString</span><span class="params">(Graphics g, String randomStr, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        g.setFont(getFont());</span><br><span class="line">        g.setColor(getRandomColor(<span class="number">108</span>, <span class="number">190</span>));</span><br><span class="line">        System.out.println(random.nextInt(randomString.length()));</span><br><span class="line">        String rand = getRandomString(random.nextInt(randomString.length()));</span><br><span class="line">        randomStr += rand;</span><br><span class="line">        g.translate(random.nextInt(<span class="number">3</span>), random.nextInt(<span class="number">6</span>));</span><br><span class="line">        g.drawString(rand, <span class="number">40</span> * i + <span class="number">10</span>, <span class="number">25</span>);</span><br><span class="line">        <span class="keyword">return</span> randomStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *  生成随机图片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getRandomCodeImage</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="comment">// BufferedImage类是具有缓冲区的Image类,Image类是用于描述图像信息的类</span></span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_BGR);</span><br><span class="line">        Graphics g = image.getGraphics();</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        g.setColor(getRandomColor(<span class="number">105</span>, <span class="number">189</span>));</span><br><span class="line">        g.setFont(getFont());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制干扰线</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lineSize; i++) &#123;</span><br><span class="line">            drawLine(g);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制随机字符</span></span><br><span class="line">        String random_string = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stringNum; i++) &#123;</span><br><span class="line">            random_string = drawString(g, random_string, i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(random_string);</span><br><span class="line"></span><br><span class="line">        g.dispose();</span><br><span class="line"></span><br><span class="line">        session.removeAttribute(sessionKey);</span><br><span class="line">        session.setAttribute(sessionKey, random_string);</span><br><span class="line"></span><br><span class="line">        String base64String = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//  直接返回图片</span></span><br><span class="line">           ImageIO.write(image, <span class="string">"PNG"</span>, response.getOutputStream());</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来写个 <code>Controller</code> ,    提供个接口给前端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/api/v1/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidateCodeController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成验证码图片</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/getCaptchaImage"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getCaptcha</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            response.setContentType(<span class="string">"image/png"</span>);</span><br><span class="line">            response.setHeader(<span class="string">"Cache-Control"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">            response.setHeader(<span class="string">"Expire"</span>, <span class="string">"0"</span>);</span><br><span class="line">            response.setHeader(<span class="string">"Pragma"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line"></span><br><span class="line">            ValidateCode validateCode = <span class="keyword">new</span> ValidateCode();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 直接返回图片</span></span><br><span class="line">            validateCode.getRandomCodeImage(request, response);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-前端调取接口"><a href="#2-前端调取接口" class="headerlink" title="2 前端调取接口"></a>2 前端调取接口</h3><p><img src="/images/image-20190728191505258.png" alt="image-20190728191505258"></p><p>结果如图：</p><p><img src="/images/image-20190728192207836.png" alt="image-20190728192207836"></p><p><img src="/images/image-20190728192227358.png" alt="image-20190728192227358"></p><h3 id="3-返回-base64-字符串"><a href="#3-返回-base64-字符串" class="headerlink" title="3 返回 base64 字符串"></a>3 返回 base64 字符串</h3><p>有时候我们不能直接返回图片，需要返回一个 json 的数据比如：</p><p><img src="/images/image-20190728192558243.png" alt="image-20190728192558243"></p><p>这时候我们就需要把 <code>image</code> 转化为 <code>base64</code>；</p><p>具体代码如下：</p><p>在之前的 <code>ValidateCode</code>    类中添加一个方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   *  生成随机图片，返回 base64 字符串</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getRandomCodeBase64</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">      HttpSession session = request.getSession();</span><br><span class="line">      <span class="comment">// BufferedImage类是具有缓冲区的Image类,Image类是用于描述图像信息的类</span></span><br><span class="line">      BufferedImage image = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_BGR);</span><br><span class="line">      Graphics g = image.getGraphics();</span><br><span class="line">      g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">      g.setColor(getRandomColor(<span class="number">105</span>, <span class="number">189</span>));</span><br><span class="line">      g.setFont(getFont());</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 绘制干扰线</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lineSize; i++) &#123;</span><br><span class="line">          drawLine(g);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 绘制随机字符</span></span><br><span class="line">      String random_string = <span class="string">""</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stringNum; i++) &#123;</span><br><span class="line">          random_string = drawString(g, random_string, i);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      System.out.println(random_string);</span><br><span class="line"></span><br><span class="line">      g.dispose();</span><br><span class="line"></span><br><span class="line">      session.removeAttribute(sessionKey);</span><br><span class="line">      session.setAttribute(sessionKey, random_string);</span><br><span class="line"></span><br><span class="line">      String base64String = <span class="string">""</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="comment">//  直接返回图片</span></span><br><span class="line">          <span class="comment">//  ImageIO.write(image, "PNG", response.getOutputStream());</span></span><br><span class="line">          <span class="comment">//返回 base64</span></span><br><span class="line">          ByteArrayOutputStream bos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">          ImageIO.write(image, <span class="string">"PNG"</span>, bos);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">byte</span>[] bytes = bos.toByteArray();</span><br><span class="line">          Base64.Encoder encoder = Base64.getEncoder();</span><br><span class="line">          base64String = encoder.encodeToString(bytes);</span><br><span class="line"></span><br><span class="line">      &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> base64String;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在 Controller 添加另外一个路由接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成验证码,返回的是 base64</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/getCaptchaBase64"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getCaptchaBase64</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Map result = <span class="keyword">new</span> HashMap();</span><br><span class="line">        Response response1 = <span class="keyword">new</span> Response();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            response.setContentType(<span class="string">"image/png"</span>);</span><br><span class="line">            response.setHeader(<span class="string">"Cache-Control"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">            response.setHeader(<span class="string">"Expire"</span>, <span class="string">"0"</span>);</span><br><span class="line">            response.setHeader(<span class="string">"Pragma"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line"></span><br><span class="line">            ValidateCode validateCode = <span class="keyword">new</span> ValidateCode();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 直接返回图片</span></span><br><span class="line">            <span class="comment">// validateCode.getRandomCode(request, response);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 返回base64</span></span><br><span class="line">            String base64String = validateCode.getRandomCodeBase64(request, response);</span><br><span class="line">            result.put(<span class="string">"url"</span>, <span class="string">"data:image/png;base64,"</span> + base64String);</span><br><span class="line">            result.put(<span class="string">"message"</span>, <span class="string">"created successfull"</span>);</span><br><span class="line">            System.out.println(<span class="string">"test="</span> + result.get(<span class="string">"url"</span>));</span><br><span class="line">            response1.setData(<span class="number">0</span>, result);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> response1.getResult();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>调用结果：</p><p><img src="/images/image-20190728192558243.png" alt="image-20190728192558243"></p><p><img src="/images/image-20190728193013770.png" alt="image-20190728193013770"></p><p>在前端页面中，只要把 <code>URL</code> 放到 <code>image</code> 的 <code>URL</code> 中，即可显示，这里不再演示。</p><h3 id="3-验证验证码"><a href="#3-验证验证码" class="headerlink" title="3 验证验证码"></a>3 验证验证码</h3><p><img src="/images/image-20190728195121612.png" alt="image-20190728195121612"></p><p><img src="/images/image-20190728195058507.png" alt="image-20190728195058507"></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> spring boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring boot从零搭建登录注册功能并进行所有接口验证</title>
      <link href="/2020/03/02/%E5%90%8E%E7%AB%AF/spring%20boot%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%B9%B6%E8%BF%9B%E8%A1%8C%E6%89%80%E6%9C%89%E6%8E%A5%E5%8F%A3%E9%AA%8C%E8%AF%81/"/>
      <url>/2020/03/02/%E5%90%8E%E7%AB%AF/spring%20boot%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%B9%B6%E8%BF%9B%E8%A1%8C%E6%89%80%E6%9C%89%E6%8E%A5%E5%8F%A3%E9%AA%8C%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h3 id="spring-boot从零搭建登录注册功能并进行所有接口验证"><a href="#spring-boot从零搭建登录注册功能并进行所有接口验证" class="headerlink" title="spring boot从零搭建登录注册功能并进行所有接口验证"></a>spring boot从零搭建登录注册功能并进行所有接口验证</h3><p>[TOC]</p><p>目前大多项目是前后端分离。在后台接口服务开发过程中，往往我们需要先搭建一个基础服务，比如登录注册功能、自动对所有的接口进行token的安全校验等，这样可以防范安全问题的出现。并且这样后续的同事可以只关注业务代码的开发，不需要关心基础架构服务的实现。</p><p>这次我准备搭建一个简单的后台服务，用的是<code>spring boot + mysql + mybatis</code>。</p><h4 id="1、搭建Spring-boot项目"><a href="#1、搭建Spring-boot项目" class="headerlink" title="1、搭建Spring boot项目"></a>1、搭建Spring boot项目</h4><p>首先我们使用IDEA自带的初始化项目功能，创建一个Spring boot项目，如图：</p><p><img src="/images/image-20191207125203878.png" alt="image-20191207125203878"></p><p>或者在线生成，<a href="https://start.spring.io/" target="_blank" rel="noopener">点击进入</a></p><p><img src="/images/16ee2c228a6ffd63.png" alt></p><blockquote><p>pom.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zz<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rest-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>rest-api<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.jayway.jsonpath<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json-path<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-rest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Use MySQL Connector-J --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- image to base64 --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- jjwt支持 --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.auth0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--commons-codec --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.terran4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>terran4j-commons-api2doc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itextpdf.tool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xmlworker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-scratchpad<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>maven更改为国内阿里云镜像，这样比较快</p></blockquote><p><img src="/images/16ee2c8c324e66aa.png" alt></p><p>settings.xml:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0</span></span></span><br><span class="line"><span class="tag"><span class="string">    https://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Mybatis 推荐插件如下：</p></blockquote><p><img src="/images/image-20191207125851843.png" alt="image-20191207125851843"></p><blockquote><p>application.yml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">multipart:</span></span><br><span class="line">      <span class="attr">max-file-size:</span> <span class="string">10MB</span></span><br><span class="line">      <span class="attr">max-request-size:</span> <span class="string">10MB</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="comment"># 静态资源配置</span></span><br><span class="line">  <span class="attr">mvc:</span></span><br><span class="line">    <span class="attr">static-path-pattern:</span> <span class="string">/**</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">static-locations:</span> <span class="string">file:/Users/wz/projects/blog/uploadFile/,classpath:/static/,classpath:/resources/,classpath:/file/,classpath:/templates/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/*.xml</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.zz.entity</span></span><br><span class="line"><span class="comment">#自定义</span></span><br><span class="line"><span class="attr">my:</span></span><br><span class="line">  <span class="attr">tokenURL:</span> <span class="string">"55555"</span></span><br><span class="line">  <span class="attr">authURL:</span> <span class="string">"88888"</span></span><br></pre></td></tr></table></figure><blockquote><p>application-dev.yml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">******</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><blockquote><p>大概目录结构如下</p></blockquote><p><img src="/images/image-20191207133758025.png" alt="image-20191207133758025"></p><p>搭建细节不再赘述；</p><h4 id="2、读取自定义配置文件"><a href="#2、读取自定义配置文件" class="headerlink" title="2、读取自定义配置文件"></a>2、读取自定义配置文件</h4><blockquote><p>com.zz.config.MyConfiguration</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"my"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String tokenURL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String authURL;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAuthURL</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.authURL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAuthURL</span><span class="params">(String authURL)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.authURL = authURL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTokenURL</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.tokenURL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTokenURL</span><span class="params">(String tokenURL)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tokenURL = tokenURL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3、web服务配置"><a href="#3、web服务配置" class="headerlink" title="3、web服务配置"></a>3、web服务配置</h4><blockquote><p>com.zz.config.MyConfiguration</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zz.common.interceptor.AuthenticationInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 拦截所有请求，通过判断是否有 @passToken 注解 决定是否需要跳过登录</span></span><br><span class="line">        registry.addInterceptor(authenticationInterceptor())</span><br><span class="line">                .addPathPatterns(<span class="string">"/**"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AuthenticationInterceptor <span class="title">authenticationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AuthenticationInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4、自定义返回统一的实体类Response"><a href="#4、自定义返回统一的实体类Response" class="headerlink" title="4、自定义返回统一的实体类Response"></a>4、自定义返回统一的实体类Response</h4><blockquote><p>com.zz.model.Response</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.model;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(Object data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5、Utils公共方法类"><a href="#5、Utils公共方法类" class="headerlink" title="5、Utils公共方法类"></a>5、Utils公共方法类</h4><blockquote><p>com.zz.utils.HttpUtils</p><p>获取Request、 Response、session</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取 Request 和 Response</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取 request</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpServletRequest <span class="title">getRequest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes requestAttributes = (ServletRequestAttributes)RequestContextHolder.getRequestAttributes();</span><br><span class="line">        <span class="keyword">if</span> (requestAttributes == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> requestAttributes.getRequest();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取 response</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpServletResponse <span class="title">getResponse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes requestAttributes = (ServletRequestAttributes)RequestContextHolder.getRequestAttributes();</span><br><span class="line">        <span class="keyword">if</span> (requestAttributes == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> requestAttributes.getResponse();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取 session</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpSession <span class="title">getSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        HttpServletRequest request = getRequest();</span><br><span class="line">        <span class="keyword">if</span>(request == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> request.getSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>com.zz.utils.JWTUtils</p><p>JWT 生成token, 验证token</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zz.entity.User;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.codec.binary.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKey;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JWTUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成签名的时候使用的秘钥secret</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SECRETKEY = <span class="string">"KJHUhjjJYgYUllVbXhKDHXhkSyHjlNiVkYzWTBac1Yxkjhuad"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// expirationDate 生成jwt的有效期，单位秒</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> expirationDate = <span class="number">2</span> * <span class="number">60</span> * <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 由字符串生成加密key</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> SecretKey</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> SecretKey <span class="title">generalKey</span><span class="params">(String stringKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] encodedKey = Base64.decodeBase64(stringKey);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SecretKeySpec(encodedKey, <span class="number">0</span>, encodedKey.length, <span class="string">"AES"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建 jwt</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 登录成功后的用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> jwt token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createToken</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定签名的时候使用的签名算法，也就是header那部分，jwt已经将这部分内容封装好了</span></span><br><span class="line">        SignatureAlgorithm signatureAlgorithm = SignatureAlgorithm.HS256;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成JWT的时间</span></span><br><span class="line">        <span class="keyword">long</span> nowMillis = System.currentTimeMillis();</span><br><span class="line">        Date now = <span class="keyword">new</span> Date(nowMillis);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建payload的私有声明（根据特定的业务需要添加，如果要拿这个做验证，一般是需要和jwt的接收方提前沟通好验证方式的）</span></span><br><span class="line">        Map&lt;String, Object&gt; claims = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        claims.put(<span class="string">"userId"</span>, user.getUserId());</span><br><span class="line">        claims.put(<span class="string">"userName"</span>, user.getUserName());</span><br><span class="line">        claims.put(<span class="string">"password"</span>, user.getPassword());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成签名的时候使用的秘钥secret,这个方法本地封装了的，一般可以从本地配置文件中读取，切记这个秘钥不能外露哦。它就是你服务端的私钥，在任何场景都不应该流露出去。一旦客户端得知这个secret, 那就意味着客户端是可以自我签发jwt了</span></span><br><span class="line">        SecretKey key = generalKey(SECRETKEY + user.getPassword());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成签发人</span></span><br><span class="line">        <span class="comment">// json形式字符串或字符串，增加用户非敏感信息存储，如用户id或用户账号，与token解析后进行对比，防止乱用</span></span><br><span class="line">        HashMap&lt;String, Object&gt; storeInfo = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">        storeInfo.put(<span class="string">"userId"</span>, user.getUserId());</span><br><span class="line">        storeInfo.put(<span class="string">"userName"</span>, user.getUserName());</span><br><span class="line">        String subject = storeInfo.toString();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 下面就是在为payload添加各种标准声明和私有声明了</span></span><br><span class="line">        <span class="comment">// 这里其实就是new一个JwtBuilder，设置jwt的body</span></span><br><span class="line">        JwtBuilder builder = Jwts.builder()</span><br><span class="line">                <span class="comment">// 如果有私有声明，一定要先设置这个自己创建的私有的声明，这个是给builder的claim赋值，一旦写在标准的声明赋值之后，就是覆盖了那些标准的声明的</span></span><br><span class="line">                .setClaims(claims)</span><br><span class="line">                <span class="comment">// 唯一随机UUID</span></span><br><span class="line">                <span class="comment">// 设置JWT ID：是JWT的唯一标识，根据业务需要，这个可以设置为一个不重复的值，主要用来作为一次性token,从而回避重放攻击</span></span><br><span class="line">                .setId(UUID.randomUUID().toString())</span><br><span class="line">                <span class="comment">// jwt的签发时间</span></span><br><span class="line">                .setIssuedAt(now)</span><br><span class="line">                <span class="comment">// 代表这个JWT的主体，即它的所有人，这个是一个json格式的字符串，可以存放什么userid，roldid之类的，作为什么用户的唯一标志</span></span><br><span class="line">                .setSubject(subject)</span><br><span class="line">                <span class="comment">// 设置签名使用的签名算法和签名使用的秘钥</span></span><br><span class="line">                .signWith(signatureAlgorithm, key);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (expirationDate &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">long</span> expMillis = nowMillis + expirationDate * <span class="number">1000</span>;</span><br><span class="line">            Date exp = <span class="keyword">new</span> Date(expMillis);</span><br><span class="line">            builder.setExpiration(exp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> builder.compact();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密token，获取声明的实体</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token 加密后的token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> claims</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Claims <span class="title">parseToken</span><span class="params">(String token, User user)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 签名秘钥，和生成的签名的秘钥要保持一模一样</span></span><br><span class="line">        SecretKey key = generalKey(SECRETKEY + user.getPassword());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取私有声明</span></span><br><span class="line">        Claims claims = Jwts.parser()</span><br><span class="line">                <span class="comment">// 设置签名的秘钥</span></span><br><span class="line">                .setSigningKey(key)</span><br><span class="line">                <span class="comment">// 设置需要解析的token</span></span><br><span class="line">                .parseClaimsJws(token).getBody();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> claims;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验token</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token 加密后的token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user  用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true|false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title">verify</span><span class="params">(String token, User user)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取私有声明的实体</span></span><br><span class="line">        Claims claims = parseToken(token, user);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> claims.get(<span class="string">"password"</span>).equals(user.getPassword());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6、查询实体类-query"><a href="#6、查询实体类-query" class="headerlink" title="6、查询实体类 query"></a>6、查询实体类 query</h4><p>所有的服务查询都采用统一的各自的实体类</p><p>比如：</p><blockquote><p>com.zz.query.UserQuery</p><p>用户查询实体</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserQuery</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> userId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> showPassword;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isShowPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> showPassword;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShowPassword</span><span class="params">(<span class="keyword">boolean</span> showPassword)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.showPassword = showPassword;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getUserId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserId</span><span class="params">(<span class="keyword">long</span> userId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userId = userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7、查询后返回实体类"><a href="#7、查询后返回实体类" class="headerlink" title="7、查询后返回实体类"></a>7、查询后返回实体类</h4><p>所有的服务查询返回都采用统一的各自的实体类</p><p>比如：</p><blockquote><p>com.zz.entity.User</p><p>用户数据返回实体</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> userId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String token;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getToken</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.token = token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getUserId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserId</span><span class="params">(<span class="keyword">long</span> userId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userId = userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-、接口实现三层架构"><a href="#8-、接口实现三层架构" class="headerlink" title="8 、接口实现三层架构"></a>8 、接口实现三层架构</h4><p>我们这采取的是三层架构：controller —&gt; service —&gt; mapper;</p><p>如果我们要写一个User类接口，先声明一个UserController路由控制层，然后这个里调用UserService实现类方法，然后再调用mapper持久层去CRUD（mysql增查删改）。</p><h4 id="9、开始搭建注册用户功能"><a href="#9、开始搭建注册用户功能" class="headerlink" title="9、开始搭建注册用户功能"></a>9、开始搭建注册用户功能</h4><p>基础搭建先暂停，开始实质业务的推演；</p><p>mysql的连接就不多说啦；</p><p>让我们开始实现之旅吧；</p><blockquote><p>com.zz.newController.UserController</p><p>用户注册</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.newController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.JWT;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.interfaces.DecodedJWT;</span><br><span class="line"><span class="keyword">import</span> com.zz.common.annotation.PassToken;</span><br><span class="line"><span class="keyword">import</span> com.zz.common.base.BaseApplicationController;</span><br><span class="line"><span class="keyword">import</span> com.zz.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.zz.model.Response;</span><br><span class="line"><span class="keyword">import</span> com.zz.query.UserQuery;</span><br><span class="line"><span class="keyword">import</span> com.zz.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.zz.utils.JWTUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录</span></span><br><span class="line"><span class="comment"> * author: wz</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * @param userName</span></span><br><span class="line"><span class="comment">     * @param password</span></span><br><span class="line"><span class="comment">     * @return response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line">    <span class="meta">@PassToken</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">addUser</span><span class="params">(@RequestParam String userName, @RequestParam String password, Response response)</span> </span>&#123;</span><br><span class="line">        UserQuery query = <span class="keyword">new</span> UserQuery();</span><br><span class="line">        User userData = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        query.setUserName(userName);</span><br><span class="line">        query.setPassword(password);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result;</span><br><span class="line">        String message = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断用户是否已经存在</span></span><br><span class="line">        UserQuery findUserQuery = <span class="keyword">new</span> UserQuery();</span><br><span class="line">        findUserQuery.setUserName(userName);</span><br><span class="line">        User existUser = <span class="keyword">this</span>.userService.findUserByName(findUserQuery);</span><br><span class="line">        <span class="keyword">if</span> (existUser == <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 插入用户</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                result = <span class="keyword">this</span>.userService.addUser(query);</span><br><span class="line">                message = <span class="string">"success"</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                result = <span class="number">0</span>;</span><br><span class="line">                message = <span class="string">"error"</span>;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 插入用户成功后返回用户信息</span></span><br><span class="line">            <span class="keyword">if</span> (result == <span class="number">1</span>) &#123;</span><br><span class="line">                userData = <span class="keyword">this</span>.userService.findUserByName(findUserQuery);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 生成token</span></span><br><span class="line">                String token = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 当前用户</span></span><br><span class="line">                User currentUser = <span class="keyword">new</span> User();</span><br><span class="line">                <span class="keyword">if</span> (userData != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    currentUser.setUserId(userData.getUserId());</span><br><span class="line">                    currentUser.setUserName(userData.getUserName());</span><br><span class="line">                    currentUser.setPassword(password);</span><br><span class="line">                    token = JWTUtils.createToken(currentUser);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (token != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    userData.setToken(token);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 获取token用户信息</span></span><br><span class="line">                    <span class="comment">// Claims userDataFromToken = JWTUtils.parseToken(token, currentUser);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            message = <span class="string">"用户已经存在"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        response.setData(userData);</span><br><span class="line">        response.setMsg(message);</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>com.zz.service.UserService</p><p>Interface 用户接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zz.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.zz.query.UserQuery;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加用户</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(UserQuery query)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>com.zz.service.impl.UserServiceImpl</p><p>用户接口实现类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zz.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.zz.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.zz.query.UserQuery;</span><br><span class="line"><span class="keyword">import</span> com.zz.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addUser</span><span class="params">(UserQuery query)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userMapper.insert(query);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>com.zz.mapper.UserMapper</p><p>mapper</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zz.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.zz.query.UserQuery;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(UserQuery query)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>resources/mapper/UserMapper.xml</p><p>前后名字一定对应</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.zz.mapper.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResult"</span> <span class="attr">type</span>=<span class="string">"com.zz.entity.User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"user_id"</span> <span class="attr">property</span>=<span class="string">"userId"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"user_name"</span> <span class="attr">property</span>=<span class="string">"userName"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"base"</span>&gt;</span></span><br><span class="line">        user_id,</span><br><span class="line">        user_name</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"showPassword"</span>&gt;</span></span><br><span class="line">            , password</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"base_condition"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"userName!=null and userName!=''"</span>&gt;</span></span><br><span class="line">                user_name=#&#123;userName&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"password!=null and password!=''"</span>&gt;</span></span><br><span class="line">                and password=#&#123;password&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insert"</span>&gt;</span></span><br><span class="line">        INSERT INTO user(</span><br><span class="line">        user_name,</span><br><span class="line">        password</span><br><span class="line">        ) VALUES (</span><br><span class="line">        #&#123;userName&#125;,</span><br><span class="line">        #&#123;password&#125;</span><br><span class="line">        )</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>到此，整个接口书写过程已全部完成，这就是在当前架构下写一个接口的全部过程。</p><h4 id="10、搭建web实例-——注册用户"><a href="#10、搭建web实例-——注册用户" class="headerlink" title="10、搭建web实例 ——注册用户"></a>10、搭建web实例 ——注册用户</h4><p>由于我们在配置文件里已经配置静态资源的路径，所以我们可以在resources里面写一个不分离的we b实例进行访问。</p><blockquote><p>resources/static/regist.html</p><p>注册页面</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,user-scalable=0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>注册用户<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/regist.css"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://res.wx.qq.com/open/libs/weui/2.1.3/weui.min.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page form_page js_show"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-form"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-form__text-area"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"weui-form__title"</span>&gt;</span>注册新用户<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-form__control-area"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cells__group weui-cells__group_form"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cells weui-cells_form"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell__hd"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"weui-label"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell__bd"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"js_input——user"</span> <span class="attr">class</span>=<span class="string">"weui-input"</span> <span class="attr">placeholder</span>=<span class="string">"请输入要设置的用户名"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell__hd"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"weui-label"</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell__bd"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"js_input——pwd"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"weui-input"</span> <span class="attr">placeholder</span>=<span class="string">"请输入要设置的密码"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell__hd"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"weui-label"</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell__bd"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"js_input——pwd2"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"weui-input"</span> <span class="attr">placeholder</span>=<span class="string">"请再次输入设置的密码"</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">pattern</span>=<span class="string">"[0-9]*"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;div class="weui-form__tips-area"&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;p class="weui-form__tips"&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                    表单页提示，居中对齐--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;/p&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;/div&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-form__opr-area"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"weui-btn weui-btn_primary"</span> <span class="attr">href</span>=<span class="string">"javascript:"</span> <span class="attr">id</span>=<span class="string">"submit"</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-form__extra-area"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-footer"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                    &lt;p class="weui-footer__links"&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                        &lt;a href="javascript:void(0);" class="weui-footer__link"&gt;底部链接文本&lt;/a&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                    &lt;/p&gt;--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"weui-footer__text"</span>&gt;</span>Copyright © 2019 alex wong<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"js_toast"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-mask_transparent"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-toast"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"weui-icon-success-no-circle weui-icon_toast"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"weui-toast__content"</span>&gt;</span>已完成<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/md5.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/utils.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/dataService.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"https://res.wx.qq.com/open/libs/weuijs/1.2.1/weui.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/regist.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>static/js/dataService.js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> APIURL = <span class="string">'/'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.dataService = &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//GET</span></span><br><span class="line"><span class="keyword">get</span>: (url, params = &#123;&#125;) =&gt; &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> searchArr = [];</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.keys(params).forEach(<span class="function"><span class="params">n</span> =&gt;</span> &#123;</span><br><span class="line">searchArr.push(<span class="string">`<span class="subst">$&#123;n&#125;</span>=<span class="subst">$&#123;params[n]&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> searchStr = searchArr.length ? <span class="string">'?'</span> + searchArr.join(<span class="string">'&amp;'</span>) : <span class="string">''</span>;</span><br><span class="line"><span class="keyword">const</span> token = utils.getCookie(<span class="string">'token'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> fetch(APIURL + url + searchStr, &#123;</span><br><span class="line">method: <span class="string">'GET'</span>,</span><br><span class="line">headers: &#123;</span><br><span class="line">token</span><br><span class="line">&#125;</span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> res.json());</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">//POST</span></span><br><span class="line">post: <span class="function">(<span class="params">url, params = &#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.keys(params).forEach(<span class="function"><span class="params">n</span> =&gt;</span> &#123;</span><br><span class="line">formData.append(n, params[n]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> token = utils.getCookie(<span class="string">'token'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> fetch(APIURL + url, &#123;</span><br><span class="line">method: <span class="string">'POST'</span>,</span><br><span class="line">headers: &#123;</span><br><span class="line">token</span><br><span class="line">&#125;,</span><br><span class="line">body: formData</span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> res.json());</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册</span></span><br><span class="line">addUser(params) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.post(<span class="string">'user/add'</span>, params);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 登录</span></span><br><span class="line">login(params) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.post(<span class="string">'user/login'</span>, params);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户信息</span></span><br><span class="line">getUserInfo(params) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.get(<span class="string">'user/info'</span>, params);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>static/js/utils.js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.utils = &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// md5</span></span><br><span class="line">generateMd5(userName, password) &#123;</span><br><span class="line"><span class="keyword">const</span> salt = <span class="string">"1qaz2wsx3edc4rfv5tgb6yhn7ujm8ik9ol0p@!."</span>;</span><br><span class="line"><span class="keyword">const</span> asciStr = userName + salt + password;</span><br><span class="line"><span class="keyword">const</span> asciArr = asciStr.split(<span class="string">''</span>);</span><br><span class="line"><span class="keyword">const</span> asciResult = [];</span><br><span class="line">asciArr.forEach(<span class="function"><span class="params">n</span> =&gt;</span> &#123;</span><br><span class="line">asciResult.push(n.charCodeAt());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> ascireusltStr = asciResult.join(salt);</span><br><span class="line"><span class="keyword">return</span> hex_md5(ascireusltStr);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// setCookie</span></span><br><span class="line">setCookie(name, value) &#123;</span><br><span class="line"><span class="keyword">var</span> time = <span class="number">2</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">var</span> exp = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">exp.setTime(exp.getTime() + time);</span><br><span class="line"><span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + <span class="built_in">escape</span>(value) + <span class="string">";expires="</span> + exp.toGMTString();</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// getCookie</span></span><br><span class="line">getCookie(name) &#123;</span><br><span class="line"><span class="keyword">var</span> arr, reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| )"</span> + name + <span class="string">"=([^;]*)(;|$)"</span>);</span><br><span class="line"><span class="keyword">if</span> (arr = <span class="built_in">document</span>.cookie.match(reg))</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">unescape</span>(arr[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>static/js/regist.js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取相关用户信息</span></span><br><span class="line"><span class="keyword">const</span> userNameInput = <span class="built_in">document</span>.getElementById(<span class="string">"js_input——user"</span>);</span><br><span class="line"><span class="keyword">const</span> passwordInput = <span class="built_in">document</span>.getElementById(<span class="string">"js_input——pwd"</span>);</span><br><span class="line"><span class="keyword">const</span> passwordConfirmInput = <span class="built_in">document</span>.getElementById(<span class="string">"js_input——pwd2"</span>);</span><br><span class="line"><span class="keyword">const</span> submitBtn = <span class="built_in">document</span>.getElementById(<span class="string">"submit"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// submit</span></span><br><span class="line">submitBtn.onclick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userName = userNameInput.value;</span><br><span class="line"><span class="keyword">const</span> password = passwordInput.value;</span><br><span class="line"><span class="keyword">const</span> confirmPassword = passwordConfirmInput.value;</span><br><span class="line"></span><br><span class="line"><span class="comment">// verify</span></span><br><span class="line"><span class="keyword">if</span> (!userName) &#123;</span><br><span class="line">weui.topTips(<span class="string">'用户姓名不能为空'</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!password) &#123;</span><br><span class="line">weui.topTips(<span class="string">'用户密码不能为空'</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (confirmPassword !== password) &#123;</span><br><span class="line">weui.topTips(<span class="string">'前后密码不一致，请重试'</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密密码</span></span><br><span class="line"><span class="keyword">const</span> newPassword = utils.generateMd5(userName, password);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册</span></span><br><span class="line">dataService.addUser(&#123;</span><br><span class="line">userName,</span><br><span class="line">password: newPassword,</span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> &#123;code, data, msg&#125; = res;</span><br><span class="line"><span class="keyword">if</span> (!data) &#123;</span><br><span class="line">weui.topTips(msg);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">weui.topTips(<span class="string">`注册成功，欢迎 <span class="subst">$&#123;data.userName&#125;</span>`</span>);</span><br><span class="line"><span class="built_in">window</span>.location.href = location.origin + <span class="string">'/login.html'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>效果如图：</p><p><img src="/images/image-20191207144736880.png" alt></p><blockquote><p>增加一些基本的校验</p></blockquote><p><img src="/images/image-20191207145008765.png" alt="image-20191207145008765"></p><blockquote><p>用户密码加密传输，并验证新用户是否已经注册</p></blockquote><p><img src="/images/image-20191207145612200.png" alt="image-20191207145612200"></p><p><img src="/images/image-20191207150016196.png" alt="image-20191207150016196"></p><blockquote><p>mysql 查看下用户表</p></blockquote><p><img src="/images/image-20191207150530465.png" alt="image-20191207150530465"></p><h4 id="11、后端-用户登录功能"><a href="#11、后端-用户登录功能" class="headerlink" title="11、后端-用户登录功能"></a>11、后端-用户登录功能</h4><p>按上面第9步骤所述，下面的添加内容，请直接添加到上述服务中，不再全部展示代码。</p><blockquote><p>com.zz.newController.UserController</p><p>首先要判断用户是否存在，如果存在，返回基本信息并返回用户凭证token</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="meta">@PassToken</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">login</span><span class="params">(@RequestParam String userName, @RequestParam String password, Response response)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        UserQuery query = <span class="keyword">new</span> UserQuery();</span><br><span class="line">        query.setUserName(userName);</span><br><span class="line">        query.setPassword(password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证用户和密码</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 判断用户是否已经存在</span></span><br><span class="line">            User existUser = <span class="keyword">this</span>.userService.findUserByName(query);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 生成token</span></span><br><span class="line">            String token = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 当前用户</span></span><br><span class="line">            User currentUser = <span class="keyword">new</span> User();</span><br><span class="line">            <span class="keyword">if</span> (existUser != <span class="keyword">null</span>) &#123;</span><br><span class="line">                currentUser.setUserId(existUser.getUserId());</span><br><span class="line">                currentUser.setUserName(existUser.getUserName());</span><br><span class="line">                currentUser.setPassword(password);</span><br><span class="line">               <span class="comment">// 生成用户凭证</span></span><br><span class="line">                token = JWTUtils.createToken(currentUser);</span><br><span class="line">                <span class="keyword">if</span> (token != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    existUser.setToken(token);</span><br><span class="line">                &#125;</span><br><span class="line">                response.setMsg(<span class="string">"success"</span>);</span><br><span class="line">                response.setData(existUser);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 登录失败</span></span><br><span class="line">                response.setMsg(<span class="string">"登录失败，请检查用户名和密码"</span>);</span><br><span class="line">                response.setData(<span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            response.setMsg(<span class="string">"login failed"</span>);</span><br><span class="line">            response.setData(<span class="keyword">null</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>com.zz.service.UserService</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zz.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.zz.query.UserQuery;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加用户</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(UserQuery query)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找单个用户</span></span><br><span class="line">    <span class="function">User <span class="title">findUserById</span><span class="params">(UserQuery query)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">User <span class="title">findUserByName</span><span class="params">(UserQuery query)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>com.zz.service.impl.UserServiceImpl</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zz.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.zz.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.zz.query.UserQuery;</span><br><span class="line"><span class="keyword">import</span> com.zz.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addUser</span><span class="params">(UserQuery query)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userMapper.insert(query);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findUserById</span><span class="params">(UserQuery query)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userMapper.findUserById(query);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findUserByName</span><span class="params">(UserQuery query)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userMapper.findUserByName(query);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAllUser</span><span class="params">(UserQuery query)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userMapper.findAllUser(query);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>com.zz.mapper.UserMapper</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zz.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.zz.query.UserQuery;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(UserQuery query)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">User <span class="title">findUserById</span><span class="params">(UserQuery query)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">User <span class="title">findUserByName</span><span class="params">(UserQuery query)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAllUser</span><span class="params">(UserQuery query)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>mapper/UserMapper.xml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;?xml</span> <span class="string">version="1.0"</span> <span class="string">encoding="UTF-8"</span> <span class="string">?&gt;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE</span> <span class="string">mapper</span> <span class="string">PUBLIC</span> <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">&lt;mapper</span> <span class="string">namespace="com.zz.mapper.UserMapper"&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;resultMap</span> <span class="string">id="BaseResult"</span> <span class="string">type="com.zz.entity.User"&gt;</span></span><br><span class="line">        <span class="string">&lt;id</span> <span class="string">column="user_id"</span> <span class="string">property="userId"&gt;&lt;/id&gt;</span></span><br><span class="line">        <span class="string">&lt;id</span> <span class="string">column="user_name"</span> <span class="string">property="userName"&gt;&lt;/id&gt;</span></span><br><span class="line">    <span class="string">&lt;/resultMap&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;sql</span> <span class="string">id="base"&gt;</span></span><br><span class="line">        <span class="string">user_id,</span></span><br><span class="line">        <span class="string">user_name</span></span><br><span class="line">        <span class="string">&lt;if</span> <span class="string">test="showPassword"&gt;</span></span><br><span class="line">            <span class="string">,</span> <span class="string">password</span></span><br><span class="line">        <span class="string">&lt;/if&gt;</span></span><br><span class="line">    <span class="string">&lt;/sql&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;sql</span> <span class="string">id="base_condition"&gt;</span></span><br><span class="line">        <span class="string">&lt;where&gt;</span></span><br><span class="line">            <span class="string">&lt;if</span> <span class="string">test="userName!=null</span> <span class="string">and</span> <span class="string">userName!=''"&gt;</span></span><br><span class="line">                <span class="string">user_name=#&#123;userName&#125;</span></span><br><span class="line">            <span class="string">&lt;/if&gt;</span></span><br><span class="line">            <span class="string">&lt;if</span> <span class="string">test="password!=null</span> <span class="string">and</span> <span class="string">password!=''"&gt;</span></span><br><span class="line">                <span class="string">and</span> <span class="string">password=#&#123;password&#125;</span></span><br><span class="line">            <span class="string">&lt;/if&gt;</span></span><br><span class="line">        <span class="string">&lt;/where&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;/sql&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;!--</span> <span class="string">查询所有user</span> <span class="string">--&gt;</span></span><br><span class="line">    <span class="string">&lt;select</span> <span class="string">id="findAllUser"</span> <span class="string">resultMap="BaseResult"&gt;</span></span><br><span class="line">        <span class="string">select</span></span><br><span class="line">        <span class="string">&lt;include</span> <span class="string">refid="base"/&gt;</span></span><br><span class="line">        <span class="string">from</span> <span class="string">user</span></span><br><span class="line">    <span class="string">&lt;/select&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;!--</span> <span class="string">查询user</span> <span class="string">--&gt;</span></span><br><span class="line">    <span class="string">&lt;select</span> <span class="string">id="findUserById"</span> <span class="string">resultMap="BaseResult"&gt;</span></span><br><span class="line">        <span class="string">select</span></span><br><span class="line">        <span class="string">&lt;include</span> <span class="string">refid="base"/&gt;</span></span><br><span class="line">        <span class="string">from</span> <span class="string">user</span></span><br><span class="line">        <span class="string">where</span></span><br><span class="line">        <span class="string">user_id</span> <span class="string">=</span> <span class="comment">#&#123;userId&#125;</span></span><br><span class="line">    <span class="string">&lt;/select&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;select</span> <span class="string">id="findUserByName"</span> <span class="string">resultMap="BaseResult"&gt;</span></span><br><span class="line">        <span class="string">select</span></span><br><span class="line">        <span class="string">&lt;include</span> <span class="string">refid="base"/&gt;</span></span><br><span class="line">        <span class="string">from</span> <span class="string">user</span></span><br><span class="line">        <span class="string">&lt;include</span> <span class="string">refid="base_condition"/&gt;</span></span><br><span class="line">    <span class="string">&lt;/select&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&lt;insert</span> <span class="string">id="insert"&gt;</span></span><br><span class="line">        <span class="string">INSERT</span> <span class="string">INTO</span> <span class="string">user(</span></span><br><span class="line">        <span class="string">user_name,</span></span><br><span class="line">        <span class="string">password</span></span><br><span class="line">        <span class="string">)</span> <span class="string">VALUES</span> <span class="string">(</span></span><br><span class="line">        <span class="comment">#&#123;userName&#125;,</span></span><br><span class="line">        <span class="comment">#&#123;password&#125;</span></span><br><span class="line">        <span class="string">)</span></span><br><span class="line">    <span class="string">&lt;/insert&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;/mapper&gt;</span></span><br></pre></td></tr></table></figure><h4 id="12、搭建web实例-——登录用户"><a href="#12、搭建web实例-——登录用户" class="headerlink" title="12、搭建web实例 ——登录用户"></a>12、搭建web实例 ——登录用户</h4><blockquote><p>static/login.html</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,user-scalable=0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/regist.css"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://res.wx.qq.com/open/libs/weui/2.1.3/weui.min.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page form_page js_show"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-form"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-form__text-area"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"weui-form__title"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-form__control-area"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cells__group weui-cells__group_form"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cells weui-cells_form"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell__hd"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"weui-label"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell__bd"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"js_input——user"</span> <span class="attr">class</span>=<span class="string">"weui-input"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell__hd"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"weui-label"</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-cell__bd"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"js_input——pwd"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"weui-input"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;div class="weui-form__tips-area"&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;p class="weui-form__tips"&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                    表单页提示，居中对齐--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;/p&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;/div&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-form__opr-area"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"weui-btn weui-btn_primary"</span> <span class="attr">href</span>=<span class="string">"javascript:"</span> <span class="attr">id</span>=<span class="string">"submit"</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-form__extra-area"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-footer"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                    &lt;p class="weui-footer__links"&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                        &lt;a href="javascript:void(0);" class="weui-footer__link"&gt;底部链接文本&lt;/a&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                    &lt;/p&gt;--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"weui-footer__text"</span>&gt;</span>Copyright © 2019 alex wong<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"js_toast"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-mask_transparent"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-toast"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"weui-icon-success-no-circle weui-icon_toast"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"weui-toast__content"</span>&gt;</span>已完成<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/md5.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/utils.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/dataService.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"https://res.wx.qq.com/open/libs/weuijs/1.2.1/weui.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/login.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>static/js/login.js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取相关用户信息</span></span><br><span class="line"><span class="keyword">const</span> userNameInput = <span class="built_in">document</span>.getElementById(<span class="string">"js_input——user"</span>);</span><br><span class="line"><span class="keyword">const</span> passwordInput = <span class="built_in">document</span>.getElementById(<span class="string">"js_input——pwd"</span>);</span><br><span class="line"><span class="keyword">const</span> submitBtn = <span class="built_in">document</span>.getElementById(<span class="string">"submit"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// submit</span></span><br><span class="line">submitBtn.onclick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userName = userNameInput.value;</span><br><span class="line"><span class="keyword">const</span> password = passwordInput.value;</span><br><span class="line"></span><br><span class="line"><span class="comment">// verify</span></span><br><span class="line"><span class="keyword">if</span> (!userName) &#123;</span><br><span class="line">weui.topTips(<span class="string">'用户姓名不能为空'</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!password) &#123;</span><br><span class="line">weui.topTips(<span class="string">'用户密码不能为空'</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密密码</span></span><br><span class="line"><span class="keyword">const</span> newPassword = utils.generateMd5(userName, password);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册</span></span><br><span class="line">dataService.login(&#123;</span><br><span class="line">userName,</span><br><span class="line">password: newPassword,</span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> &#123;code, data, msg&#125; = res;</span><br><span class="line"><span class="keyword">if</span> (!data) &#123;</span><br><span class="line">weui.topTips(msg);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">weui.topTips(<span class="string">`登录成功，欢迎 <span class="subst">$&#123;data.userName&#125;</span>`</span>);</span><br><span class="line">utils.setCookie(<span class="string">'token'</span>, data.token);</span><br><span class="line">location.href = location.origin + <span class="string">'/home.html'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20191207152034072.png" alt="image-20191207152034072"></p><p><img src="/images/image-20191207152244301.png" alt="image-20191207152244301"></p><p><img src="/images/image-20191207152343686.png" alt="image-20191207152343686"></p><p>登录接口返回用户凭证token，后续用来校验用户接口，增加安全性。</p><h4 id="13、增加自定义注解和拦截器"><a href="#13、增加自定义注解和拦截器" class="headerlink" title="13、增加自定义注解和拦截器"></a>13、增加自定义注解和拦截器</h4><p>在常规的业务开发中，切记不可把接口服务暴露给任何人都可以访问，不然别人可以任意查看或者修改你的数据，这是很严重的事情。除了常规从网段IP方面限制固定客户端IP的范围，接口本身也要增加安全验证，这个时候我们就需要用到之前生成的用户凭证token;</p><p>问题是我们如果自定义控制，哪些接口是需要经过验证，哪些接口是不需要通过验证的呢？有人可能会说，直接全部验证不就可以啦，何苦纠结。但是在真实的业务中，有些接口是不能强制校验的，比如一些用户分享到微信的那种接口，是不能增加验证，否则分享的页面无法正常显示。</p><p>所以我们可以自定义注解@PassToken, 添加这个注解的接口，就可以不用进行token验证了。</p><blockquote><p>com.zz.common.annotation.PassToken</p><p>PassToken 注解</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.common.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否跳过token验证</span></span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> PassToken &#123;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">required</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">true</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>添加拦截器</p><p>com.zz.common.interceptor.AuthenticationInterceptor</p><p>在发送请求的时候，在请求头里面加token, 然后验证的时候token从头部获取</p><p>如果没有token, 进行无token提示；</p><p>如果存在，就用 JWT 校验 token 是否存在，并且校验用户密码是否正确。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.common.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.JWT;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.exceptions.JWTDecodeException;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.util.JSON;</span><br><span class="line"><span class="keyword">import</span> com.zz.common.annotation.PassToken;</span><br><span class="line"><span class="keyword">import</span> com.zz.common.base.BaseApplicationController;</span><br><span class="line"><span class="keyword">import</span> com.zz.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.zz.model.Response;</span><br><span class="line"><span class="keyword">import</span> com.zz.query.UserQuery;</span><br><span class="line"><span class="keyword">import</span> com.zz.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.zz.utils.JWTUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.configurationprocessor.json.JSONException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.configurationprocessor.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.method.HandlerMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拦截器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthenticationInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * response返回信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> JSONException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">getJsonObject</span><span class="params">(<span class="keyword">int</span> code, String message)</span> <span class="keyword">throws</span> JSONException </span>&#123;</span><br><span class="line">        JSONObject jsonObject = <span class="keyword">new</span> JSONObject();</span><br><span class="line">        jsonObject.put(<span class="string">"msg"</span>, message);</span><br><span class="line">        jsonObject.put(<span class="string">"code"</span>, code);</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object object)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从 http 请求头中取出 token</span></span><br><span class="line">        String token = BaseApplicationController.getToken();</span><br><span class="line">        <span class="comment">// 如果不是映射到方法直接通过</span></span><br><span class="line">        <span class="keyword">if</span> (!(object <span class="keyword">instanceof</span> HandlerMethod)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        HandlerMethod handlerMethod = (HandlerMethod) object;</span><br><span class="line">        Method method = handlerMethod.getMethod();</span><br><span class="line">        <span class="comment">//检查是否有PassToken注释，有则跳过认证</span></span><br><span class="line">        <span class="keyword">if</span> (method.isAnnotationPresent(PassToken<span class="class">.<span class="keyword">class</span>)) </span>&#123;</span><br><span class="line">            PassToken passToken = method.getAnnotation(PassToken<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="keyword">if</span> (passToken.required()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 默认执行认证</span></span><br><span class="line">        httpServletResponse.setContentType(<span class="string">"application/json;charset=UTF-8"</span>);</span><br><span class="line">        <span class="keyword">if</span> (token == <span class="keyword">null</span> || token.equals(<span class="string">"null"</span>)) &#123;</span><br><span class="line">            JSONObject jsonObject = getJsonObject(<span class="number">403</span>, <span class="string">"无token，请重新登录"</span>);</span><br><span class="line">            httpServletResponse.getWriter().write(jsonObject.toString());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="comment">// throw new RuntimeException("无token，请重新登录");</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取 token 中的 user id</span></span><br><span class="line">        <span class="keyword">long</span> userId;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            userId = BaseApplicationController.getCurrentUserId();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JWTDecodeException j) &#123;</span><br><span class="line">            JSONObject jsonObject = getJsonObject(<span class="number">500</span>, <span class="string">"访问异常, token不正确，请重新登录"</span>);</span><br><span class="line">            httpServletResponse.getWriter().write(jsonObject.toString());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="comment">// throw new RuntimeException("访问异常！");</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证用户是否存在</span></span><br><span class="line">        UserQuery query = <span class="keyword">new</span> UserQuery();</span><br><span class="line">        query.setUserId(userId);</span><br><span class="line">        query.setShowPassword(Boolean.TRUE);</span><br><span class="line">        User user = userService.findUserById(query);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">            JSONObject jsonObject = getJsonObject(<span class="number">500</span>, <span class="string">"用户不存在，请重新登录"</span>);</span><br><span class="line">            httpServletResponse.getWriter().write(jsonObject.toString());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="comment">// throw new RuntimeException("用户不存在，请重新登录");</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证token是否有效</span></span><br><span class="line">        Boolean verify = JWTUtils.verify(token, user);</span><br><span class="line">        <span class="keyword">if</span> (!verify) &#123;</span><br><span class="line">            JSONObject jsonObject = getJsonObject(<span class="number">500</span>, <span class="string">"非法访问，请重新登录"</span>);</span><br><span class="line">            httpServletResponse.getWriter().write(jsonObject.toString());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="comment">// throw new RuntimeException("非法访问！");</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面让我们实例看下效果：</p><blockquote><p>com.zz.newController.UserController</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zz.newController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.JWT;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.interfaces.DecodedJWT;</span><br><span class="line"><span class="keyword">import</span> com.zz.common.annotation.PassToken;</span><br><span class="line"><span class="keyword">import</span> com.zz.common.base.BaseApplicationController;</span><br><span class="line"><span class="keyword">import</span> com.zz.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.zz.model.Response;</span><br><span class="line"><span class="keyword">import</span> com.zz.query.UserQuery;</span><br><span class="line"><span class="keyword">import</span> com.zz.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.zz.utils.JWTUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录</span></span><br><span class="line"><span class="comment"> * autho: wangzhao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * @param userName</span></span><br><span class="line"><span class="comment">     * @param password</span></span><br><span class="line"><span class="comment">     * @return response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line">    <span class="meta">@PassToken</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">addUser</span><span class="params">(@RequestParam String userName, @RequestParam String password, Response response)</span> </span>&#123;</span><br><span class="line">        UserQuery query = <span class="keyword">new</span> UserQuery();</span><br><span class="line">        User userData = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        query.setUserName(userName);</span><br><span class="line">        query.setPassword(password);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result;</span><br><span class="line">        String message = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断用户是否已经存在</span></span><br><span class="line">        UserQuery findUserQuery = <span class="keyword">new</span> UserQuery();</span><br><span class="line">        findUserQuery.setUserName(userName);</span><br><span class="line">        User existUser = <span class="keyword">this</span>.userService.findUserByName(findUserQuery);</span><br><span class="line">        <span class="keyword">if</span> (existUser == <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 插入用户</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                result = <span class="keyword">this</span>.userService.addUser(query);</span><br><span class="line">                message = <span class="string">"success"</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                result = <span class="number">0</span>;</span><br><span class="line">                message = <span class="string">"error"</span>;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 插入用户成功后返回用户信息</span></span><br><span class="line">            <span class="keyword">if</span> (result == <span class="number">1</span>) &#123;</span><br><span class="line">                userData = <span class="keyword">this</span>.userService.findUserByName(findUserQuery);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 生成token</span></span><br><span class="line">                String token = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 当前用户</span></span><br><span class="line">                User currentUser = <span class="keyword">new</span> User();</span><br><span class="line">                <span class="keyword">if</span> (userData != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    currentUser.setUserId(userData.getUserId());</span><br><span class="line">                    currentUser.setUserName(userData.getUserName());</span><br><span class="line">                    currentUser.setPassword(password);</span><br><span class="line">                    token = JWTUtils.createToken(currentUser);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (token != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    userData.setToken(token);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 获取token用户信息</span></span><br><span class="line">                    <span class="comment">// Claims userDataFromToken = JWTUtils.parseToken(token, currentUser);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            message = <span class="string">"用户已经存在"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        response.setData(userData);</span><br><span class="line">        response.setMsg(message);</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="meta">@PassToken</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">login</span><span class="params">(@RequestParam String userName, @RequestParam String password, Response response)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        UserQuery query = <span class="keyword">new</span> UserQuery();</span><br><span class="line">        query.setUserName(userName);</span><br><span class="line">        query.setPassword(password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证用户和密码</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 判断用户是否已经存在</span></span><br><span class="line">            User existUser = <span class="keyword">this</span>.userService.findUserByName(query);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 生成token</span></span><br><span class="line">            String token = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 当前用户</span></span><br><span class="line">            User currentUser = <span class="keyword">new</span> User();</span><br><span class="line">            <span class="keyword">if</span> (existUser != <span class="keyword">null</span>) &#123;</span><br><span class="line">                currentUser.setUserId(existUser.getUserId());</span><br><span class="line">                currentUser.setUserName(existUser.getUserName());</span><br><span class="line">                currentUser.setPassword(password);</span><br><span class="line">                token = JWTUtils.createToken(currentUser);</span><br><span class="line">                <span class="keyword">if</span> (token != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    existUser.setToken(token);</span><br><span class="line">                &#125;</span><br><span class="line">                response.setMsg(<span class="string">"success"</span>);</span><br><span class="line">                response.setData(existUser);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 登录失败</span></span><br><span class="line">                response.setMsg(<span class="string">"登录失败，请检查用户名和密码"</span>);</span><br><span class="line">                response.setData(<span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            response.setMsg(<span class="string">"login failed"</span>);</span><br><span class="line">            response.setData(<span class="keyword">null</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取个人信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/info"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">getUserInfo</span><span class="params">(Response response)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取token</span></span><br><span class="line">        String token = BaseApplicationController.getToken();</span><br><span class="line">        User userData2 = BaseApplicationController.getCurrentUser();</span><br><span class="line">        Map&lt;String, Object&gt; headerData = BaseApplicationController.getHeader();</span><br><span class="line">        <span class="keyword">if</span> (token != <span class="keyword">null</span> &amp;&amp; !token.equals(<span class="string">"null"</span>)) &#123;</span><br><span class="line">            User userData = <span class="keyword">new</span> User();</span><br><span class="line">            DecodedJWT claims = JWT.decode(token);</span><br><span class="line">            userData.setUserName(claims.getClaim(<span class="string">"userName"</span>).asString());</span><br><span class="line">            userData.setUserId(claims.getClaim(<span class="string">"userId"</span>).asLong());</span><br><span class="line">            response.setData(userData);</span><br><span class="line">            response.setMsg(<span class="string">"success"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            response.setMsg(<span class="string">"token不存在"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们新写了一个接口，获取用户信息，如上，其余代码不再赘述；</p><blockquote><p>成功获取用户信息</p></blockquote><p><img src="/images/image-20191207154357109.png" alt="image-20191207154357109"></p><blockquote><p>删除token</p></blockquote><p><img src="/images/image-20191207154505224.png" alt="image-20191207154505224"></p><p><img src="/images/image-20191207154542523.png" alt="image-20191207154542523"></p><blockquote><p>Token 故意改错</p></blockquote><p><img src="/images/image-20191207154655011.png" alt="image-20191207154655011"></p><p><img src="/images/image-20191207154738162.png" alt="image-20191207154738162"></p><p><img src="/images/image-20191207154806418.png" alt="image-20191207154806418"></p><p>到此，验证过程完美成功；</p><h4 id="14、总结"><a href="#14、总结" class="headerlink" title="14、总结"></a>14、总结</h4><p>以上过程，只是一个简单服务的搭建，真实的服务还需要更多配置，比如XSS配置防止XSS攻击等。好了，本篇文章到此为止，如果有哪里描述得不清楚，请多多包涵。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> spring boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RESETful API 设计规范</title>
      <link href="/2019/08/14/%E5%90%8E%E7%AB%AF/RESETful%20API%20%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/"/>
      <url>/2019/08/14/%E5%90%8E%E7%AB%AF/RESETful%20API%20%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h1 id="RESETful-API-设计规范"><a href="#RESETful-API-设计规范" class="headerlink" title="RESETful API 设计规范"></a>RESETful API 设计规范</h1><blockquote><p>文章参考了目前比较常见的 <code>RESETful API</code> 设计，文档不一定十分完善，如果遗漏或者不准确，请包涵和提出意见。</p></blockquote><h2 id="关于「能愿动词」的使用"><a href="#关于「能愿动词」的使用" class="headerlink" title="关于「能愿动词」的使用"></a>关于「能愿动词」的使用</h2><p>为了避免歧义，文档大量使用了「能愿动词」，对应的解释如下：</p><ul><li><code>必须 (MUST)</code>：绝对，严格遵循，请照做，无条件遵守；</li><li><code>一定不可 (MUST NOT)</code>：禁令，严令禁止；</li><li><code>应该 (SHOULD)</code> ：强烈建议这样做，但是不强求；</li><li><code>不该 (SHOULD NOT)</code>：强烈不建议这样做，但是不强求；</li><li><code>可以 (MAY)</code> 和 <code>可选 (OPTIONAL)</code> ：选择性高一点，在这个文档内，此词语使用较少；</li></ul><p>参考 <a href="https://www.ietf.org/rfc/rfc2119.txt" target="_blank" rel="noopener">RFC</a> 文档</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">Status of this Memo</span><br><span class="line"></span><br><span class="line">   This document specifies an Internet Best Current Practices for the</span><br><span class="line">   Internet Community, and requests discussion and suggestions for</span><br><span class="line">   improvements.  Distribution of this memo is unlimited.</span><br><span class="line"></span><br><span class="line">Abstract</span><br><span class="line"></span><br><span class="line">   In many standards track documents several words are used to signify</span><br><span class="line">   the requirements in the specification.  These words are often</span><br><span class="line">   capitalized.  This document defines these words as they should be</span><br><span class="line">   interpreted in IETF documents.  Authors who follow these guidelines</span><br><span class="line">   should incorporate this phrase near the beginning of their document:</span><br><span class="line"></span><br><span class="line">      The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL</span><br><span class="line">      NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,  &quot;MAY&quot;, and</span><br><span class="line">      &quot;OPTIONAL&quot; in this document are to be interpreted as described in</span><br><span class="line">      RFC 2119.</span><br><span class="line"></span><br><span class="line">   Note that the force of these words is modified by the requirement</span><br><span class="line">   level of the document in which they are used.</span><br><span class="line"></span><br><span class="line">1. MUST   This word, or the terms &quot;REQUIRED&quot; or &quot;SHALL&quot;, mean that the</span><br><span class="line">   definition is an absolute requirement of the specification.</span><br><span class="line"></span><br><span class="line">2. MUST NOT   This phrase, or the phrase &quot;SHALL NOT&quot;, mean that the</span><br><span class="line">   definition is an absolute prohibition of the specification.</span><br><span class="line"></span><br><span class="line">3. SHOULD   This word, or the adjective &quot;RECOMMENDED&quot;, mean that there</span><br><span class="line">   may exist valid reasons in particular circumstances to ignore a</span><br><span class="line">   particular item, but the full implications must be understood and</span><br><span class="line">   carefully weighed before choosing a different course.</span><br><span class="line"></span><br><span class="line">4. SHOULD NOT   This phrase, or the phrase &quot;NOT RECOMMENDED&quot; mean that</span><br><span class="line">   there may exist valid reasons in particular circumstances when the</span><br><span class="line">   particular behavior is acceptable or even useful, but the full</span><br><span class="line">   implications should be understood and the case carefully weighed</span><br><span class="line">   before implementing any behavior described with this label.</span><br></pre></td></tr></table></figure></blockquote><h2 id="Protocol"><a href="#Protocol" class="headerlink" title="Protocol"></a>Protocol</h2><p>客户端在通过 <code>API</code> 与后端服务通信的过程中，<code>应该</code> 使用 <code>HTTPS</code> 协议。</p><h2 id="API-Root-URL"><a href="#API-Root-URL" class="headerlink" title="API Root URL"></a>API Root URL</h2><p><code>API</code> 的根入口点应尽可能保持足够简单，这里有两个常见的 <code>URL</code> 根例子：</p><ul><li>api.example.com/*</li><li>example.com/api/*</li></ul><blockquote><p>如果你的应用很庞大或者你预计它将会变的很庞大，那 <code>应该</code> 将 <code>API</code> 放到子域下（<code>api.example.com</code>）。这种做法可以保持某些规模化上的灵活性。</p></blockquote><h2 id="Versioning"><a href="#Versioning" class="headerlink" title="Versioning"></a>Versioning</h2><p>所有的 <code>API</code> 必须保持向后兼容，你 <code>必须</code> 在引入新版本 <code>API</code> 的同时确保旧版本 <code>API</code> 仍然可用。所以 <code>应该</code> 为其提供版本支持。</p><p>目前比较常见的两种版本号形式：</p><h3 id="在-URL-中嵌入版本编号"><a href="#在-URL-中嵌入版本编号" class="headerlink" title="在 URL 中嵌入版本编号"></a>在 URL 中嵌入版本编号</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">api.example.com&#x2F;v1&#x2F;*</span><br></pre></td></tr></table></figure><p>这种做法是版本号直观、易于调试；另一种做法是，将版本号放在 <code>HTTP Header</code> 头中：</p><h3 id="通过媒体类型来指定版本信息"><a href="#通过媒体类型来指定版本信息" class="headerlink" title="通过媒体类型来指定版本信息"></a>通过媒体类型来指定版本信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Accept: application&#x2F;vnd.example.com.v1+json</span><br></pre></td></tr></table></figure><p>其中 <code>vnd</code> 表示 <code>Standards Tree</code> 标准树类型，有三个不同的树: <code>x</code>，<code>prs</code> 和 <code>vnd</code>。你使用的标准树需要取决于你开发的项目</p><ul><li>未注册的树（<code>x</code>）主要表示本地和私有环境</li><li>私有树（<code>prs</code>）主要表示没有商业发布的项目</li><li>供应商树（<code>vnd</code>）主要表示公开发布的项目</li></ul><blockquote><p>后面几个参数依次为应用名称（一般为应用域名）、版本号、期望的返回格式。</p></blockquote><p>至于具体把版本号放在什么地方，这个问题一直存在很大的争议，但由于我们大多数时间都在使用 <code>Laravel</code> 开发，<code>应该</code> 使用 <a href="https://github.com/dingo/api" target="_blank" rel="noopener">dingo/api</a> 来快速构建应用，它采用第二种方式来管理 <code>API</code> 版本，并且已集成了标准的 <code>HTTP Response</code>。</p><h2 id="Endpoints"><a href="#Endpoints" class="headerlink" title="Endpoints"></a>Endpoints</h2><p>端点就是指向特定资源或资源集合的 <code>URL</code>。在端点的设计中，你 <code>必须</code> 遵守下列约定：</p><ul><li>URL 的命名 <code>必须</code> 全部小写</li><li>URL 中资源（<code>resource</code>）的命名 <code>必须</code> 是名词，并且 <code>必须</code> 是复数形式</li><li><code>必须</code> 优先使用 <code>Restful</code> 类型的 URL</li><li>URL <code>必须</code> 是易读的</li><li>URL <code>一定不可</code> 暴露服务器架构</li></ul><blockquote><p>至于 URL 是否必须使用连字符（<code>-</code>） 或下划线（<code>_</code>），不做硬性规定，但 <code>必须</code> 根据团队情况统一一种风格。</p></blockquote><p>来看一个反例</p><ul><li><a href="https://api.example.com/getUserInfo?userid=1" target="_blank" rel="noopener">https://api.example.com/getUserInfo?userid=1</a></li><li><a href="https://api.example.com/getusers" target="_blank" rel="noopener">https://api.example.com/getusers</a></li><li><a href="https://api.example.com/sv/u" target="_blank" rel="noopener">https://api.example.com/sv/u</a></li><li><a href="https://api.example.com/cgi-bin/users/get_user.php?userid=1" target="_blank" rel="noopener">https://api.example.com/cgi-bin/users/get_user.php?userid=1</a></li></ul><p>再来看一个正列</p><ul><li><p><a href="https://api.example.com/zoos" target="_blank" rel="noopener">https://api.example.com/zoos</a></p></li><li><p><a href="https://api.example.com/animals" target="_blank" rel="noopener">https://api.example.com/animals</a></p></li><li><p><a href="https://api.example.com/zoos/{zoo}/animals" target="_blank" rel="noopener">https://api.example.com/zoos/{zoo}/animals</a></p></li><li><p><a href="https://api.example.com/animal_types" target="_blank" rel="noopener">https://api.example.com/animal_types</a></p></li><li><p><a href="https://api.example.com/employees" target="_blank" rel="noopener">https://api.example.com/employees</a></p></li></ul><h2 id="HTTP-动词"><a href="#HTTP-动词" class="headerlink" title="HTTP 动词"></a>HTTP 动词</h2><p>对于资源的具体操作类型，由 <code>HTTP</code> 动词表示。常用的 <code>HTTP</code> 动词有下面五个（括号里是对应的 <code>SQL</code> 命令）。</p><ul><li>GET（SELECT）：从服务器取出资源（一项或多项）。</li><li>POST（CREATE）：在服务器新建一个资源。</li><li>PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。</li><li>PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。</li><li>DELETE（DELETE）：从服务器删除资源。</li></ul><p>其中</p><p>1 删除资源 <code>必须</code> 用 <code>DELETE</code> 方法 2 创建新的资源 <code>必须</code> 使用 <code>POST</code> 方法 3 更新资源 <code>应该</code> 使用 <code>PUT</code> 方法 4 获取资源信息 <code>必须</code> 使用 <code>GET</code> 方法</p><p>针对每一个端点来说，下面列出所有可行的 <code>HTTP</code> 动词和端点的组合</p><table><thead><tr><th>请求方法</th><th>URL</th><th>描述</th></tr></thead><tbody><tr><td>GET</td><td>/zoos/list</td><td>列出所有的动物园(ID和名称，不要太详细)</td></tr><tr><td>POST</td><td>/zoos/update</td><td>新增一个新的动物园</td></tr><tr><td>GET</td><td>/zoos/detail?id=1</td><td>获取指定动物园详情</td></tr><tr><td>PUT</td><td>/zoos/{zoo}</td><td>更新指定动物园(整个对象)</td></tr><tr><td>PATCH</td><td>/zoos/{zoo}</td><td>更新动物园(部分对象)</td></tr><tr><td>DELETE</td><td>/zoos/{zoo}</td><td>删除指定动物园</td></tr><tr><td>GET</td><td>/zoos/{zoo}/animals</td><td>检索指定动物园下的动物列表(ID和名称，不要太详细)</td></tr><tr><td>GET</td><td>/animals</td><td>列出所有动物(ID和名称)。</td></tr><tr><td>POST</td><td>/animals</td><td>新增新的动物</td></tr><tr><td>GET</td><td>/animals/detail</td><td>获取指定的动物详情</td></tr><tr><td>PUT</td><td>/animals/{animal}</td><td>更新指定的动物(整个对象)</td></tr><tr><td>PATCH</td><td>/animals/{animal}</td><td>更新指定的动物(部分对象)</td></tr><tr><td>GET</td><td>/animal_types</td><td>获取所有动物类型(ID和名称，不要太详细)</td></tr><tr><td>GET</td><td>/animal_types/{type}</td><td>获取指定的动物类型详情</td></tr><tr><td>GET</td><td>/employees</td><td>检索整个雇员列表</td></tr><tr><td>GET</td><td>/employees/{employee}</td><td>检索指定特定的员工</td></tr><tr><td>GET</td><td>/zoos/employees/list</td><td>检索在这个动物园工作的雇员的名单(身份证和姓名)</td></tr><tr><td>POST</td><td>/employees</td><td>新增指定新员工</td></tr><tr><td>POST</td><td>/zoos/{zoo}/employees</td><td>在特定的动物园雇佣一名员工</td></tr><tr><td>DELETE</td><td>/zoos/{zoo}/employees/{employee}</td><td>从某个动物园解雇一名员工</td></tr></tbody></table><blockquote><p>超出 <code>Restful</code> 端点的，<code>应该</code> 模仿上表的方式来定义端点。</p></blockquote><h2 id="Filtering"><a href="#Filtering" class="headerlink" title="Filtering"></a>Filtering</h2><blockquote><p>如果记录数量很多，服务器不可能都将它们返回给用户。API <code>应该</code> 提供参数，过滤返回结果。下面是一些常见的参数。</p></blockquote><ul><li>?limit=10：指定返回记录的数量</li><li>?offset=10：指定返回记录的开始位置。</li><li>?page=2&amp;rows0：指定第几页，以及每页的记录数。</li><li>?order_by=me&amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序。</li><li>?animal_type_id=1：指定筛选条件</li></ul><p>所有 <code>URL</code> 参数 <code>必须</code> 是全小写，<code>必须</code> 使用下划线类型的参数形式。</p><blockquote><p>分页参数 <code>必须</code> 固定为 <code>page</code>、<code>rows</code></p></blockquote><p>经常使用的、复杂的查询 <code>应该</code> 标签化，降低维护成本。如</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET /trades?status=closed&amp;order_by=name&amp;order=asc</span><br><span class="line"></span><br><span class="line"># 可为其定制快捷方式</span><br><span class="line">GET /trades/recently_closed</span><br></pre></td></tr></table></figure><h2 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h2><p><code>应该</code> 使用 <code>OAuth2.0</code> 的方式为 API 调用者提供登录认证。<code>必须</code> 先通过登录接口获取 <code>Access Token</code> 后再通过该 <code>token</code> 调用需要身份认证的 <code>API</code>。</p><p>Oauth 的端点设计示列</p><ul><li>RFC 6749 /token</li><li>Twitter /oauth2/token</li><li>Fackbook /oauth/access_token</li><li>Google /o/oauth2/token</li><li>Github /login/oauth/access_token</li><li>Instagram /oauth/authorize</li></ul><p>客户端在获得 <code>access token</code> 的同时 <code>必须</code> 在响应中包含一个名为 <code>expires_in</code> 的数据，它表示当前获得的 <code>token</code> 会在多少 <code>秒</code> 后失效。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"access_token"</span>: <span class="string">"token...."</span>,</span><br><span class="line">    <span class="attr">"token_type"</span>: <span class="string">"Bearer"</span>,</span><br><span class="line">    <span class="attr">"expires_in"</span>: <span class="number">3600</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>客户端在请求需要认证的 <code>API</code> 时，<code>必须</code> 在请求头 <code>Authorization</code> 中带上 <code>access_token</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Authorization: Bearer token...</span><br></pre></td></tr></table></figure><p>当超过指定的秒数后，<code>access token</code> 就会过期，再次用过期/或无效的 <code>token</code> 访问时，服务端 <code>应该</code> 返回 <code>invalid_token</code> 的错误或 <code>401</code> 错误码。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">401</span> Unauthorized</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-store</span><br><span class="line"><span class="attribute">Pragma</span>: no-cache</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    "error": "invalid_token"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 开发中，<code>应该</code> 使用 <a href="https://github.com/tymondesigns/jwt-auth" target="_blank" rel="noopener">JWT</a> 来为管理你的 Token，并且 <code>一定不可</code> 在 <code>api</code> 中间件中开启请求 <code>session</code>。</p></blockquote><h2 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h2><p>所有的 <code>API</code> 响应，<code>必须</code> 遵守 <code>HTTP</code> 设计规范，<code>必须</code> 选择合适的 <code>HTTP</code> 状态码。<code>一定不可</code> 所有接口都返回状态码为 <code>200</code> 的 <code>HTTP</code> 响应，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 ok</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Server: example.com</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 0,</span><br><span class="line">    &quot;msg&quot;: &quot;success&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;username&quot;: &quot;username&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> ok</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Server</span>: example.com</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    "code": -1,</span><br><span class="line">    "msg": "该活动不存在",</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下表列举了常见的 <code>HTTP</code> 状态码</p><table><thead><tr><th>状态码</th><th>描述</th></tr></thead><tbody><tr><td>1xx</td><td>代表请求已被接受，需要继续处理</td></tr><tr><td>2xx</td><td>请求已成功，请求所希望的响应头或数据体将随此响应返回</td></tr><tr><td>3xx</td><td>重定向</td></tr><tr><td>4xx</td><td>客户端原因引起的错误</td></tr><tr><td>5xx</td><td>服务端原因引起的错误</td></tr></tbody></table><blockquote><p>只有来自客户端的请求被正确的处理后才能返回 <code>2xx</code> 的响应，所以当 API 返回 <code>2xx</code> 类型的状态码时，前端 <code>必须</code> 认定该请求已处理成功</p></blockquote><p>必须强调的是，所有 <code>API</code> <code>一定不可</code> 返回 <code>1xx</code> 类型的状态码。当 <code>API</code> 发生错误时，<code>必须</code> 返回出错时的详细信息。目前常见返回错误信息的方法有两种：</p><p>1、将错误详细放入 <code>HTTP</code> 响应首部；</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">X-MYNAME-ERROR-CODE</span>: 4001</span><br><span class="line"><span class="attribute">X-MYNAME-ERROR-MESSAGE</span>: Bad authentication token</span><br><span class="line"><span class="attribute">X-MYNAME-ERROR-INFO</span>: http://docs.example.com/api/v1/authentication</span><br></pre></td></tr></table></figure><p>2、直接放入响应实体中；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;1.1 401 Unauthorized</span><br><span class="line">Server: nginx&#x2F;1.11.9</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Cache-Control: no-cache, private</span><br><span class="line">Date: Sun, 24 Jun 2018 10:02:59 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;&quot;error_code&quot;:40100,&quot;message&quot;:&quot;Unauthorized&quot;&#125;</span><br></pre></td></tr></table></figure><p>考虑到易读性和客户端的易处理性，我们 <code>必须</code> 把错误信息直接放到响应实体中，并且错误格式 <code>应该</code> 满足如下格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"message"</span>: <span class="string">"您查找的资源不存在"</span>,</span><br><span class="line">    <span class="attr">"error_code"</span>: <span class="number">404001</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中错误码（<code>error_code</code>）<code>必须</code> 和 <code>HTTP</code> 状态码对应，也方便错误码归类，如：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">429</span> Too Many Requests</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 10:15:52 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":429001,"message":"你操作太频繁了"&#125;</span><br></pre></td></tr></table></figure><p><code>应该</code> 在返回的错误信息中，同时包含面向开发者和面向用户的提示信息，前者可方便开发人员调试，后者可直接展示给终端用户查看如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;message&quot;: &quot;直接展示给终端用户的错误信息&quot;,</span><br><span class="line">    &quot;error_code&quot;: &quot;业务错误码&quot;,</span><br><span class="line">    &quot;error&quot;: &quot;供开发者查看的错误信息&quot;,</span><br><span class="line">    &quot;debug&quot;: [</span><br><span class="line">        &quot;错误堆栈，必须开启 debug 才存在&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面详细列举了各种情况 API 的返回说明。</p><h3 id="200-ok"><a href="#200-ok" class="headerlink" title="200 ok"></a>200 ok</h3><p><code>200</code> 状态码是最常见的 <code>HTTP</code> 状态码，在所有 <strong>成功</strong> 的 <code>GET</code> 请求中，<code>必须</code> 返回此状态码。<code>HTTP</code> 响应实体部分 <code>必须</code> 直接就是数据，不要做多余的包装。</p><p>错误示例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> ok</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Server</span>: example.com</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    "user": &#123;</span><br><span class="line">        "id":1,</span><br><span class="line">        "nickname":"fwest",</span><br><span class="line">        "username": "example"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正确示例：</p><p>1、获取单个资源详情</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"username"</span>: <span class="string">"godruoyi"</span>,</span><br><span class="line">    <span class="attr">"age"</span>: <span class="number">88</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、获取资源集合</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"username"</span>: <span class="string">"godruoyi"</span>,</span><br><span class="line">        <span class="attr">"age"</span>: <span class="number">88</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"username"</span>: <span class="string">"foo"</span>,</span><br><span class="line">        <span class="attr">"age"</span>: <span class="number">88</span>,</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>3、额外的媒体信息</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"avatar"</span>: <span class="string">"https://lorempixel.com/640/480/?32556"</span>,</span><br><span class="line">            <span class="attr">"nickname"</span>: <span class="string">"fwest"</span>,</span><br><span class="line">            <span class="attr">"last_logined_time"</span>: <span class="string">"2018-05-29 04:56:43"</span>,</span><br><span class="line">            <span class="attr">"has_registed"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">"avatar"</span>: <span class="string">"https://lorempixel.com/640/480/?86144"</span>,</span><br><span class="line">            <span class="attr">"nickname"</span>: <span class="string">"zschowalter"</span>,</span><br><span class="line">            <span class="attr">"last_logined_time"</span>: <span class="string">"2018-06-16 15:18:34"</span>,</span><br><span class="line">            <span class="attr">"has_registed"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"pagination"</span>: &#123;</span><br><span class="line">            <span class="attr">"total"</span>: <span class="number">101</span>,</span><br><span class="line">            <span class="attr">"count"</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">"per_page"</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">"current_page"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"total_pages"</span>: <span class="number">51</span>,</span><br><span class="line">            <span class="attr">"links"</span>: &#123;</span><br><span class="line">                <span class="attr">"next"</span>: <span class="string">"http://api.example.com?page=2"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>其中，分页和其他额外的媒体信息，必须放到 <code>meta</code> 字段中。</p></blockquote><h3 id="201-Created"><a href="#201-Created" class="headerlink" title="201 Created"></a>201 Created</h3><p>当服务器创建数据成功时，<code>应该</code> 返回此状态码。常见的应用场景是使用 <code>POST</code> 提交用户信息，如：</p><ul><li>添加了新用户</li><li>上传了图片</li><li>创建了新活动</li></ul><p>等，都可以返回 <code>201</code> 状态码。需要注意的是，你可以选择在用户创建成功后返回新用户的数据</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">201</span> Created</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 09:13:40 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    "id": 1,</span><br><span class="line">    "avatar": "https:\/\/lorempixel.com\/640\/480\/?32556",</span><br><span class="line">    "nickname": "fwest",</span><br><span class="line">    "last_logined_time": "2018-05-29 04:56:43",</span><br><span class="line">    "created_at": "2018-06-16 17:55:55",</span><br><span class="line">    "updated_at": "2018-06-16 17:55:55"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以返回一个响应实体为空的 <code>HTTP Response</code> 如：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">201</span> Created</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=UTF-8</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 09:12:20 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br></pre></td></tr></table></figure><blockquote><p>这里我们 <code>应该</code> 采用第二种方式，因为大多数情况下，客户端只需要知道该请求操作成功与否，并不需要返回新资源的信息。</p></blockquote><h3 id="202-Accepted"><a href="#202-Accepted" class="headerlink" title="202 Accepted"></a>202 Accepted</h3><p>该状态码表示服务器已经接受到了来自客户端的请求，但还未开始处理。常用短信发送、邮件通知、模板消息推送等这类很耗时需要队列支持的场景中；</p><blockquote><p>返回该状态码时，响应实体 <code>必须</code> 为空。</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">202</span> Accepted</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=UTF-8</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 09:25:15 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br></pre></td></tr></table></figure><h3 id="204-No-Content"><a href="#204-No-Content" class="headerlink" title="204 No Content"></a>204 No Content</h3><p>该状态码表示响应实体不包含任何数据，其中：</p><ul><li>在使用 <code>DELETE</code> 方法删除资源 <strong>成功</strong> 时，<code>必须</code> 返回该状态码</li><li>使用 <code>PUT</code>、<code>PATCH</code> 方法更新数据 <strong>成功</strong> 时，也 <code>应该</code> 返回此状态码</li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">204</span> No Content</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 09:29:12 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br></pre></td></tr></table></figure><h3 id="3xx-重定向"><a href="#3xx-重定向" class="headerlink" title="3xx 重定向"></a>3xx 重定向</h3><p>所有 <code>API</code> <code>不该</code> 返回 <code>3xx</code> 类型的状态码。因为 <code>3xx</code> 类型的响应格式一般为下列格式：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">302</span> Found</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=UTF-8</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 09:41:50 GMT</span><br><span class="line"><span class="attribute">Location</span>: https://example.com</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset="UTF-8" /&gt;</span><br><span class="line">        &lt;meta http-equiv="refresh" content="0;url=https://example.com" /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;title&gt;Redirecting to https://example.com&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        Redirecting to &lt;a href="https://example.com"&gt;https://example.com&lt;/a&gt;.</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>所有 <code>API</code> <code>一定不可</code> 返回纯 <code>HTML</code> 结构的响应；若一定要使用重定向功能，<code>可以</code> 返回一个响应实体为空的 <code>3xx</code> 响应，并在响应头中加上 <code>Location</code> 字段:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">302</span> Found</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=UTF-8</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 09:52:50 GMT</span><br><span class="line"><span class="attribute">Location</span>: https://godruoyi.com</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br></pre></td></tr></table></figure><h3 id="400-Bad-Request"><a href="#400-Bad-Request" class="headerlink" title="400 Bad Request"></a>400 Bad Request</h3><p>由于明显的客户端错误（例如，请求语法格式错误、无效的请求、无效的签名等），服务器 <code>应该</code> 放弃该请求。</p><blockquote><p>当服务器无法从其他 4xx 类型的状态码中找出合适的来表示错误类型时，都 <code>必须</code> 返回该状态码。</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">400</span> Bad Request</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 13:22:36 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":40000,"message":"无效的签名"&#125;</span><br></pre></td></tr></table></figure><h3 id="401-Unauthorized"><a href="#401-Unauthorized" class="headerlink" title="401 Unauthorized"></a>401 Unauthorized</h3><p>该状态码表示当前请求需要身份认证，以下情况都 <code>必须</code> 返回该状态码。</p><ul><li>未认证用户访问需要认证的 API</li><li>access_token 无效/过期</li></ul><blockquote><p>客户端在收到 <code>401</code> 响应后，都 <code>应该</code> 提示用户进行下一步的登录操作。</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">401</span> Unauthorized</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">WWW-Authenticate</span>: JWTAuth</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 13:17:02 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"message":"Token Signature could not be verified.","error_code": "40100"&#125;</span><br></pre></td></tr></table></figure><h3 id="403-Forbidden"><a href="#403-Forbidden" class="headerlink" title="403 Forbidden"></a>403 Forbidden</h3><p>该状态码可以简单的理解为没有权限访问该请求，服务器收到请求但拒绝提供服务。</p><p>如当普通用户请求操作管理员用户时，<code>必须</code> 返回该状态码。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">403</span> Forbidden</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 13:05:34 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":40301,"message":"权限不足"&#125;</span><br></pre></td></tr></table></figure><h3 id="404-Not-Found"><a href="#404-Not-Found" class="headerlink" title="404 Not Found"></a>404 Not Found</h3><p>该状态码表示用户请求的资源不存在，如</p><ul><li>获取不存在的用户信息 （get /users/9999999）</li><li>访问不存在的端点</li></ul><p>都 <code>必须</code> 返回该状态码，若该资源已永久不存在，则 <code>应该</code> 返回 <code>410</code> 响应。</p><h3 id="405-Method-Not-Allowed"><a href="#405-Method-Not-Allowed" class="headerlink" title="405 Method Not Allowed"></a>405 Method Not Allowed</h3><p>当客户端使用的 <code>HTTP</code> 请求方法不被服务器允许时，<code>必须</code> 返回该状态码。</p><blockquote><p>如客户端调用了 <code>POST</code> 方法来访问只支持 GET 方法的 API</p></blockquote><p>该响应 <code>必须</code> 返回一个 <code>Allow</code> 头信息用以表示出当前资源能够接受的请求方法的列表。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">405</span> Method Not Allowed</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Allow</span>: GET, HEAD</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 12:30:57 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"message":"405 Method Not Allowed","error_code": 40500&#125;</span><br></pre></td></tr></table></figure><h3 id="406-Not-Acceptable"><a href="#406-Not-Acceptable" class="headerlink" title="406 Not Acceptable"></a>406 Not Acceptable</h3><p><code>API</code> 在不支持客户端指定的数据格式时，应该返回此状态码。如支持 <code>JSON</code> 和 <code>XML</code> 输出的 <code>API</code> 被指定返回 <code>YAML</code> 格式的数据时。</p><blockquote><p>Http 协议一般通过请求首部的 Accept 来指定数据格式</p></blockquote><h3 id="408-Request-Timeout"><a href="#408-Request-Timeout" class="headerlink" title="408 Request Timeout"></a>408 Request Timeout</h3><p>客户端请求超时时 <code>必须</code> 返回该状态码，需要注意的时，该状态码表示 <strong>客户端请求超时</strong>，在涉及第三方 <code>API</code> 调用超时时，<code>一定不可</code> 返回该状态码。</p><h3 id="409-Confilct"><a href="#409-Confilct" class="headerlink" title="409 Confilct"></a>409 Confilct</h3><p>该状态码表示因为请求存在冲突无法处理。如通过手机号码提供注册功能的 <code>API</code>，当用户提交的手机号已存在时，<code>必须</code> 返回此状态码。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">409</span> Conflict</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 12:19:04 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":40900,"message":"手机号已存在"&#125;</span><br></pre></td></tr></table></figure><h3 id="410-Gone"><a href="#410-Gone" class="headerlink" title="410 Gone"></a>410 Gone</h3><p>和 <code>404</code> 类似，该状态码也表示请求的资源不存在，只是 <code>410</code> 状态码进一步表示所请求的资源已不存在，并且未来也不会存在。在收到 <code>410</code> 状态码后，客户端 <code>应该</code> 停止再次请求该资源。</p><h3 id="413-Request-Entity-Too-Large"><a href="#413-Request-Entity-Too-Large" class="headerlink" title="413 Request Entity Too Large"></a>413 Request Entity Too Large</h3><p>该状态码表示服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。</p><blockquote><p>此种情况下，服务器可以关闭连接以免客户端继续发送此请求。</p></blockquote><p>如果这个状况是临时的，服务器 <code>应该</code> 返回一个 <code>Retry-After</code> 的响应头，以告知客户端可以在多少时间以后重新尝试。</p><h3 id="414-Request-URI-Too-Long"><a href="#414-Request-URI-Too-Long" class="headerlink" title="414 Request-URI Too Long"></a>414 Request-URI Too Long</h3><p>该状态码表示请求的 <code>URI</code> 长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。</p><h3 id="415-Unsupported-Media-Type"><a href="#415-Unsupported-Media-Type" class="headerlink" title="415 Unsupported Media Type"></a>415 Unsupported Media Type</h3><p>通常表示服务器不支持客户端请求首部 <code>Content-Type</code> 指定的数据格式。如在只接受 <code>JSON</code> 格式的 <code>API</code> 中放入 <code>XML</code> 类型的数据并向服务器发送，都 <code>应该</code> 返回该状态码。</p><p>该状态码也可用于如：只允许上传图片格式的文件，但是客户端提交媒体文件非法或不是图片类型，这时 <code>应该</code> 返回该状态码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">415</span> Unsupported Media Type</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 12:09:40 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":41500,"message":"不允许上传的图片格式"&#125;</span><br></pre></td></tr></table></figure><h3 id="429-Too-Many-Requests"><a href="#429-Too-Many-Requests" class="headerlink" title="429 Too Many Requests"></a>429 Too Many Requests</h3><p>该状态码表示用户请求次数超过允许范围。如 <code>API</code> 设定为 <code>60次/分钟</code>，当用户在一分钟内请求次数超过 60 次后，都 <code>应该</code> 返回该状态码。并且也 <code>应该</code> 在响应首部中加上下列头部：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">X-RateLimit-Limit</span>: 10 请求速率（由应用设定，其单位一般为小时/分钟等，这里是 10次/5分钟）</span><br><span class="line"><span class="attribute">X-RateLimit-Remaining</span>: 0 当前剩余的请求数量</span><br><span class="line"><span class="attribute">X-RateLimit-Reset</span>: 1529839462 重置时间</span><br><span class="line"><span class="attribute">Retry-After</span>: 120 下一次访问应该等待的时间（秒）</span><br></pre></td></tr></table></figure><p>列子</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">429</span> Too Many Requests</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">X-RateLimit-Limit</span>: 10</span><br><span class="line"><span class="attribute">X-RateLimit-Remaining</span>: 0</span><br><span class="line"><span class="attribute">X-RateLimit-Reset</span>: 1529839462</span><br><span class="line"><span class="attribute">Retry-After</span>: 290</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 11:19:32 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"message":"You have exceeded your rate limit.","error_code":42900&#125;</span><br></pre></td></tr></table></figure><p><code>必须</code> 为所有的 API 设置 Rate Limit 支持。</p><h3 id="500-Internal-Server-Error"><a href="#500-Internal-Server-Error" class="headerlink" title="500 Internal Server Error"></a>500 Internal Server Error</h3><p>该状态码 <code>必须</code> 在服务器出错时抛出，对于所有的 <code>500</code> 错误，都 <code>应该</code> 提供完整的错误信息支持，也方便跟踪调试。</p><h3 id="503-Service-Unavailable"><a href="#503-Service-Unavailable" class="headerlink" title="503 Service Unavailable"></a>503 Service Unavailable</h3><p>该状态码表示服务器暂时处理不可用状态，当服务器需要维护或第三方 <code>API</code> 请求超时/不可达时，都 <code>应该</code> 返回该状态码，其中若是主动关闭 API 服务，<code>应该</code>在返回的响应首部加上 <code>Retry-After</code> 头部，表示多少秒后可以再次访问。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">503</span> Service Unavailable</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 10:56:20 GMT</span><br><span class="line"><span class="attribute">Retry-After</span>: 60</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":50300,"message":"服务维护中"&#125;</span><br></pre></td></tr></table></figure><p>其他 <code>HTTP</code> 状态码请参考 <a href="https://zh.wikipedia.org/zh-hans/HTTP状态码" target="_blank" rel="noopener">HTTP 状态码- 维基百科</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> 接口规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API设计规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx开启gzip、gzip_static 加速你的应用</title>
      <link href="/2019/08/06/%E8%BF%90%E7%BB%B4/nginx%E5%BC%80%E5%90%AFgzip%20gzip_static/"/>
      <url>/2019/08/06/%E8%BF%90%E7%BB%B4/nginx%E5%BC%80%E5%90%AFgzip%20gzip_static/</url>
      
        <content type="html"><![CDATA[<h3 id="nginx开启gzip、gzip-static-加速你的应用"><a href="#nginx开启gzip、gzip-static-加速你的应用" class="headerlink" title="nginx开启gzip、gzip_static 加速你的应用"></a>nginx开启gzip、gzip_static 加速你的应用</h3><p>[TOC]</p><h4 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h4><p><code>gzip</code>属于在线压缩，在资源通过<code>http</code>发送报文给客户端的过程中，进行压缩，可以减少客户端带宽占用，减少文件传输大小。</p><p>一般写在<code>server</code>或者<code>location</code>均可；</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">6002</span>;</span><br><span class="line"><span class="attribute">server_name</span> **.<span class="number">234</span>.<span class="number">133</span>.**;</span><br><span class="line"></span><br><span class="line"><span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">gzip_proxied</span> any;</span><br><span class="line">gzip_types</span><br><span class="line">text/css</span><br><span class="line">text/javascript</span><br><span class="line">text/xml</span><br><span class="line">text/plain</span><br><span class="line">image/x-icon</span><br><span class="line">application/javascript</span><br><span class="line">application/x-javascript</span><br><span class="line">application/json;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>不开启gzip:</p></blockquote><p><img src="/images/1568810872445.png" alt="1568810872445"></p><p>这个时候 <code>298KB</code> 左右；</p><blockquote><p>开启gzip:</p></blockquote><p><img src="/images/1568811020029.png" alt="1568811020029"></p><p><img src="/images/1568811044342.png" alt="1568811044342"></p><p>开启之后，<code>Content-Encoding: gzip; ETag: W/&quot;~~~&quot;;</code><br>这里的<code>ETag</code>中的 <code>W\</code> 就是区分是否是在线写入压缩的标识；</p><p>开启<code>gzip</code>，<code>298KB</code> 可以减少到 <code>104KB</code>，效率还是不错的；<br>只是在线<code>gzip</code>比较占用<code>CPU</code>，相比<code>gzip_static</code>还是不太好。</p><h4 id="gzip-static"><a href="#gzip-static" class="headerlink" title="gzip_static"></a>gzip_static</h4><p>在前端代码打包构建<code>bundle</code>的时候，一般都有根据一定的算法自动压缩代码成<code>gz</code>文件的<code>webpack</code>插件;</p><p>当我们不在 <code>nginx</code> 开启 <code>gzip_static</code>的时候，发现生产的<code>gz</code>文件并没有被运行；</p><p><code>gzip_static</code>是会自动执行<code>gz</code>文件的，这样的就避免了通过<code>gzip</code>自动压缩；</p><p>比如上面图片的资源：</p><p><img src="/images/1568811548745.png" alt="1568811548745"></p><p>我们上面讲到通过<code>gzip</code>自动压缩是 <code>104KB</code>，而我们自己压缩的是<code>90KB</code>，所有如果运行了我们自己的<code>gz</code>文件，会更好。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">gzip_static</span> <span class="literal">on</span>;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20190918223750703.png" alt="image-20190918223750703"></p><p><img src="/images/image-20190918223809667.png" alt="image-20190918223809667"></p><p><code>ETag</code>里面没有 <code>\W</code>, 就是使用的是我们自己的<code>gz</code>文件的，比<code>gzip</code>自动压缩的还减少了<code>10KB</code>；</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx服务器配置React的Browser路由模式，并避免出现404</title>
      <link href="/2019/08/06/%E8%BF%90%E7%BB%B4/nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEReact%E7%9A%84Browser%E8%B7%AF%E7%94%B1%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/08/06/%E8%BF%90%E7%BB%B4/nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEReact%E7%9A%84Browser%E8%B7%AF%E7%94%B1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="nginx服务器配置React的Browser路由模式，并避免出现404"><a href="#nginx服务器配置React的Browser路由模式，并避免出现404" class="headerlink" title="nginx服务器配置React的Browser路由模式，并避免出现404"></a>nginx服务器配置React的Browser路由模式，并避免出现404</h3><p>[TOC]</p><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>React路由模式分为两种：</p><blockquote><p>hashHistory:</p><p>比如 <a href="http://localhost:8080/#/login" target="_blank" rel="noopener">http://localhost:8080/#/login</a></p><p>browserHistory</p><p>比如 <a href="http://localhost:8080/login" target="_blank" rel="noopener">http://localhost:8080/login</a></p></blockquote><p><code>browserHistory</code>的好处大于<code>hashHistory</code>, 但是麻烦的地方就是，<code>browserHistory</code>路由模式，需要服务器的配置：</p><p>请求 <a href="http://localhost:8080/login" target="_blank" rel="noopener">http://localhost:8080/login</a> 上的资源的时候，服务器会默认搜索当前目录下的<code>login</code>文件夹里的资源。但是<code>logIn</code>这个目录其实是不存在的，往往在刷新浏览器的时候，会==404Not fund==；</p><p>所以需要利用 nginx 里面的 <code>try_files</code> 去指定一个 <code>fall back</code>资源；</p><h4 id="1、React-router配置"><a href="#1、React-router配置" class="headerlink" title="1、React router配置"></a>1、React router配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Route, Switch, BrowserRouter <span class="keyword">as</span> Router &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'@pages/App'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">About</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'about'</span>, props);</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>page: about<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由配置</span></span><br><span class="line"><span class="keyword">const</span> routerConfig = [</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">'/'</span>,</span><br><span class="line">        component: App</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">'/about'</span>,</span><br><span class="line">        component: About</span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">AppRouter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="comment">// 只有当你的应用部署到服务器的二级目录的时候，才需要设置basename</span></span><br><span class="line">        &lt;Router basename=<span class="string">"/react"</span>&gt;</span><br><span class="line">            &lt;Switch&gt;</span><br><span class="line">                &#123;routerConfig.map(<span class="function"><span class="params">n</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;n.path&#125;</span> <span class="attr">exact</span> <span class="attr">component</span>=<span class="string">&#123;n.component&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span>;</span><br><span class="line">                &#125;)&#125;</span><br><span class="line">            &lt;<span class="regexp">/Switch&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>Router&gt;</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> AppRouter;</span><br></pre></td></tr></table></figure><p>我这里在服务器配置了二级目录 <code>react</code>    作为请求目录，所以这里的 basename 需要配置成  <code>/react</code>。如果你的静态资源已经是在根目录是不需要设置这个的。</p><p>启动本地服务：</p><p><img src="/.io//images1568608865270.png" alt="1568608865270"></p><p>这个时候从首页点击跳到 <code>about</code> ，就能看到这种路由模式的路径了；</p><p>此时如果你刷新了浏览器，将会提示找不到<code>about</code>目录：</p><p><img src="/.io//images1568609309790.png" alt="1568609309790"></p><p>此时可以在<code>webpack.config.js</code>里面增加：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">devServer &#123;</span><br><span class="line">historyApiFallback: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>webpack</code> 里面的 <code>historyApiFallback</code> 使用的是<code>connect-history-api-fallback</code>:</p><p>重启本地服务，再次刷新正常。</p><blockquote><p>关于 connect-history-api-fallback</p><p>单页应用(SPA)一般只有一个index.html, 导航的跳转都是基于<a href="http://www.w3.org/html/wg/drafts/html/master/single-page.html#the-history-interface" target="_blank" rel="noopener">HTML5 History API</a>，当用户在越过index.html 页面直接访问这个地址或是通过浏览器的刷新按钮重新获取时，就会出现404问题；</p><p>比如 直接访问<code>/login</code>,  <code>/login/online</code>，这时候越过了index.html，去查找这个地址下的文件。由于这是个一个单页应用，最终结果肯定是查找失败，返回一个404错误。</p><p><strong>这个中间件就是用来解决这个问题的</strong>；</p><p>只要满足下面四个条件之一，这个中间件就会改变请求的地址，指向到默认的<code>index.html</code>:</p><blockquote><p>1 <code>GET请求</code></p><p>2  接受内容格式为<code>text/html</code></p><p>3 不是一个直接的文件请求，比如路径中不带有 <code>.</code></p><p>4 没有 <code>options.rewrites</code> 里的正则匹配</p></blockquote></blockquote><h4 id="2、nginx-配置"><a href="#2、nginx-配置" class="headerlink" title="2、nginx 配置"></a>2、nginx 配置</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /react &#123;</span><br><span class="line">    <span class="attribute">alias</span> /project/react/;</span><br><span class="line">    <span class="comment"># browserHistory模式 404问题</span></span><br><span class="line">    <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /react/index.html;</span><br><span class="line">    <span class="attribute">index</span> index.html;</span><br><span class="line">    <span class="attribute">autoindex</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="string">'*'</span>;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Methods <span class="string">'GET, POST, PUT, OPTIONS'</span>;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Expose-Headers <span class="string">'Accept-Ranges, Content-Encoding, Content-Length, Content-Range'</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>autoindex on; 开启这个，输入到/react 会直接定向到index.html;</p><p>try_files 主要解决的是，如果在一些目录下找不到 index.html， 会最终有一个保底资源的路径就是 /react/index.html；</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /react/index.html;</span><br></pre></td></tr></table></figure><blockquote><p>浏览器输入 <a href="http://62.234.133.41:6002/react/about" target="_blank" rel="noopener">http://62.234.133.41:6002/react/about</a></p><p>会先查找 <a href="http://62.234.133.41:6002/react/about" target="_blank" rel="noopener">http://62.234.133.41:6002/react/about</a> 是否有文件about.html存在；再查找<code>/about/</code>下是否有文件存在，如果都不存在，启动 <code>/react/index.html</code>;</p></blockquote><p>==try_files 增加 $uri/ 可以解决 <code>try_files</code> 和<code>autoindex</code>同时存在的时候，再输入<code>/react</code>不会自动定向到<code>index.html</code>的问题==；</p><h4 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h4><ol><li><p><a href="https://github.com/bripkens/connect-history-api-fallback" target="_blank" rel="noopener">https://github.com/bripkens/connect-history-api-fallback</a></p></li><li><p><a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files" target="_blank" rel="noopener">http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求人不如求已系列工具：如何PSD文件自动标注切图和真机预览</title>
      <link href="/2019/07/14/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%88%87%E5%9B%BE%E4%B8%8D%E6%B1%82%E4%BA%BA%E7%B3%BB%E5%88%97%E4%B9%8B%E8%93%9D%E6%B9%96/"/>
      <url>/2019/07/14/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%88%87%E5%9B%BE%E4%B8%8D%E6%B1%82%E4%BA%BA%E7%B3%BB%E5%88%97%E4%B9%8B%E8%93%9D%E6%B9%96/</url>
      
        <content type="html"><![CDATA[<h3 id="求人不如求已系列工具：如何PSD文件自动标注切图和真机预览"><a href="#求人不如求已系列工具：如何PSD文件自动标注切图和真机预览" class="headerlink" title="求人不如求已系列工具：如何PSD文件自动标注切图和真机预览"></a>求人不如求已系列工具：如何PSD文件自动标注切图和真机预览</h3><p>[TOC]</p><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>在很多时候，UI会给一部分切图，当你使用一个新的技术，需要的不再是png而是webp或者SVG时候，沟通变得异常复杂，沟通成本急剧增加。</p><p>很多时候在想，是否有一些工具，可以帮助我们解决这个尴尬的问题，也可以减少沟通成本；</p><p>当然很多公司专业的UI会通过专业工具Stetch帮你生成一套完成的UI备注文件。</p><p>可惜，有些时候，并没有。</p><p>所以，经过一些摸索，发现了一些比较不错的工具，来提高我们工作的效率；</p><p>废话不多说，开始介绍。</p><h4 id="蓝湖工具"><a href="#蓝湖工具" class="headerlink" title="蓝湖工具"></a>蓝湖工具</h4><p>如上所有，如果没有UI帮你做或者没时间做UI备注，我们就采取其他的在线模式；</p><p>在线工具就是<code>蓝湖</code></p><p><img src="/images/1572584058545.png" alt="1572584058545"></p><h5 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h5><p>注册一个免费账号</p><h5 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h5><p>ps应用商店下载蓝湖插件</p><p><img src="/images/1572584243307.png" alt="1572584243307"></p><p><img src="/images/1572584340880.png" alt="1572584340880"></p><p><a href="https://lanhuapp.com/ps?comeFrom=%E9%A1%B9%E7%9B%AE%E5%88%97%E8%A1%A8_%E5%8F%B3%E4%B8%8A" target="_blank" rel="noopener">Adobe Photoshop 插件下载</a></p><p><img src="/images/1572584396001.png" alt="1572584396001"></p><p><img src="/images/1572584534322.png" alt="1572584534322"></p><p>ps中点击蓝湖工具，然后登陆</p><p><img src="/images/1572584589448.png" alt="1572584589448"></p><h5 id="自动备注"><a href="#自动备注" class="headerlink" title="自动备注"></a>自动备注</h5><blockquote><p>当我们只需要获取自动备注的时候，点击上传面板</p></blockquote><p><img src="/images/1572584662525.png" alt="1572584662525"></p><p><img src="/images/1572584697681.png" alt="1572584697681"></p><p><img src="/images/1572584714320.png" alt="1572584714320"></p><p>点击去web端查看按钮，可以跳转到蓝湖网页版</p><p><img src="/images/1572584773187.png" alt="1572584773187"></p><p><img src="/images/1572584805139.png" alt="1572584805139"></p><p>右边的各种备注信息一览无余，很是方便。</p><h5 id="切图"><a href="#切图" class="headerlink" title="切图"></a>切图</h5><blockquote><p>当你需要生成切图时候，如下图一步步操作</p></blockquote><p><img src="/images/1572585054240.png" alt="1572585054240"></p><p>双击psd源文件，选中ICON图层，点击标记为切图</p><p><img src="/images/1572585107165.png" alt="1572585107165"></p><p><img src="/images/1572585128333.png" alt="1572585128333"></p><p><img src="/images/1572585175075.png" alt="1572585175075"></p><p><img src="/images/1572585187356.png" alt="1572585187356"></p><p><img src="/images/1572585200521.png" alt="1572585200521"></p><p><img src="/images/1572585228126.png" alt="1572585228126"></p><p><img src="/images/1572585256584.png" alt="1572585256584"></p><p><img src="/images/1572585347250.png" alt="1572585347250"></p><h5 id="手机预览psd源文件"><a href="#手机预览psd源文件" class="headerlink" title="手机预览psd源文件"></a>手机预览psd源文件</h5><p>当你之前都已经把PSD文件上传到蓝湖后，appstore下载蓝湖APP，之后就可以直接预览psd文件了</p><p><img src="/images/1572585888368.png" alt="1572585888368"></p><h4 id="Design-Mirror"><a href="#Design-Mirror" class="headerlink" title="Design Mirror"></a>Design Mirror</h4><p><img src="/images/1572586034557.png" alt="1572586034557"></p><p><a href="http://www.psmirror.net/en/install" target="_blank" rel="noopener">下载地址</a></p><p>首先下载 photoshop 插件, 然后下载 app，然后在ps里面登录注册好的账号，通过wifi或者USB，就可以app里面预览</p><p><img src="/images/1572586886728.png" alt="1572586886728"></p><p><img src="/images/1572587039851.png" alt="1572587039851"></p><p><img src="/images/1572587003083.png" alt="1572587003083"></p><p>这个预览和上一个蓝湖预览最大的不同就是这个完全是本地预览，不需要上传，比较方便。</p><p><img src="/images/1572587155495.png" alt="1572587155495"></p><p><code>甚至还可以点击上传图片，把手机上的图片同步到photoshop</code>, 这个挺不错的</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PSD切图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端/前端规范</title>
      <link href="/2019/07/14/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/"/>
      <url>/2019/07/14/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h2 id="前端代码规范"><a href="#前端代码规范" class="headerlink" title="前端代码规范"></a>前端代码规范</h2><p>[TOC]</p><h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h3><p>随着团队人数的增加，每个人的代码编写喜好不同，代码风格也迥然不同。如果有一个大家的统一的愿意遵守的代码规范，肯定事半功倍，提高效率，避免代码<code>Review</code>和<code>重构</code>。</p><p>目前这只是一个基础的版本，如果有哪些规则不太好，大家可以提出<code>issues</code> 然后一起沟通协商规则。</p><p>其中一部分规则参考了 腾讯<code>alloyteam</code>团队的代码规范，如有错误，请指出，将会非常感谢。</p><p>坚持好的代码风格规范，从你我做起。</p><h3 id="2-命名规范"><a href="#2-命名规范" class="headerlink" title="2 命名规范"></a>2 命名规范</h3><h4 id="1-项目命名"><a href="#1-项目命名" class="headerlink" title="1) 项目命名"></a>1) 项目命名</h4><p>全部采用小写方式， 以下划线分隔。</p><p>例：<code>my_project_name</code></p><h4 id="2-目录命名"><a href="#2-目录命名" class="headerlink" title="2 )目录命名"></a>2 )目录命名</h4><p>参照项目命名规则；</p><p>有复数结构时，要采用复数命名法。</p><p>例：<code>pages</code>, <code>assets</code>, <code>directives</code>, <code>components</code>, <code>mixins</code>, <code>utils</code></p><h4 id="3-javaScript-文件命名"><a href="#3-javaScript-文件命名" class="headerlink" title="3)javaScript 文件命名"></a>3)<code>javaScript</code> 文件命名</h4><p>参照项目命名规则。</p><p>例：<code>account_model.js</code></p><h4 id="4-CSS-less文件命名"><a href="#4-CSS-less文件命名" class="headerlink" title="4)CSS,less文件命名"></a>4)<code>CSS</code>,<code>less</code>文件命名</h4><p>参照项目命名规则。</p><p>例：<code>retina_sprites.less</code></p><h4 id="5-HTML文件命名"><a href="#5-HTML文件命名" class="headerlink" title="5)HTML文件命名"></a>5)HTML文件命名</h4><p>参照项目命名规则。</p><p>例：<code>error_report.html</code></p><h4 id="6-如果使用Vue或者React技术栈，组件Component命名"><a href="#6-如果使用Vue或者React技术栈，组件Component命名" class="headerlink" title="6) 如果使用Vue或者React技术栈，组件Component命名"></a>6) 如果使用<code>Vue</code>或者<code>React</code>技术栈，组件<code>Component</code>命名</h4><p>所有组件名字需要首字母大写，然后驼峰格式</p><p>例：<code>CalendarList.vue</code></p><h3 id="3-HTML"><a href="#3-HTML" class="headerlink" title="3 HTML"></a>3 HTML</h3><h4 id="1-语法"><a href="#1-语法" class="headerlink" title="1) 语法"></a>1) 语法</h4><ul><li>缩进使用soft tab（4个空格）；</li><li>嵌套的节点应该缩进；</li><li>在属性上，使用双引号，不要使用单引号；</li><li>属性名全小写，用中划线做分隔符；</li><li>不要在自动闭合标签结尾处使用斜线（<a href="http://dev.w3.org/html5/spec-author-view/syntax.html#syntax-start-tag" target="_blank" rel="noopener">HTML5 规范</a> 指出他们是可选的）；</li><li>不要忽略可选的关闭标签;</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/company_logo.png"</span> <span class="attr">alt</span>=<span class="string">"Company"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"hello-world"</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-HTML5-doctype"><a href="#2-HTML5-doctype" class="headerlink" title="2) HTML5 doctype"></a>2) HTML5 doctype</h4><p>在页面开头使用这个简单地doctype来启用标准模式，使其在每个浏览器中尽可能一致的展现；</p><p>虽然doctype不区分大小写，但是按照惯例，doctype大写 （<a href="http://stackoverflow.com/questions/15594877/is-there-any-benefits-to-use-uppercase-or-lowercase-letters-with-html5-tagname" target="_blank" rel="noopener">关于html属性，大写还是小写</a>）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-lang属性"><a href="#3-lang属性" class="headerlink" title="3) lang属性"></a>3) lang属性</h4><p>根据HTML5规范：</p><blockquote><p>应在html标签上加上lang属性。这会给语音工具和翻译工具帮助，告诉它们应当怎么去发音和翻译。</p></blockquote><p>更多关于 <code>lang</code> 属性的说明<a href="http://www.w3.org/html/wg/drafts/html/master/semantics.html#the-html-element" target="_blank" rel="noopener">在这里</a>；</p><p>在sitepoint上可以查到<a href="http://reference.sitepoint.com/html/lang-codes" target="_blank" rel="noopener">语言列表</a>；</p><p>但sitepoint只是给出了语言的大类，例如中文只给出了zh，但是没有区分香港，台湾，大陆。而微软给出了一份更加<a href="http://msdn.microsoft.com/en-us/library/ms533052(v=vs.85).aspx" target="_blank" rel="noopener">详细的语言列表</a>，其中细分了zh-cn, zh-hk, zh-tw。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en-us"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-字符编码"><a href="#4-字符编码" class="headerlink" title="4) 字符编码"></a>4) 字符编码</h4><p>通过声明一个明确的字符编码，让浏览器轻松、快速的确定适合网页内容的渲染方式，通常指定为’UTF-8’。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-IE兼容模式"><a href="#5-IE兼容模式" class="headerlink" title="5) IE兼容模式"></a>5) IE兼容模式</h4><p>用 `` 标签可以指定页面应该用什么版本的IE来渲染；</p><p>如果你想要了解更多，请点击<a href="http://stackoverflow.com/questions/6771258/whats-the-difference-if-meta-http-equiv-x-ua-compatible-content-ie-edge-e" target="_blank" rel="noopener">这里</a>；</p><p>不同doctype在不同浏览器下会触发不同的渲染模式（<a href="https://hsivonen.fi/doctype/" target="_blank" rel="noopener">这篇文章</a>总结的很到位）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=Edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-引入CSS-JS"><a href="#6-引入CSS-JS" class="headerlink" title="6) 引入CSS, JS"></a>6) 引入CSS, JS</h4><p>根据HTML5规范, 通常在引入CSS和JS时不需要指明 <code>type</code>，因为 <code>text/css</code>和 <code>text/javascript</code> 分别是他们的默认值。</p><p><strong>HTML5 规范链接</strong></p><ul><li><a href="http://www.w3.org/TR/2011/WD-html5-20110525/semantics.html#the-link-element" target="_blank" rel="noopener">使用link</a></li><li><a href="http://www.w3.org/TR/2011/WD-html5-20110525/semantics.html#the-style-element" target="_blank" rel="noopener">使用style</a></li><li><a href="http://www.w3.org/TR/2011/WD-html5-20110525/scripting-1.html#the-script-element" target="_blank" rel="noopener">使用script</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- External CSS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"code_guide.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- In-document CSS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- External JS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"code_guide.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- In-document JS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="7-属性顺序"><a href="#7-属性顺序" class="headerlink" title="7) 属性顺序"></a>7) 属性顺序</h4><p>属性应该按照特定的顺序出现以保证易读性；</p><ul><li><code>class</code></li><li><code>id</code></li><li><code>name</code></li><li><code>data-*</code></li><li><code>src</code>, <code>for</code>, <code>type</code>, <code>href</code>, <code>value</code> , <code>max-length</code>, <code>max</code>, <code>min</code>, <code>pattern</code></li><li><code>placeholder</code>, <code>title</code>, <code>alt</code></li><li><code>aria-*</code>, <code>role</code></li><li><code>required</code>, <code>readonly</code>, <code>disabled</code></li></ul><p><code>class</code>是为高可复用组件设计的，所以应处在第一位；</p><p><code>id</code> 具体且应该尽量少使用，所以将它放在第二位。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"..."</span> <span class="attr">id</span>=<span class="string">"..."</span> <span class="attr">data-modal</span>=<span class="string">"toggle"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Example link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"..."</span> <span class="attr">alt</span>=<span class="string">"..."</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="8-boolean属性"><a href="#8-boolean属性" class="headerlink" title="8) boolean属性"></a>8) boolean属性</h4><p>boolean属性指不需要声明取值的属性，XHTML需要每个属性声明取值，但是HTML5并不需要；</p><p>更多内容可以参考 <a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#boolean-attributes" target="_blank" rel="noopener">WhatWG section on boolean attributes</a>：</p><blockquote><p>boolean属性的存在表示取值为true，不存在则表示取值为false。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">selected</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="9-JS生成标签"><a href="#9-JS生成标签" class="headerlink" title="9) JS生成标签"></a>9) JS生成标签</h4><p>在JS文件中生成标签让内容变得更难查找，更难编辑，性能更差。应该尽量避免这种情况的出现。</p><h4 id="10-减少标签数量"><a href="#10-减少标签数量" class="headerlink" title="10) 减少标签数量"></a>10) 减少标签数量</h4><p>在编写HTML代码时，需要尽量避免多余的父节点；</p><p>很多时候，需要通过迭代和重构来使HTML变得更少。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 不建议这么做 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 建议这么做 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"avatar"</span> <span class="attr">src</span>=<span class="string">"..."</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="11-实用高于完美"><a href="#11-实用高于完美" class="headerlink" title="11) 实用高于完美"></a>11) 实用高于完美</h4><p>尽量遵循HTML标准和语义，但是不应该以浪费实用性作为代价；</p><p>任何时候都要用尽量小的复杂度和尽量少的标签来解决问题。</p><h3 id="4-css、less"><a href="#4-css、less" class="headerlink" title="4 css、less"></a>4 css、less</h3><h4 id="1-缩进"><a href="#1-缩进" class="headerlink" title="1) 缩进"></a>1) 缩进</h4><p>使用soft tab（4个空格）</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-分号"><a href="#2-分号" class="headerlink" title="2)分号"></a>2)分号</h4><p>每个属性声明末尾都要加分号。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-空格"><a href="#3-空格" class="headerlink" title="3)空格"></a>3)空格</h4><p>以下几种情况不需要空格：</p><ul><li>属性名后</li><li>多个规则的分隔符’,’前</li><li><code>!important</code> ‘!’后</li><li>属性值中’(‘后和’)’前</li><li>行末不要有多余的空格</li></ul><p>以下几种情况需要空格：</p><ul><li>属性值前</li><li>选择器’&gt;’, ‘+’, ‘~’前后</li><li>‘{‘前</li><li><code>!important</code> ‘!’前</li><li><code>@else</code> 前后</li><li>属性值中的’,’后</li><li>注释’/<em>‘后和’</em>/‘前</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">color </span>:red! important;</span><br><span class="line">    <span class="attribute">background-color</span>: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> ,</span><br><span class="line"><span class="selector-class">.dialog</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span>,</span><br><span class="line"><span class="selector-class">.dialog</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span>&gt;<span class="selector-class">.dialog</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> &gt; <span class="selector-class">.dialog</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="variable">@debug:</span> true;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: (yellow)when(<span class="variable">@debug</span> = true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: (yellow) when (<span class="variable">@debug</span> = true);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-空行"><a href="#4-空行" class="headerlink" title="4) 空行"></a>4) 空行</h4><p>以下几种情况需要空行：</p><ul><li>文件最后保留一个空行</li><li>‘}’后最好跟一个空行，包括scss中嵌套的规则</li><li>属性之间需要适当的空行，具体见<a href="http://alloyteam.github.io/CodeGuide/#css-declaration-order" target="_blank" rel="noopener">属性声明顺序</a></li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.dialog</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.dialog</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-注释"><a href="#5-注释" class="headerlink" title="5) 注释"></a>5) 注释</h4><p>注释统一用’/* */‘（scss中也不要用’//‘），具体参照右边的写法；</p><p>缩进与下一行代码保持一致；</p><p>可位于一个代码行的末尾，与代码间隔一个空格。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Modal header */</span></span><br><span class="line"><span class="selector-class">.modal-header</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Modal header</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-class">.modal-header</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.modal-header</span> &#123;</span><br><span class="line">    <span class="comment">/* 50px */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">color</span>: red; <span class="comment">/* color red */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-引号"><a href="#6-引号" class="headerlink" title="6) 引号"></a>6) 引号</h4><p>最外层统一使用双引号；</p><p>url的内容要用引号；</p><p>属性选择器中的属性值需要引号。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: url(<span class="string">"logo.png"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-attr">[data-type="single"]</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-命名"><a href="#7-命名" class="headerlink" title="7)命名"></a>7)<code>命名</code></h4><ul><li>类名使用<code>小写字母</code>，以<code>中划线</code>分隔</li><li>id采用<code>驼峰式</code>命名</li><li><code>less</code>中的变量、函数以<code>中划线</code>分隔命名</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* class */</span></span><br><span class="line"><span class="selector-class">.element-content</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* id */</span></span><br><span class="line"><span class="selector-id">#myDialog</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 变量 */</span></span><br><span class="line"><span class="variable">@color-black:</span> <span class="number">#000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* mixins */</span></span><br><span class="line"><span class="selector-class">.my-mixin</span>() &#123;</span><br><span class="line">  <span class="attribute">color</span>: black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-属性声明顺序"><a href="#8-属性声明顺序" class="headerlink" title="8)属性声明顺序"></a>8)<code>属性声明顺序</code></h4><p>相关的属性声明按右边的顺序做分组处理，组之间需要有一个空行。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.declaration-order</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e5e5e5</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">font</span>: normal <span class="number">13px</span> <span class="string">"Helvetica Neue"</span>, sans-serif;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>书写顺序前后</code>为：</p><p>（1）<code>定位属性</code>：position  display  float  left  top  right  bottom   overflow  clear   z-index</p><p>（2）<code>自身属性</code>：width  height  padding  border  margin   background</p><p>（3）<code>文字样式</code>：font-family   font-size   font-style   font-weight   font-varient   color</p><p>（4）<code>文本属性</code>text-align   vertical-align   text-wrap   text-transform   text-indent    text-decoration   letter-spacing    word-spacing    white-space   text-overflow</p><p><strong>目的</strong>：减少浏览器reflow（回流），提升浏览器渲染dom的性能</p><p><code>原理：浏览器的渲染流程为：</code></p><p>1、解析html构建dom树，解析css构建css树：将html解析成树形的数据结构，将css解析成树形的数据结构</p><p>2、构建render树：DOM树和CSS树合并之后形成的render树。</p><p>3、布局render树：有了render树，浏览器已经知道那些网页中有哪些节点，各个节点的css定义和以及它们的从属关系，从而计算出每个节点在屏幕中的位置。</p><p>4、绘制render树：按照计算出来的规则，通过显卡把内容画在屏幕上。</p><p>css样式解析到显示至浏览器屏幕上就发生在234步骤，可见浏览器并不是一获取到css样式就立马开始解析而是根据css样式的书写顺序将之按照dom树的结构分布render样式，完成第2步，然后开始遍历每个树结点的css样式进行解析，此时的css样式的遍历顺序完全是按照之前的书写顺序。在解析过程中，一旦浏览器发现某个元素的定位变化影响布局，则需要倒回去重新渲染正如按照这样的书写书序：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: red ;</span><br><span class="line"></span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当浏览器解析到position的时候突然发现该元素是绝对定位元素需要脱离文档流，而之前却是按照普通元素进行解析的，所以不得不重新渲染，解除该元素在文档中所占位置，然而由于该元素的占位发生变化，其他元素也可能会受到它回流的影响而重新排位。最终导致③步骤花费的时间太久而影响到④步骤的显示，影响了用户体验。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 下面是推荐的属性的顺序</span></span><br><span class="line"><span class="selector-attr">[</span></span><br><span class="line"><span class="selector-attr">    [</span></span><br><span class="line"><span class="selector-attr">        "display",</span></span><br><span class="line"><span class="selector-attr">        "visibility",</span></span><br><span class="line"><span class="selector-attr">        "float",</span></span><br><span class="line"><span class="selector-attr">        "clear",</span></span><br><span class="line"><span class="selector-attr">        "overflow",</span></span><br><span class="line"><span class="selector-attr">        "overflow-x",</span></span><br><span class="line"><span class="selector-attr">        "overflow-y",</span></span><br><span class="line"><span class="selector-attr">        "clip",</span></span><br><span class="line"><span class="selector-attr">        "zoom"</span></span><br><span class="line"><span class="selector-attr">    ]</span>,</span><br><span class="line">    <span class="selector-attr">[</span></span><br><span class="line"><span class="selector-attr">        "table-layout",</span></span><br><span class="line"><span class="selector-attr">        "empty-cells",</span></span><br><span class="line"><span class="selector-attr">        "caption-side",</span></span><br><span class="line"><span class="selector-attr">        "border-spacing",</span></span><br><span class="line"><span class="selector-attr">        "border-collapse",</span></span><br><span class="line"><span class="selector-attr">        "list-style",</span></span><br><span class="line"><span class="selector-attr">        "list-style-position",</span></span><br><span class="line"><span class="selector-attr">        "list-style-type",</span></span><br><span class="line"><span class="selector-attr">        "list-style-image"</span></span><br><span class="line"><span class="selector-attr">    ]</span>,</span><br><span class="line">    <span class="selector-attr">[</span></span><br><span class="line"><span class="selector-attr">        "-webkit-box-orient",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-box-direction",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-box-decoration-break",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-box-pack",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-box-align",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-box-flex"</span></span><br><span class="line"><span class="selector-attr">    ]</span>,</span><br><span class="line">    <span class="selector-attr">[</span></span><br><span class="line"><span class="selector-attr">        "position",</span></span><br><span class="line"><span class="selector-attr">        "top",</span></span><br><span class="line"><span class="selector-attr">        "right",</span></span><br><span class="line"><span class="selector-attr">        "bottom",</span></span><br><span class="line"><span class="selector-attr">        "left",</span></span><br><span class="line"><span class="selector-attr">        "z-index"</span></span><br><span class="line"><span class="selector-attr">    ]</span>,</span><br><span class="line">    <span class="selector-attr">[</span></span><br><span class="line"><span class="selector-attr">        "margin",</span></span><br><span class="line"><span class="selector-attr">        "margin-top",</span></span><br><span class="line"><span class="selector-attr">        "margin-right",</span></span><br><span class="line"><span class="selector-attr">        "margin-bottom",</span></span><br><span class="line"><span class="selector-attr">        "margin-left",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-box-sizing",</span></span><br><span class="line"><span class="selector-attr">        "-moz-box-sizing",</span></span><br><span class="line"><span class="selector-attr">        "box-sizing",</span></span><br><span class="line"><span class="selector-attr">        "border",</span></span><br><span class="line"><span class="selector-attr">        "border-width",</span></span><br><span class="line"><span class="selector-attr">        "border-style",</span></span><br><span class="line"><span class="selector-attr">        "border-color",</span></span><br><span class="line"><span class="selector-attr">        "border-top",</span></span><br><span class="line"><span class="selector-attr">        "border-top-width",</span></span><br><span class="line"><span class="selector-attr">        "border-top-style",</span></span><br><span class="line"><span class="selector-attr">        "border-top-color",</span></span><br><span class="line"><span class="selector-attr">        "border-right",</span></span><br><span class="line"><span class="selector-attr">        "border-right-width",</span></span><br><span class="line"><span class="selector-attr">        "border-right-style",</span></span><br><span class="line"><span class="selector-attr">        "border-right-color",</span></span><br><span class="line"><span class="selector-attr">        "border-bottom",</span></span><br><span class="line"><span class="selector-attr">        "border-bottom-width",</span></span><br><span class="line"><span class="selector-attr">        "border-bottom-style",</span></span><br><span class="line"><span class="selector-attr">        "border-bottom-color",</span></span><br><span class="line"><span class="selector-attr">        "border-left",</span></span><br><span class="line"><span class="selector-attr">        "border-left-width",</span></span><br><span class="line"><span class="selector-attr">        "border-left-style",</span></span><br><span class="line"><span class="selector-attr">        "border-left-color",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-border-radius",</span></span><br><span class="line"><span class="selector-attr">        "-moz-border-radius",</span></span><br><span class="line"><span class="selector-attr">        "border-radius",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-border-top-left-radius",</span></span><br><span class="line"><span class="selector-attr">        "-moz-border-radius-topleft",</span></span><br><span class="line"><span class="selector-attr">        "border-top-left-radius",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-border-top-right-radius",</span></span><br><span class="line"><span class="selector-attr">        "-moz-border-radius-topright",</span></span><br><span class="line"><span class="selector-attr">        "border-top-right-radius",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-border-bottom-right-radius",</span></span><br><span class="line"><span class="selector-attr">        "-moz-border-radius-bottomright",</span></span><br><span class="line"><span class="selector-attr">        "border-bottom-right-radius",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-border-bottom-left-radius",</span></span><br><span class="line"><span class="selector-attr">        "-moz-border-radius-bottomleft",</span></span><br><span class="line"><span class="selector-attr">        "border-bottom-left-radius",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-border-image",</span></span><br><span class="line"><span class="selector-attr">        "-moz-border-image",</span></span><br><span class="line"><span class="selector-attr">        "-o-border-image",</span></span><br><span class="line"><span class="selector-attr">        "border-image",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-border-image-source",</span></span><br><span class="line"><span class="selector-attr">        "-moz-border-image-source",</span></span><br><span class="line"><span class="selector-attr">        "-o-border-image-source",</span></span><br><span class="line"><span class="selector-attr">        "border-image-source",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-border-image-slice",</span></span><br><span class="line"><span class="selector-attr">        "-moz-border-image-slice",</span></span><br><span class="line"><span class="selector-attr">        "-o-border-image-slice",</span></span><br><span class="line"><span class="selector-attr">        "border-image-slice",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-border-image-width",</span></span><br><span class="line"><span class="selector-attr">        "-moz-border-image-width",</span></span><br><span class="line"><span class="selector-attr">        "-o-border-image-width",</span></span><br><span class="line"><span class="selector-attr">        "border-image-width",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-border-image-outset",</span></span><br><span class="line"><span class="selector-attr">        "-moz-border-image-outset",</span></span><br><span class="line"><span class="selector-attr">        "-o-border-image-outset",</span></span><br><span class="line"><span class="selector-attr">        "border-image-outset",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-border-image-repeat",</span></span><br><span class="line"><span class="selector-attr">        "-moz-border-image-repeat",</span></span><br><span class="line"><span class="selector-attr">        "-o-border-image-repeat",</span></span><br><span class="line"><span class="selector-attr">        "border-image-repeat",</span></span><br><span class="line"><span class="selector-attr">        "padding",</span></span><br><span class="line"><span class="selector-attr">        "padding-top",</span></span><br><span class="line"><span class="selector-attr">        "padding-right",</span></span><br><span class="line"><span class="selector-attr">        "padding-bottom",</span></span><br><span class="line"><span class="selector-attr">        "padding-left",</span></span><br><span class="line"><span class="selector-attr">        "width",</span></span><br><span class="line"><span class="selector-attr">        "min-width",</span></span><br><span class="line"><span class="selector-attr">        "max-width",</span></span><br><span class="line"><span class="selector-attr">        "height",</span></span><br><span class="line"><span class="selector-attr">        "min-height",</span></span><br><span class="line"><span class="selector-attr">        "max-height"</span></span><br><span class="line"><span class="selector-attr">    ]</span>,</span><br><span class="line">    <span class="selector-attr">[</span></span><br><span class="line"><span class="selector-attr">        "font",</span></span><br><span class="line"><span class="selector-attr">        "font-family",</span></span><br><span class="line"><span class="selector-attr">        "font-size",</span></span><br><span class="line"><span class="selector-attr">        "font-weight",</span></span><br><span class="line"><span class="selector-attr">        "font-style",</span></span><br><span class="line"><span class="selector-attr">        "font-variant",</span></span><br><span class="line"><span class="selector-attr">        "font-size-adjust",</span></span><br><span class="line"><span class="selector-attr">        "font-stretch",</span></span><br><span class="line"><span class="selector-attr">        "font-effect",</span></span><br><span class="line"><span class="selector-attr">        "font-emphasize",</span></span><br><span class="line"><span class="selector-attr">        "font-emphasize-position",</span></span><br><span class="line"><span class="selector-attr">        "font-emphasize-style",</span></span><br><span class="line"><span class="selector-attr">        "font-smooth",</span></span><br><span class="line"><span class="selector-attr">        "line-height",</span></span><br><span class="line"><span class="selector-attr">        "text-align",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-text-align-last",</span></span><br><span class="line"><span class="selector-attr">        "-moz-text-align-last",</span></span><br><span class="line"><span class="selector-attr">        "-ms-text-align-last",</span></span><br><span class="line"><span class="selector-attr">        "text-align-last",</span></span><br><span class="line"><span class="selector-attr">        "vertical-align",</span></span><br><span class="line"><span class="selector-attr">        "white-space",</span></span><br><span class="line"><span class="selector-attr">        "text-decoration",</span></span><br><span class="line"><span class="selector-attr">        "text-emphasis",</span></span><br><span class="line"><span class="selector-attr">        "text-emphasis-color",</span></span><br><span class="line"><span class="selector-attr">        "text-emphasis-style",</span></span><br><span class="line"><span class="selector-attr">        "text-emphasis-position",</span></span><br><span class="line"><span class="selector-attr">        "text-indent",</span></span><br><span class="line"><span class="selector-attr">        "-ms-text-justify",</span></span><br><span class="line"><span class="selector-attr">        "text-justify",</span></span><br><span class="line"><span class="selector-attr">        "letter-spacing",</span></span><br><span class="line"><span class="selector-attr">        "word-spacing",</span></span><br><span class="line"><span class="selector-attr">        "-ms-writing-mode",</span></span><br><span class="line"><span class="selector-attr">        "text-outline",</span></span><br><span class="line"><span class="selector-attr">        "text-transform",</span></span><br><span class="line"><span class="selector-attr">        "text-wrap",</span></span><br><span class="line"><span class="selector-attr">        "-ms-text-overflow",</span></span><br><span class="line"><span class="selector-attr">        "text-overflow",</span></span><br><span class="line"><span class="selector-attr">        "text-overflow-ellipsis",</span></span><br><span class="line"><span class="selector-attr">        "text-overflow-mode",</span></span><br><span class="line"><span class="selector-attr">        "-ms-word-wrap",</span></span><br><span class="line"><span class="selector-attr">        "word-wrap",</span></span><br><span class="line"><span class="selector-attr">        "-ms-word-break",</span></span><br><span class="line"><span class="selector-attr">        "word-break"</span></span><br><span class="line"><span class="selector-attr">    ]</span>,</span><br><span class="line">    <span class="selector-attr">[</span></span><br><span class="line"><span class="selector-attr">        "color",</span></span><br><span class="line"><span class="selector-attr">        "background",</span></span><br><span class="line"><span class="selector-attr">        "filter:progid:DXImageTransform.Microsoft.AlphaImageLoader",</span></span><br><span class="line"><span class="selector-attr">        "background-color",</span></span><br><span class="line"><span class="selector-attr">        "background-image",</span></span><br><span class="line"><span class="selector-attr">        "background-repeat",</span></span><br><span class="line"><span class="selector-attr">        "background-attachment",</span></span><br><span class="line"><span class="selector-attr">        "background-position",</span></span><br><span class="line"><span class="selector-attr">        "-ms-background-position-x",</span></span><br><span class="line"><span class="selector-attr">        "background-position-x",</span></span><br><span class="line"><span class="selector-attr">        "-ms-background-position-y",</span></span><br><span class="line"><span class="selector-attr">        "background-position-y",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-background-clip",</span></span><br><span class="line"><span class="selector-attr">        "-moz-background-clip",</span></span><br><span class="line"><span class="selector-attr">        "background-clip",</span></span><br><span class="line"><span class="selector-attr">        "background-origin",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-background-size",</span></span><br><span class="line"><span class="selector-attr">        "-moz-background-size",</span></span><br><span class="line"><span class="selector-attr">        "-o-background-size",</span></span><br><span class="line"><span class="selector-attr">        "background-size"</span></span><br><span class="line"><span class="selector-attr">    ]</span>,</span><br><span class="line">    <span class="selector-attr">[</span></span><br><span class="line"><span class="selector-attr">        "outline",</span></span><br><span class="line"><span class="selector-attr">        "outline-width",</span></span><br><span class="line"><span class="selector-attr">        "outline-style",</span></span><br><span class="line"><span class="selector-attr">        "outline-color",</span></span><br><span class="line"><span class="selector-attr">        "outline-offset",</span></span><br><span class="line"><span class="selector-attr">        "opacity",</span></span><br><span class="line"><span class="selector-attr">        "filter:progid:DXImageTransform.Microsoft.Alpha(Opacity",</span></span><br><span class="line"><span class="selector-attr">        "-ms-filter:\\'progid:DXImageTransform.Microsoft.Alpha",</span></span><br><span class="line"><span class="selector-attr">        "-ms-interpolation-mode",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-box-shadow",</span></span><br><span class="line"><span class="selector-attr">        "-moz-box-shadow",</span></span><br><span class="line"><span class="selector-attr">        "box-shadow",</span></span><br><span class="line"><span class="selector-attr">        "filter:progid:DXImageTransform.Microsoft.gradient",</span></span><br><span class="line"><span class="selector-attr">        "-ms-filter:\\'progid:DXImageTransform.Microsoft.gradient",</span></span><br><span class="line"><span class="selector-attr">        "text-shadow"</span></span><br><span class="line"><span class="selector-attr">    ]</span>,</span><br><span class="line">    <span class="selector-attr">[</span></span><br><span class="line"><span class="selector-attr">        "-webkit-transition",</span></span><br><span class="line"><span class="selector-attr">        "-moz-transition",</span></span><br><span class="line"><span class="selector-attr">        "-ms-transition",</span></span><br><span class="line"><span class="selector-attr">        "-o-transition",</span></span><br><span class="line"><span class="selector-attr">        "transition",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-transition-delay",</span></span><br><span class="line"><span class="selector-attr">        "-moz-transition-delay",</span></span><br><span class="line"><span class="selector-attr">        "-ms-transition-delay",</span></span><br><span class="line"><span class="selector-attr">        "-o-transition-delay",</span></span><br><span class="line"><span class="selector-attr">        "transition-delay",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-transition-timing-function",</span></span><br><span class="line"><span class="selector-attr">        "-moz-transition-timing-function",</span></span><br><span class="line"><span class="selector-attr">        "-ms-transition-timing-function",</span></span><br><span class="line"><span class="selector-attr">        "-o-transition-timing-function",</span></span><br><span class="line"><span class="selector-attr">        "transition-timing-function",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-transition-duration",</span></span><br><span class="line"><span class="selector-attr">        "-moz-transition-duration",</span></span><br><span class="line"><span class="selector-attr">        "-ms-transition-duration",</span></span><br><span class="line"><span class="selector-attr">        "-o-transition-duration",</span></span><br><span class="line"><span class="selector-attr">        "transition-duration",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-transition-property",</span></span><br><span class="line"><span class="selector-attr">        "-moz-transition-property",</span></span><br><span class="line"><span class="selector-attr">        "-ms-transition-property",</span></span><br><span class="line"><span class="selector-attr">        "-o-transition-property",</span></span><br><span class="line"><span class="selector-attr">        "transition-property",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-transform",</span></span><br><span class="line"><span class="selector-attr">        "-moz-transform",</span></span><br><span class="line"><span class="selector-attr">        "-ms-transform",</span></span><br><span class="line"><span class="selector-attr">        "-o-transform",</span></span><br><span class="line"><span class="selector-attr">        "transform",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-transform-origin",</span></span><br><span class="line"><span class="selector-attr">        "-moz-transform-origin",</span></span><br><span class="line"><span class="selector-attr">        "-ms-transform-origin",</span></span><br><span class="line"><span class="selector-attr">        "-o-transform-origin",</span></span><br><span class="line"><span class="selector-attr">        "transform-origin",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-animation",</span></span><br><span class="line"><span class="selector-attr">        "-moz-animation",</span></span><br><span class="line"><span class="selector-attr">        "-ms-animation",</span></span><br><span class="line"><span class="selector-attr">        "-o-animation",</span></span><br><span class="line"><span class="selector-attr">        "animation",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-animation-name",</span></span><br><span class="line"><span class="selector-attr">        "-moz-animation-name",</span></span><br><span class="line"><span class="selector-attr">        "-ms-animation-name",</span></span><br><span class="line"><span class="selector-attr">        "-o-animation-name",</span></span><br><span class="line"><span class="selector-attr">        "animation-name",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-animation-duration",</span></span><br><span class="line"><span class="selector-attr">        "-moz-animation-duration",</span></span><br><span class="line"><span class="selector-attr">        "-ms-animation-duration",</span></span><br><span class="line"><span class="selector-attr">        "-o-animation-duration",</span></span><br><span class="line"><span class="selector-attr">        "animation-duration",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-animation-play-state",</span></span><br><span class="line"><span class="selector-attr">        "-moz-animation-play-state",</span></span><br><span class="line"><span class="selector-attr">        "-ms-animation-play-state",</span></span><br><span class="line"><span class="selector-attr">        "-o-animation-play-state",</span></span><br><span class="line"><span class="selector-attr">        "animation-play-state",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-animation-timing-function",</span></span><br><span class="line"><span class="selector-attr">        "-moz-animation-timing-function",</span></span><br><span class="line"><span class="selector-attr">        "-ms-animation-timing-function",</span></span><br><span class="line"><span class="selector-attr">        "-o-animation-timing-function",</span></span><br><span class="line"><span class="selector-attr">        "animation-timing-function",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-animation-delay",</span></span><br><span class="line"><span class="selector-attr">        "-moz-animation-delay",</span></span><br><span class="line"><span class="selector-attr">        "-ms-animation-delay",</span></span><br><span class="line"><span class="selector-attr">        "-o-animation-delay",</span></span><br><span class="line"><span class="selector-attr">        "animation-delay",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-animation-iteration-count",</span></span><br><span class="line"><span class="selector-attr">        "-moz-animation-iteration-count",</span></span><br><span class="line"><span class="selector-attr">        "-ms-animation-iteration-count",</span></span><br><span class="line"><span class="selector-attr">        "-o-animation-iteration-count",</span></span><br><span class="line"><span class="selector-attr">        "animation-iteration-count",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-animation-direction",</span></span><br><span class="line"><span class="selector-attr">        "-moz-animation-direction",</span></span><br><span class="line"><span class="selector-attr">        "-ms-animation-direction",</span></span><br><span class="line"><span class="selector-attr">        "-o-animation-direction",</span></span><br><span class="line"><span class="selector-attr">        "animation-direction"</span></span><br><span class="line"><span class="selector-attr">    ]</span>,</span><br><span class="line">    <span class="selector-attr">[</span></span><br><span class="line"><span class="selector-attr">        "content",</span></span><br><span class="line"><span class="selector-attr">        "quotes",</span></span><br><span class="line"><span class="selector-attr">        "counter-reset",</span></span><br><span class="line"><span class="selector-attr">        "counter-increment",</span></span><br><span class="line"><span class="selector-attr">        "resize",</span></span><br><span class="line"><span class="selector-attr">        "cursor",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-user-select",</span></span><br><span class="line"><span class="selector-attr">        "-moz-user-select",</span></span><br><span class="line"><span class="selector-attr">        "-ms-user-select",</span></span><br><span class="line"><span class="selector-attr">        "user-select",</span></span><br><span class="line"><span class="selector-attr">        "nav-index",</span></span><br><span class="line"><span class="selector-attr">        "nav-up",</span></span><br><span class="line"><span class="selector-attr">        "nav-right",</span></span><br><span class="line"><span class="selector-attr">        "nav-down",</span></span><br><span class="line"><span class="selector-attr">        "nav-left",</span></span><br><span class="line"><span class="selector-attr">        "-moz-tab-size",</span></span><br><span class="line"><span class="selector-attr">        "-o-tab-size",</span></span><br><span class="line"><span class="selector-attr">        "tab-size",</span></span><br><span class="line"><span class="selector-attr">        "-webkit-hyphens",</span></span><br><span class="line"><span class="selector-attr">        "-moz-hyphens",</span></span><br><span class="line"><span class="selector-attr">        "hyphens",</span></span><br><span class="line"><span class="selector-attr">        "pointer-events"</span></span><br><span class="line"><span class="selector-attr">    ]</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="9-颜色"><a href="#9-颜色" class="headerlink" title="9)颜色"></a>9)颜色</h4><p>颜色16进制用小写字母；</p><p>颜色16进制尽量用简写。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ABCDEF</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#001122</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#abcdef</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#012</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-属性简写"><a href="#10-属性简写" class="headerlink" title="10)属性简写"></a>10)属性简写</h4><p>属性简写需要你非常清楚属性值的正确顺序，而且在大多数情况下并不需要设置属性简写中包含的所有值，所以建议尽量分开声明会更加清晰；</p><p><code>margin</code> 和 <code>padding</code> 相反，需要使用简写；</p><p>常见的属性简写包括：</p><ul><li><code>font</code></li><li><code>background</code></li><li><code>transition</code></li><li><code>animation</code></li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">transition</span>: opacity <span class="number">1s</span> linear <span class="number">2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">transition-delay</span>: <span class="number">2s</span>;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: linear;</span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">1s</span>;</span><br><span class="line">    <span class="attribute">transition-property</span>: opacity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="11-媒体查询"><a href="#11-媒体查询" class="headerlink" title="11)媒体查询"></a>11)<code>媒体查询</code></h4><p>尽量将媒体查询的规则靠近与他们相关的规则，不要将他们一起放到一个独立的样式文件中，或者丢在文档的最底部，这样做只会让大家以后更容易忘记他们。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.element-avatar</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">480px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.element</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.element-avatar</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="12-Less相关"><a href="#12-Less相关" class="headerlink" title="12)Less相关"></a>12)<code>Less相关</code></h4><p>每个模块应该有一个单独的less, 然后每个最外层的父类 className 应该写在第一位，所有子Node的样式都写在里面，这样是为了避免命名冲突。比如</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//out: false</span></span><br><span class="line"><span class="selector-class">.parent-name</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.child-name</span>&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>@import</code> 引入的文件不需要结尾的’.less’</p><p><code>LESS嵌套最多不能超过5层</code>；</p><p>不允许有空的规则；</p><p>元素选择器用小写字母；</p><p>去掉小数点前面的0；</p><p>去掉数字中不必要的小数点和末尾的0；</p><p>属性值’0’后面不要加单位；</p><p>同个属性不同前缀的写法需要在垂直方向保持对齐，具体参照右边的写法；</p><p>无前缀的标准属性应该写在有前缀的属性后面；</p><p>不要在同个规则里出现重复的属性，如果重复的属性是连续的则没关系；</p><p>不要在一个文件里出现两个相同的规则；</p><p>用 <code>border: 0;</code> 代替 <code>border: none;</code>；</p><p><code>CSS选择器不要超过3层</code>；</p><p>尽量少用<code>&#39;*&#39;</code>选择器。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-tag">LI</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50.0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">-moz-border-radius</span>: <span class="number">3px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background</span>: linear-gradient(to bottom, <span class="number">#fff</span> <span class="number">0</span>, <span class="number">#eee</span> <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">background</span>: -webkit-linear-gradient(top, <span class="number">#fff</span> <span class="number">0</span>, <span class="number">#eee</span> <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">background</span>: -moz-linear-gradient(top, <span class="number">#fff</span> <span class="number">0</span>, <span class="number">#eee</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">       <span class="attribute">-moz-border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background</span>: -webkit-linear-gradient(top, <span class="number">#fff</span> <span class="number">0</span>, <span class="number">#eee</span> <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">background</span>:    -moz-linear-gradient(top, <span class="number">#fff</span> <span class="number">0</span>, <span class="number">#eee</span> <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">background</span>:         linear-gradient(to bottom, <span class="number">#fff</span> <span class="number">0</span>, <span class="number">#eee</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: rgb(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">color</span>: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: rgb(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="attribute">color</span>: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-JavaScript"><a href="#5-JavaScript" class="headerlink" title="5 JavaScript"></a>5 JavaScript</h3><h4 id="1-缩进-1"><a href="#1-缩进-1" class="headerlink" title="1)缩进"></a>1)缩进</h4><p>使用soft tab（4个空格）。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>,</span><br><span class="line">    y = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x &lt; y) &#123;</span><br><span class="line">    x += <span class="number">10</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    x += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-分号-1"><a href="#2-分号-1" class="headerlink" title="2)分号"></a>2)分号</h4><p>以下几种情况后需加分号：</p><ul><li>变量声明</li><li>表达式</li><li>return</li><li>throw</li><li>break</li><li>continue</li><li>do-while</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* var declaration */</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* expression statement */</span></span><br><span class="line">x++;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* do-while */</span></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    x++;</span><br><span class="line">&#125; <span class="keyword">while</span> (x &lt; <span class="number">10</span>);</span><br></pre></td></tr></table></figure><h4 id="3-空格-1"><a href="#3-空格-1" class="headerlink" title="3)空格"></a>3)空格</h4><p>以下几种情况不需要空格：</p><ul><li>对象的属性名后</li><li>前缀一元运算符后</li><li>后缀一元运算符前</li><li>函数调用括号前</li><li>无论是函数声明还是函数表达式，’(‘前不要空格</li><li>数组的’[‘后和’]’前</li><li>对象的’{‘后和’}’前</li><li>运算符’(‘后和’)’前</li></ul><p>以下几种情况需要空格：</p><ul><li>二元运算符前后</li><li>三元运算符’?:’前后</li><li>代码块’{‘前</li><li>下列关键字前：<code>else</code>, <code>while</code>, <code>catch</code>, <code>finally</code></li><li>下列关键字后：<code>if</code>, <code>else</code>, <code>for</code>, <code>while</code>, <code>do</code>, <code>switch</code>, <code>case</code>, <code>try</code>,<code>catch</code>, <code>finally</code>, <code>with</code>, <code>return</code>, <code>typeof</code></li><li>单行注释’//‘后（若单行注释和代码同行，则’//‘前也需要），多行注释’*’后</li><li>对象的属性值前</li><li>for循环，分号后留有一个空格，前置条件如果有多个，逗号后留一个空格</li><li>无论是函数声明还是函数表达式，’{‘前一定要有空格</li><li>函数的参数之间</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    b :<span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    b: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line">++ x;</span><br><span class="line">y ++;</span><br><span class="line">z = x?<span class="number">1</span>:<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line">++x;</span><br><span class="line">y++;</span><br><span class="line">z = x ? <span class="number">1</span> : <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> a = [ <span class="number">1</span>, <span class="number">2</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> a = ( <span class="number">1</span>+<span class="number">2</span> )*<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> a = (<span class="number">1</span> + <span class="number">2</span>) * <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// no space before '(', one space before '&#123;', one space between function parameters</span></span><br><span class="line"><span class="keyword">var</span> doSomething = <span class="function"><span class="keyword">function</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// no space before '('</span></span><br><span class="line">doSomething(item);</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)&#123;</span><br><span class="line">    x++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">    x++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-空行-1"><a href="#4-空行-1" class="headerlink" title="4)空行"></a>4)空行</h4><p>以下几种情况需要空行：</p><ul><li>变量声明后（当变量声明在代码块的最后一行时，则无需空行）</li><li>注释前（当注释在代码块的第一行时，则无需空行）</li><li>代码块后（在函数调用、数组、对象中则无需空行）</li><li>文件最后保留一个空行</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// need blank line after variable declaration</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not need blank line when variable declaration is last expression in the current block</span></span><br><span class="line"><span class="keyword">if</span> (x &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> y = x + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// need blank line before line comment</span></span><br><span class="line">a++;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// not need blank line when comment is first line of block</span></span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// need blank line after blocks</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    foo: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    bar: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not need blank line when in argument list, array, object</span></span><br><span class="line">func(</span><br><span class="line">    <span class="number">2</span>,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        a++;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">3</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> foo = [</span><br><span class="line">    <span class="number">2</span>,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        a++;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">3</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> foo = &#123;</span><br><span class="line">    a: <span class="number">2</span>,</span><br><span class="line">    b: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        a++;</span><br><span class="line">    &#125;,</span><br><span class="line">    c: <span class="number">3</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="5-换行"><a href="#5-换行" class="headerlink" title="5)换行"></a>5)换行</h4><p>换行的地方，行末必须有’,’或者运算符；</p><p>以下几种情况不需要换行：</p><ul><li>下列关键字后：<code>else</code>, <code>catch</code>, <code>finally</code></li><li>代码块’{‘前</li></ul><p>以下几种情况需要换行：</p><ul><li>代码块’{‘后和’}’前</li><li>变量赋值后</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    b: <span class="number">1</span></span><br><span class="line">    , <span class="attr">c</span>: <span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">x = y</span><br><span class="line">    ? <span class="number">1</span> : <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    b: <span class="number">1</span>,</span><br><span class="line">    c: <span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">x = y ? <span class="number">1</span> : <span class="number">2</span>;</span><br><span class="line">x = y ?</span><br><span class="line">    <span class="number">1</span> : <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// no need line break with 'else', 'catch', 'finally'</span></span><br><span class="line"><span class="keyword">if</span> (condition) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> a, foo = <span class="number">7</span>, b,</span><br><span class="line">    c, bar = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> a,</span><br><span class="line">    foo = <span class="number">7</span>,</span><br><span class="line">    b, c, bar = <span class="number">8</span>;</span><br></pre></td></tr></table></figure><h4 id="6-单行注释"><a href="#6-单行注释" class="headerlink" title="6)单行注释"></a>6)单行注释</h4><p>双斜线后，必须跟一个空格；</p><p>缩进与下一行代码保持一致；</p><p>可位于一个代码行的末尾，与代码间隔一个空格。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (condition) &#123;</span><br><span class="line">    <span class="comment">// if you made it here, then all security checks passed</span></span><br><span class="line">    allowed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> zhangsan = <span class="string">'zhangsan'</span>; <span class="comment">// one space after code</span></span><br></pre></td></tr></table></figure><h4 id="7-多行注释"><a href="#7-多行注释" class="headerlink" title="7)多行注释"></a>7)多行注释</h4><p>最少三行, ‘*’后跟一个空格，具体参照右边的写法；</p><p>建议在以下情况下使用：</p><ul><li>难于理解的代码段</li><li>可能存在错误的代码段</li><li>浏览器特殊的HACK代码</li><li>业务逻辑强相关的代码</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * one space after '*'</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h4 id="8-文档注释"><a href="#8-文档注释" class="headerlink" title="8)文档注释"></a>8)<code>文档注释</code></h4><p>各类标签@param, @method等请参考<a href="http://usejsdoc.org/" target="_blank" rel="noopener">usejsdoc</a>和<a href="http://yuri4ever.github.io/jsdoc/" target="_blank" rel="noopener">JSDoc Guide</a>；</p><p>建议在以下情况下使用：</p><ul><li>所有常量</li><li>所有函数</li><li>所有类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * @func</span><br><span class="line"> * @desc 一个带参数的函数</span><br><span class="line"> * @param &#123;string&#125; a - 参数a</span><br><span class="line"> * @param &#123;number&#125; b&#x3D;1 - 参数b默认值为1</span><br><span class="line"> * @param &#123;string&#125; c&#x3D;1 - 参数c有两种支持的取值&lt;&#x2F;br&gt;1—表示x&lt;&#x2F;br&gt;2—表示xx</span><br><span class="line"> * @param &#123;object&#125; d - 参数d为一个对象</span><br><span class="line"> * @param &#123;string&#125; d.e - 参数d的e属性</span><br><span class="line"> * @param &#123;string&#125; d.f - 参数d的f属性</span><br><span class="line"> * @param &#123;object[]&#125; g - 参数g为一个对象数组</span><br><span class="line"> * @param &#123;string&#125; g.h - 参数g数组中一项的h属性</span><br><span class="line"> * @param &#123;string&#125; g.i - 参数g数组中一项的i属性</span><br><span class="line"> * @param &#123;string&#125; [j] - 参数j是一个可选参数</span><br><span class="line"> *&#x2F;</span><br><span class="line">function foo(a, b, c, d, g, j) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-引号"><a href="#9-引号" class="headerlink" title="9)引号"></a>9)引号</h4><p>最外层统一使用单引号。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="string">"test"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> y = <span class="string">'foo'</span>,</span><br><span class="line">    z = <span class="string">'&lt;div id="test"&gt;&lt;/div&gt;'</span>;</span><br></pre></td></tr></table></figure><h4 id="10-变量命名"><a href="#10-变量命名" class="headerlink" title="10)变量命名"></a>10)变量命名</h4><ul><li>标准变量采用驼峰式命名（除了对象的属性外，主要是考虑到cgi返回的数据）</li><li>‘ID’在变量名中全大写</li><li>‘URL’在变量名中全大写</li><li>‘Android’在变量名中大写第一个字母</li><li>‘iOS’在变量名中小写第一个，大写后两个字母</li><li>常量全大写，用下划线连接</li><li>构造函数，大写第一个字母</li><li>jquery对象必须以’$’开头命名</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> thisIsMyName;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> goodID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reportURL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> AndroidVersion;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> iOSVersion;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MAX_COUNT = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> body = $(<span class="string">'body'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> $body = $(<span class="string">'body'</span>);</span><br></pre></td></tr></table></figure><h4 id="11-变量声明"><a href="#11-变量声明" class="headerlink" title="11)变量声明"></a>11)变量声明</h4><p>一个函数作用域中所有的变量声明尽量提到函数首部，用一个var 声明，不允许出现两个连续的var声明。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSomethingWithItems</span>(<span class="params">items</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// use one var</span></span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">10</span>,</span><br><span class="line">        result = value + <span class="number">10</span>,</span><br><span class="line">        i,</span><br><span class="line">        len;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, len = items.length; i &lt; len; i++) &#123;</span><br><span class="line">        result += <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="12-函数"><a href="#12-函数" class="headerlink" title="12)函数"></a>12)函数</h4><p>无论是函数声明还是函数表达式，’(‘前不要空格，但’{‘前一定要有空格；</p><p>函数调用括号前不需要空格；</p><p>立即执行函数外必须包一层括号；</p><p>不要给inline function命名；</p><p>参数之间用’, ‘分隔，注意逗号后有一个空格。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// no space before '(', but one space before'&#123;'</span></span><br><span class="line"><span class="keyword">var</span> doSomething = <span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line">doSomething (item);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line">doSomething(item);</span><br><span class="line"></span><br><span class="line"><span class="comment">// requires parentheses around immediately invoked function expressions</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>].forEach(<span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>].forEach(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="comment">// use ', ' between function parameters</span></span><br><span class="line"><span class="keyword">var</span> doSomething = <span class="function"><span class="keyword">function</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="13-数组、对象"><a href="#13-数组、对象" class="headerlink" title="13)数组、对象"></a>13)数组、对象</h4><p>对象属性名不需要加引号；</p><p>对象以缩进的形式书写，不要写在一行；</p><p>数组、对象最后不要有逗号。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    <span class="string">'b'</span>: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = &#123;<span class="attr">b</span>: <span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    b: <span class="number">1</span>,</span><br><span class="line">    c: <span class="number">2</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    b: <span class="number">1</span>,</span><br><span class="line">    c: <span class="number">2</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="14-括号"><a href="#14-括号" class="headerlink" title="14)括号"></a>14)括号</h4><p>下列关键字后必须有大括号（即使代码块的内容只有一行）：<code>if</code>, <code>else</code>,<code>for</code>, <code>while</code>, <code>do</code>, <code>switch</code>, <code>try</code>, <code>catch</code>, <code>finally</code>, <code>with</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">if</span> (condition)</span><br><span class="line">    doSomething();</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">if</span> (condition) &#123;</span><br><span class="line">    doSomething();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="15-null"><a href="#15-null" class="headerlink" title="15)null"></a>15)null</h4><p>适用场景：</p><ul><li>初始化一个将来可能被赋值为对象的变量</li><li>与已经初始化的变量做比较</li><li>作为一个参数为对象的函数的调用传参</li><li>作为一个返回对象的函数的返回值</li></ul><p>不适用场景：</p><ul><li>不要用null来判断函数调用时有无传参</li><li>不要与未初始化的变量做比较</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b <span class="string">`= null) &#123;</span></span><br><span class="line"><span class="string">        // not mean b is not supply</span></span><br><span class="line"><span class="string">        ...</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var a;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (a `</span>= <span class="literal">null</span>) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a <span class="string">`= null) &#123;</span></span><br><span class="line"><span class="string">    ...</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="16-undefined"><a href="#16-undefined" class="headerlink" title="16)undefined"></a>16)undefined</h4><p>永远不要直接使用undefined进行变量判断；</p><p>使用typeof和字符串’undefined’对变量进行判断。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">if</span> (person <span class="string">`= undefined) &#123;</span></span><br><span class="line"><span class="string">    ...</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// good</span></span><br><span class="line"><span class="string">if (typeof person `</span>= <span class="string">'undefined'</span>) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="17-jshint"><a href="#17-jshint" class="headerlink" title="17)jshint"></a>17)jshint</h4><p>用’<code>=&#39;, &#39;!</code>‘代替’`’, ‘!=’；</p><p>for-in里一定要有hasOwnProperty的判断；</p><p>不要在内置对象的原型上添加方法，如Array, Date；</p><p>不要在内层作用域的代码里声明了变量，之后却访问到了外层作用域的同名变量；</p><p>变量不要先使用后声明；</p><p>不要在一句代码中单单使用构造函数，记得将其赋值给某个变量；</p><p>不要在同个作用域下声明同名变量；</p><p>不要在一些不需要的地方加括号，例：delete(a.b)；</p><p>不要使用未声明的变量（全局变量需要加到.jshintrc文件的globals属性里面）；</p><p>不要声明了变量却不使用；</p><p>不要在应该做比较的地方做赋值；</p><p>debugger不要出现在提交的代码里；</p><p>数组中不要存在空元素；</p><p>不要在循环内部声明函数；</p><p>不要像这样使用构造函数，例：<code>new function () { ... }</code>, <code>new Object</code>；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">if</span> (a <span class="string">` 1) &#123;</span></span><br><span class="line"><span class="string">    a++;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// good</span></span><br><span class="line"><span class="string">if (a `</span>= <span class="number">1</span>) &#123;</span><br><span class="line">    a++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">for</span> (key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span> (obj.hasOwnProperty(key)) &#123;</span><br><span class="line">        <span class="comment">// be sure that obj[key] belongs to the object and was not inherited</span></span><br><span class="line">        <span class="built_in">console</span>.log(obj[key]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.count = <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    x += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">new</span> Person();</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> Person();</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">delete</span>(obj.attr);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">delete</span> obj.attr;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">if</span> (a = <span class="number">10</span>) &#123;</span><br><span class="line">    a++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, , , <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> nums = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">        nums[i] = <span class="function"><span class="keyword">function</span>(<span class="params">j</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> i + j;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;(i));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> singleton = <span class="keyword">new</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> privateVar;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.publicMethod = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        privateVar = <span class="number">1</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.publicMethod2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        privateVar = <span class="number">2</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="18-杂项"><a href="#18-杂项" class="headerlink" title="18)杂项"></a>18)杂项</h4><p>不要混用tab和space；</p><p>不要在一处使用多个tab或space；</p><p>换行符统一用’LF’；</p><p>对上下文this的引用只能使用’_this’, ‘that’, ‘self’其中一个来命名；</p><p>行尾不要有空白字符；</p><p>switch的falling through和no default的情况一定要有注释特别说明；</p><p>不允许有空的代码块。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> a   = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// not good</span></span><br><span class="line">    <span class="keyword">var</span> me = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// good</span></span><br><span class="line">    <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// good</span></span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// good</span></span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">switch</span> (condition) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        ...</span><br><span class="line">    <span class="comment">// why fall through</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">// why no default</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good with empty block</span></span><br><span class="line"><span class="keyword">if</span> (condition) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 代码规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下 Navicat Premium 12.1如何安装与激活</title>
      <link href="/2019/07/14/%E5%B7%A5%E5%85%B7/mac%E4%B8%8Bnavicat%2012.1%E6%BF%80%E6%B4%BB%E8%BF%87%E7%A8%8B/"/>
      <url>/2019/07/14/%E5%B7%A5%E5%85%B7/mac%E4%B8%8Bnavicat%2012.1%E6%BF%80%E6%B4%BB%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac下Navicat-Premium-12-1如何安装与激活"><a href="#Mac下Navicat-Premium-12-1如何安装与激活" class="headerlink" title="Mac下Navicat Premium 12.1如何安装与激活"></a>Mac下Navicat Premium 12.1如何安装与激活</h2><p>[TOC]<br>###1 下载</p><p>下载地址 <a href>https://www.navicat.com/en/products</a></p><p><code>mac</code>安装过程省略，一直按照下去最后放到<code>Application</code>即可；</p><p><img src="/images/navicat.jpg" alt="navicat"></p><h3 id="2-破解"><a href="#2-破解" class="headerlink" title="2 破解"></a>2 破解</h3><p>本次的破解使用的是 <a href="https://github.com/DoubleLabyrinth/navicat-keygen" target="_blank" rel="noopener">navicat-keygen</a></p><h4 id="1-下载-Navicat-keygen-项目"><a href="#1-下载-Navicat-keygen-项目" class="headerlink" title="1)下载 Navicat-keygen 项目"></a>1)下载 <code>Navicat-keygen</code> 项目</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alex:projects $ git <span class="built_in">clone</span> https://github.com/DoubleLabyrinth/navicat-keygen</span><br></pre></td></tr></table></figure><p><img src="/images/keygen.jpg" alt="keygen"></p><h4 id="2-进入项目"><a href="#2-进入项目" class="headerlink" title="2) 进入项目"></a>2) 进入项目</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alex:projects $ <span class="built_in">cd</span> navicat-keygen/</span><br></pre></td></tr></table></figure><h4 id="3-切换-mac-分支"><a href="#3-切换-mac-分支" class="headerlink" title="3) 切换 mac 分支"></a>3) 切换 <code>mac</code> 分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alex:navicat-keygen $ git checkout mac</span><br></pre></td></tr></table></figure><h4 id="4-编译前准备"><a href="#4-编译前准备" class="headerlink" title="4) 编译前准备"></a>4) 编译前准备</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ brew install openssl</span><br><span class="line">$ brew install capstone</span><br><span class="line">$ brew install keystone</span><br><span class="line">$ brew install rapidjson</span><br></pre></td></tr></table></figure><h4 id="5-进入到navicat-patcher-并编译"><a href="#5-进入到navicat-patcher-并编译" class="headerlink" title="5) 进入到navicat-patcher 并编译"></a>5) 进入到<code>navicat-patcher</code> 并编译</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alex:navicat-keygen $ make all</span><br><span class="line">//编译之后，会有着两个文件</span><br><span class="line">alex:navicat-keygen $ ls bin</span><br><span class="line">navicat-keygennavicat-patcher</span><br></pre></td></tr></table></figure><h4 id="6-编译好navicat-keygen-navicat-patcher之后，记得备份你的app"><a href="#6-编译好navicat-keygen-navicat-patcher之后，记得备份你的app" class="headerlink" title="6) 编译好navicat-keygen, navicat-patcher之后，记得备份你的app"></a>6) 编译好<code>navicat-keygen</code>, <code>navicat-patcher</code>之后，记得备份你的app</h4><p><img src="/images/nav_bk.jpg" alt="nav_bk"></p><p>甚至备份整个 <code>Contents</code>，都可以。</p><h4 id="7-使用navicat-patcher替换掉公钥："><a href="#7-使用navicat-patcher替换掉公钥：" class="headerlink" title="7) 使用navicat-patcher替换掉公钥："></a>7) 使用<code>navicat-patcher</code>替换掉公钥：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">    navicat-patcher &lt;navicat executable file&gt; [RSA-2048 PrivateKey(PEM file)]</span><br></pre></td></tr></table></figure><ul><li><p><code>&lt;navicat executable file&gt;</code>: Navicat可执行文件的路径。</p><p><strong>这个参数必须指定。</strong></p></li><li><p><code>[RSA-2048 PrivateKey(PEM file)]</code>: RSA-2048私钥文件的路径。</p><p><strong>这个参数是可选的。</strong> 如果没有指定，<code>navicat-patcher</code>将会在当前目录下生成一个新的RSA-2048私钥文件<code>RegPrivateKey.pem</code>。</p></li></ul><p>我使用最简单的用法，不指定：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alex:navicat-keygen $ <span class="built_in">cd</span> bin</span><br><span class="line">alex:bin $ ls</span><br><span class="line">navicat-keygennavicat-patcher</span><br><span class="line">alex:bin $ ./navicat-patcher /Applications/Navicat\Premium.app/Contents/MacOS/Navicat\ Premium</span><br></pre></td></tr></table></figure><p><img src="/images/image-20190727105419621.png" alt="image-20190727105419621"></p><p>如上图：这只是样例生成<code>RSA public key</code>一部分。</p><p>在<code>bin</code>里面生成了<code>RegPrivateKey.pem</code></p><p><img src="/images/image-20190727105758411.png" alt="image-20190727105758411"></p><p><strong>仅对 Navicat Premium 版本 &lt; 12.0.24 的说明：</strong></p><p>如果你的Navicat版本小于12.0.24，那么<code>navicat-patcher</code>将会终止并且不会修改目标文件。</p><p>你必须使用openssl生成<code>RegPrivateKey.pem</code>和<code>rpk</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ openssl genrsa -out RegPrivateKey.pem 2048</span><br><span class="line">$ openssl rsa -<span class="keyword">in</span> RegPrivateKey.pem -pubout -out rpk</span><br></pre></td></tr></table></figure><p>接着用刚生成的<code>rpk</code>文件替换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Applications/Navicat Premium.app/Contents/Resources/rpk</span><br></pre></td></tr></table></figure><h4 id="8-重要的一步：生成一份自签名的代码证书，并总是信任该证书"><a href="#8-重要的一步：生成一份自签名的代码证书，并总是信任该证书" class="headerlink" title="8) 重要的一步：生成一份自签名的代码证书，并总是信任该证书"></a>8) 重要的一步：<strong>生成一份自签名的代码证书，并总是信任该证书</strong></h4><p><strong>用codesign对Navicat Premium.app重签名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ codesign -f -s <span class="string">"Your self-signed code-sign certificate name"</span> &lt;path to Navicat Premium.app&gt;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>“Your self-signed code-sign certificate name”是你证书的名字，不是路径。</p><p><strong>例如：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alex:bin $ codesign -f -s <span class="string">"master"</span> /Applications/Navicat\ Premium.app/</span><br></pre></td></tr></table></figure><h4 id="9-接下来使用navicat-keygen来生成-序列号-和-激活码"><a href="#9-接下来使用navicat-keygen来生成-序列号-和-激活码" class="headerlink" title="9) 接下来使用navicat-keygen来生成 序列号 和 激活码"></a>9) 接下来使用<code>navicat-keygen</code>来生成 <strong>序列号</strong> 和 <strong>激活码</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">    navicat-keygen &lt;RSA-2048 PrivateKey(PEM file)&gt;</span><br></pre></td></tr></table></figure><ul><li><p><code>&lt;RSA-2048 PrivateKey(PEM file)&gt;</code>: RSA-2048私钥文件的路径。</p><p><strong>这个参数必须指定。</strong></p></li></ul><p><strong>例如：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">alex:bin $ ./navicat-keygen ./RegPrivateKey.pem</span><br><span class="line">Which is your Navicat Premium language?</span><br><span class="line">0. English</span><br><span class="line">1. Simplified Chinese</span><br><span class="line">2. Traditional Chinese</span><br><span class="line">3. Japanese</span><br><span class="line">4. Polish</span><br><span class="line">5. Spanish</span><br><span class="line">6. French</span><br><span class="line">7. German</span><br><span class="line">8. Korean</span><br><span class="line">9. Russian</span><br><span class="line">10. Portuguese</span><br><span class="line"></span><br><span class="line">(Input index)&gt; 0</span><br><span class="line">(Input major version number, range: 0 ~ 15, default: 12)&gt; 12</span><br><span class="line"></span><br><span class="line">Serial number:</span><br><span class="line">N6VM-YWXC-8ZJU-99VH</span><br><span class="line"></span><br><span class="line">Your name:</span><br></pre></td></tr></table></figure><p>你可以使用这个 <strong>序列号</strong> 暂时激活Navicat。</p><p>接下来你会被要求输入<code>用户名</code>和<code>组织名</code>；请随便填写，但不要太长</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Your name: alex</span><br><span class="line">Your organization: alex</span><br><span class="line"></span><br><span class="line">Input request code (<span class="keyword">in</span> Base64), input empty line to end:</span><br></pre></td></tr></table></figure><p>之后你会被要求填入请求码。注意 <strong>不要关闭注册机</strong>.</p><h4 id="10-手动激活"><a href="#10-手动激活" class="headerlink" title="10) 手动激活"></a>10) 手动激活</h4><p><strong>断开网络</strong> 并打开Navicat。找到<code>注册</code>窗口，填入注册机给你的序列号。然后点击<code>激活</code>按钮</p><p>一般来说在线激活肯定会失败，这时候Navicat会询问你是否<code>手动激活</code>，直接选</p><p>在<code>手动激活</code>窗口你会得到一个请求码，复制它并把它粘贴到keygen里。最后别忘了连按至少两下回车结束输入</p><p><img src="/images/image-20190727111438303.png" alt="image-20190727111438303"></p><h4 id="11-成功激活"><a href="#11-成功激活" class="headerlink" title="11) 成功激活"></a>11) 成功激活</h4><p>如果不出意外，你会得到一个看似用<code>Base64</code>编码的激活码。直接复制它，并把它粘贴到<code>Navicat</code>的<code>手动激活</code>窗口，最后点<code>激活</code>按钮。如果没什么意外的话应该能<code>成功激活</code></p><p><img src="/images/image-20190727111542953.png" alt="image-20190727111542953"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>申请免费域名到搭建整个网站</title>
      <link href="/2019/07/14/%E5%B7%A5%E5%85%B7/%E7%94%B3%E8%AF%B7%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E5%88%B0%E6%90%AD%E5%BB%BA%E6%95%B4%E4%B8%AA%E7%BD%91%E7%AB%99/"/>
      <url>/2019/07/14/%E5%B7%A5%E5%85%B7/%E7%94%B3%E8%AF%B7%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E5%88%B0%E6%90%AD%E5%BB%BA%E6%95%B4%E4%B8%AA%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h2 id="申请免费域名到搭建整个网站"><a href="#申请免费域名到搭建整个网站" class="headerlink" title="申请免费域名到搭建整个网站"></a>申请免费域名到搭建整个网站</h2><h3 id="1-申请免费域名"><a href="#1-申请免费域名" class="headerlink" title="1 申请免费域名"></a>1 申请免费域名</h3><p>可以到 <a href="[https://www.freenom.com](https://www.freenom.com/)">freenom</a> 申请免费或者便宜的域名</p><p><img src="/images/image-20190728075830521.png" alt="image-20190728075830521"></p><p>注册 or 登陆一个账号……</p><p><img src="/images/image-20190728080047064.png" alt="image-20190728080047064"></p><p><img src="/images/image-20190728080343581.png" alt="image-20190728080343581"></p><p>后缀<code>Tk\ml\ga\cf</code> 大多可以免费申请到，如果想要一些付费的 <code>com\cn</code>, 也可以购买。</p><p>然后 <code>Get it now</code>, 在购物车里就可以看到：</p><p><img src="/images/image-20190728080923570.png" alt="image-20190728080923570"></p><p>免费使用最大时间是<code>12months</code>, 如果再久就需要付费了。</p><h3 id="2-域名解析"><a href="#2-域名解析" class="headerlink" title="2 域名解析"></a>2 域名解析</h3><p>域名解析的话，国内的解析提供商我们一般用 DNSPod，国外的解析服务提供商一般用 CloudFlare，操作都大同小异，接下来以 dynadot 和 DNSPod 为例，讲解一下域名解析。</p><p>首先我们打开 DNSPod 的网站：<a href="https://www.dnspod.cn/" target="_blank" rel="noopener">www.dnspod.cn</a>，如果没有账户，注册一个然后进行登陆。</p><p>登陆之后，添加我们要解析的域名。如图所示。</p><p><img src="/images/image-20190728083830772.png" alt="image-20190728083830772"></p><p>然后检查是否要导入它自动扫描的解析记录，如果不是我们添加的，一般不导入</p><p><img src="/images/image-20190728084043364.png" alt="image-20190728084043364"></p><p>我们选择取消，不导入，然后进入下一步，添加记录。</p><p><img src="/images/image-20190728084216418.png" alt="image-20190728084216418"></p><p>如上图所示，最基本的话我们需要添加两条记录，一条是 WWW，一条是 @，这两条记录分别添加，记录类型都选择 A，线路类型选择默认即可，记录值填入你的服务器 IP 地址，权重和 MX优先级不用写，TTL 就默认的 600 就行，然后点击保存;</p><p>两条记录添加完后，我们再到域名注册商那边修改 <code>NameServer</code>。</p><p>我们需要返回到 <code>freenom</code>;</p><p>在菜单中找到 <code>my domains</code>，然后点击你的域名，找到管理 <code>name servers</code>:</p><p><img src="/images/image-20190728085151478.png" alt="image-20190728085151478"></p><p>之后我们输入 <code>DNSPod</code> 的 <code>NameServer</code>，也就是：</p><ul><li>f1g1ns1.dnspod.net</li><li>f1g1ns2.dnspod.net</li></ul><p>修改完之后点击 <code>Save</code> 之类的按钮，保存即可。</p><p>至此，我们已经完成了整个解析过程，接下来需要做的就是等待解析生效，这个时间一般需要几分钟到十几个小时，取决于之前设置的 TTL。所以我们一般不建议把 TTL 设置的过大，默认即可。一般来说几分钟就能生效，如果几天还不生效，那多半是本地有了 DNS 缓存，我们可以清理一下缓存即可。</p><p><img src="/images/image-20190728085555060.png" alt="image-20190728085555060"></p><p>之后的话，域名解析完成了，就可以上传网站文件;</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端/关于webpack的面试题总结</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/%E5%85%B3%E4%BA%8Ewebpack%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/%E5%85%B3%E4%BA%8Ewebpack%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="关于webpack的面试题总结"><a href="#关于webpack的面试题总结" class="headerlink" title="关于webpack的面试题总结"></a>关于webpack的面试题总结</h1><p>[TOC]</p><h2 id="为什么要总结webpack相关的面试题"><a href="#为什么要总结webpack相关的面试题" class="headerlink" title="为什么要总结webpack相关的面试题"></a>为什么要总结webpack相关的面试题</h2><p>随着现代前端开发的复杂度和规模越来越庞大，已经不能抛开工程化来独立开发了，如react的jsx代码必须编译后才能在浏览器中使用；又如sass和less的代码浏览器也是不支持的。 而如果摒弃了这些开发框架，那么开发的效率将大幅下降。在众多前端工程化工具中，<code>webpack</code>脱颖而出成为了当今最流行的前端构建工具。 然而大多数的使用者都只是单纯的会<code>使用</code>，而并不知道其深层的原理。希望通过以下的面试题总结可以帮助大家温故知新、查缺补漏，知其然而又知其所以然。</p><h2 id="FAQ-问题列表"><a href="#FAQ-问题列表" class="headerlink" title="FAQ 问题列表"></a>FAQ 问题列表</h2><ol><li>webpack与grunt、gulp的不同？</li><li>与webpack类似的工具还有哪些？谈谈你为什么最终选择（或放弃）使用webpack？</li><li>有哪些常见的Loader？他们是解决什么问题的？</li><li>有哪些常见的Plugin？他们是解决什么问题的？</li><li>Loader和Plugin的不同？</li><li>webpack的构建流程是什么?从读取配置到输出文件这个过程尽量说全</li><li>是否写过Loader和Plugin？描述一下编写loader或plugin的思路？</li><li>webpack的热更新是如何做到的？说明其原理？</li><li>如何利用webpack来优化前端性能？（提高性能和体验）</li><li>如何提高webpack的构建速度？</li><li>怎么配置单页应用？怎么配置多页应用？</li><li>npm打包时需要注意哪些？如何利用webpack来更好的构建？</li><li>如何在vue项目中实现按需加载？</li></ol><h2 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h2><h3 id="1、webpack与grunt、gulp的不同？"><a href="#1、webpack与grunt、gulp的不同？" class="headerlink" title="1、webpack与grunt、gulp的不同？"></a>1、webpack与grunt、gulp的不同？</h3><p>三者都是前端构建工具，grunt和gulp在早期比较流行，现在webpack相对来说比较主流</p><p>不过一些轻量化的任务还是会用gulp来处理，比如单独打包CSS文件。</p><p><a href="https://link.zhihu.com/?target=https%3A//www.gruntjs.net/">grunt</a>和<a href="https://link.zhihu.com/?target=https%3A//www.gulpjs.com.cn/">gulp</a>是基于任务和流（Task、Stream）的。类似jQuery，找到一个（或一类）文件，对其做一系列链式操作，更新流上的数据， 整条链式操作构成了一个任务，多个任务就构成了整个web的构建流程。</p><p>webpack是基于入口的。webpack会自动地递归解析入口所需要加载的所有资源文件，然后用不同的Loader来处理不同的文件，用Plugin来扩展webpack功能。</p><p>gulp和grunt需要开发者将整个前端构建过程拆分成多个<code>Task</code>，并合理控制所有<code>Task</code>的调用关系<br>webpack需要开发者找到入口，并需要清楚对于不同的资源应该使用什么Loader做何种解析和加工。</p><h4 id="2、与webpack类似的工具还有哪些？谈谈你为什么最终选择（或放弃）使用webpack？"><a href="#2、与webpack类似的工具还有哪些？谈谈你为什么最终选择（或放弃）使用webpack？" class="headerlink" title="2、与webpack类似的工具还有哪些？谈谈你为什么最终选择（或放弃）使用webpack？"></a>2、与webpack类似的工具还有哪些？谈谈你为什么最终选择（或放弃）使用webpack？</h4><p>同样是基于入口的打包工具还有以下几个主流的：</p><ul><li><p>webpack</p></li><li><p><a href="https://link.zhihu.com/?target=https%3A//rollupjs.org/">rollup</a></p></li><li><p><a href="https://link.zhihu.com/?target=https%3A//parceljs.org/">parcel</a></p></li></ul><p><strong>从应用场景上来看：</strong></p><ul><li>webpack适用于大型复杂的前端站点构建</li><li>rollup适用于基础库的打包，如vue、react</li><li>parcel适用于简单的实验性项目，他可以满足低门槛的快速看到效果</li></ul><p>由于parcel在打包过程中给出的调试信息十分有限，所以一旦打包出错难以调试，所以不建议复杂的项目使用parcel。</p><h3 id="3-有哪些常见的Loader？他们是解决什么问题的？"><a href="#3-有哪些常见的Loader？他们是解决什么问题的？" class="headerlink" title="3.有哪些常见的Loader？他们是解决什么问题的？"></a>3.有哪些常见的Loader？他们是解决什么问题的？</h3><ul><li>file-loader：把文件输出到一个文件夹中，在代码中通过相对 URL 去引用输出的文件</li><li>url-loader：和 file-loader 类似，但是能在文件很小的情况下以 base64 的方式把文件内容注入到代码中去</li><li>source-map-loader：加载额外的 Source Map 文件，以方便断点调试</li><li>image-loader：加载并且压缩图片文件</li><li>babel-loader：把 ES6 转换成 ES5</li><li>css-loader：加载 CSS，支持模块化、压缩、文件导入等特性</li><li>style-loader：把 CSS 代码注入到 JavaScript 中，通过 DOM 操作去加载 CSS。</li><li>eslint-loader：通过 ESLint 检查 JavaScript 代码</li></ul><h3 id="4-有哪些常见的Plugin？他们是解决什么问题的？"><a href="#4-有哪些常见的Plugin？他们是解决什么问题的？" class="headerlink" title="4.有哪些常见的Plugin？他们是解决什么问题的？"></a>4.有哪些常见的Plugin？他们是解决什么问题的？</h3><ul><li><p>define-plugin：定义环境变量</p></li><li><p>commons-chunk-plugin：提取公共代码</p></li><li><p>uglifyjs-webpack-plugin：通过<code>UglifyES</code>压缩<code>ES6</code>代码</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端/前端面试测试题目</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E6%B5%8B%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E6%B5%8B%E8%AF%95%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><h3 id="1-基本类型"><a href="#1-基本类型" class="headerlink" title="1 基本类型"></a>1 基本类型</h3><p>介绍一下基本类型有几种？</p><p>怎么判断数据类型？</p><p>Object 和 Array，怎么区分？</p><p>null == undefined ?</p><h3 id="2-变量作用域"><a href="#2-变量作用域" class="headerlink" title="2 变量作用域"></a>2 变量作用域</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">"Hello body"</span>;</span><br><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">name: <span class="string">"A"</span>,</span><br><span class="line">sayHi: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> b = &#123;</span><br><span class="line">name: <span class="string">'B'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> sayHi = a.sayHi;</span><br><span class="line">name = <span class="string">"Hello C"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name)</span><br><span class="line"></span><br><span class="line">a.sayHi()</span><br><span class="line">sayHi()</span><br><span class="line">a.sayHi.call(b)</span><br></pre></td></tr></table></figure><h3 id="3-闭包"><a href="#3-闭包" class="headerlink" title="3 闭包"></a>3 闭包</h3><h3 id="4-call-和-apply的区别"><a href="#4-call-和-apply的区别" class="headerlink" title="4 call 和 apply的区别"></a>4 call 和 apply的区别</h3><h3 id="5-浅拷贝-和-深拷贝"><a href="#5-浅拷贝-和-深拷贝" class="headerlink" title="5 浅拷贝 和 深拷贝"></a>5 浅拷贝 和 深拷贝</h3><h3 id="6-const-和-let-的区别"><a href="#6-const-和-let-的区别" class="headerlink" title="6 const  和 let 的区别"></a>6 const  和 let 的区别</h3><h3 id="7-写出Es6的几种用法"><a href="#7-写出Es6的几种用法" class="headerlink" title="7 写出Es6的几种用法"></a>7 写出Es6的几种用法</h3><h3 id="8-Vue-生命周期实现过程？"><a href="#8-Vue-生命周期实现过程？" class="headerlink" title="8 Vue 生命周期实现过程？"></a>8 Vue 生命周期实现过程？</h3><h3 id="9-vuex中-mumation-和-action-有什么不同？-实现原理是什么？"><a href="#9-vuex中-mumation-和-action-有什么不同？-实现原理是什么？" class="headerlink" title="9 vuex中 mumation 和 action 有什么不同？ 实现原理是什么？"></a>9 vuex中 mumation 和 action 有什么不同？ 实现原理是什么？</h3><h3 id="10-vue-v-if-和-v-show-的区别？-Key的作用？"><a href="#10-vue-v-if-和-v-show-的区别？-Key的作用？" class="headerlink" title="10 vue v-if 和 v-show 的区别？ Key的作用？"></a>10 vue v-if 和 v-show 的区别？ Key的作用？</h3><h3 id="11-vue-keep-alive-用法？"><a href="#11-vue-keep-alive-用法？" class="headerlink" title="11 vue keep-alive 用法？"></a>11 vue keep-alive 用法？</h3><h3 id="12-bind-和-call-apply-区别"><a href="#12-bind-和-call-apply-区别" class="headerlink" title="12 bind 和 call apply 区别"></a>12 bind 和 call apply 区别</h3><h3 id="13-Promise-和-async-await-区别？"><a href="#13-Promise-和-async-await-区别？" class="headerlink" title="13 Promise 和 async await 区别？"></a>13 Promise 和 async await 区别？</h3><h3 id="14-本地存储"><a href="#14-本地存储" class="headerlink" title="14 本地存储"></a>14 本地存储</h3><h3 id="15-跨域"><a href="#15-跨域" class="headerlink" title="15 跨域"></a>15 跨域</h3><h3 id="16-Event-Loop"><a href="#16-Event-Loop" class="headerlink" title="16 Event Loop"></a>16 Event Loop</h3><h3 id="17-事件委托机制"><a href="#17-事件委托机制" class="headerlink" title="17 事件委托机制"></a>17 事件委托机制</h3><h3 id="18-异步请求"><a href="#18-异步请求" class="headerlink" title="18 异步请求"></a>18 异步请求</h3><h3 id="19-Vue-双向数据绑定的原理"><a href="#19-Vue-双向数据绑定的原理" class="headerlink" title="19 Vue 双向数据绑定的原理"></a>19 Vue 双向数据绑定的原理</h3><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="1-盒子模型"><a href="#1-盒子模型" class="headerlink" title="1 盒子模型"></a>1 盒子模型</h3><h3 id="2、垂直居中问题"><a href="#2、垂直居中问题" class="headerlink" title="2、垂直居中问题"></a>2、垂直居中问题</h3>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端测验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用React v16.9的Lazy-loading懒加载组件，进行路由封装</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/React%E7%9A%84Lazy-loading%E8%B7%AF%E7%94%B1/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/React%E7%9A%84Lazy-loading%E8%B7%AF%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<h3 id="使用React-v16-9的Lazy-loading懒加载组件，进行路由封装"><a href="#使用React-v16-9的Lazy-loading懒加载组件，进行路由封装" class="headerlink" title="使用React v16.9的Lazy-loading懒加载组件，进行路由封装"></a>使用React v16.9的Lazy-loading懒加载组件，进行路由封装</h3><p>[TOC]</p><p><img src="/images/1568696159178.png" alt="1568696159178"></p><p>使用<code>Suspense</code>和 <code>React.lazy()</code>，进行代码分割和懒加载组件:</p><h4 id="code-splitting"><a href="#code-splitting" class="headerlink" title="code-splitting"></a>code-splitting</h4><p><code>React</code>官网有相关代码分离的说明，这里不再赘述，使用 <code>import()</code> 动态导入会更加有利于代码的分离。</p><p>关于<code>import()</code>语法，如果你使用CRA（create-react-app）搭建的项目，可以直接使用这个语法。如果是自己从零开始搭建的项目，需要<code>babel</code>的插件 <code>babel-plugin-syntax-dynamic-import</code>;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add babel-plugin-syntax-dynamic-import</span><br><span class="line">or</span><br><span class="line">npm install babel-plugin-syntax-dynamic-import</span><br></pre></td></tr></table></figure><p>.babelrc 或者 babel.config.js 中增加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;plugins&quot;: [&quot;syntax-dynamic-import&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="React-lazy"><a href="#React-lazy" class="headerlink" title="React.lazy()"></a>React.lazy()</h4><p><code>React.lazy()</code>允许你渲染一个动态引入的组件像普通组件一样执行;</p><p><code>React.lazy</code> 可接受一个返回<code>Promise</code>的调用<code>import()</code>的<code>function</code>，这个<code>promise</code>最后<code>resolve</code>一个默认导出当前组件。</p><p>一般写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123;lazy&#125; from &quot;react&quot;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 默认后缀 .jsx</span><br><span class="line">const App &#x3D; lazy(()&#x3D;&gt; import(&quot;..&#x2F;pages&#x2F;App&quot;));</span><br><span class="line">const About &#x3D; lazy(()&#x3D;&gt; import(&quot;..&#x2F;pages&#x2F;About&quot;));</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 路由配置</span><br><span class="line">const routerConfig &#x3D; [</span><br><span class="line">    &#123;</span><br><span class="line">        path: &#39;&#x2F;&#39;,</span><br><span class="line">        component: App</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        path: &#39;&#x2F;about&#39;,</span><br><span class="line">        component: About</span><br><span class="line">    &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">function AppRouter() &#123;</span><br><span class="line">  return (</span><br><span class="line">      &lt;Suspense fallback&#x3D;&#123;&lt;div&gt;Loading...&lt;&#x2F;div&gt;&#125;&gt;</span><br><span class="line">        &lt;Router basename&#x3D;&quot;&#x2F;&quot;&gt;</span><br><span class="line">&lt;Switch&gt;</span><br><span class="line">&#123;routerConfig.map((n, index) &#x3D;&gt; &#123;</span><br><span class="line">return &lt;Route path&#x3D;&#123;n.path&#125; exact component&#x3D;&#123;n.component&#125; key&#x3D;&#123;index&#125;&gt;&lt;&#x2F;Route&gt;;</span><br><span class="line">&#125;)&#125;</span><br><span class="line">&lt;&#x2F;Switch&gt;</span><br><span class="line">        &lt;&#x2F;Router&gt;</span><br><span class="line">      &lt;&#x2F;Suspense&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default AppRouter;</span><br></pre></td></tr></table></figure><p><code>Lazy</code>组件需要反之在 <code>Suspense</code> 组件内部, <code>Suspense</code> 提供一个 <code>fallback</code> 内容填充，当正在懒加载组件的时候，比如加个loading;</p><p>我们下面对lazy进行二次封装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; lazy load</span><br><span class="line">const lazyLoad &#x3D; path &#x3D;&gt;</span><br><span class="line">    lazy(() &#x3D;&gt; &#123;</span><br><span class="line">        return new Promise(resolve &#x3D;&gt; setTimeout(resolve, 1 * 1000)).then(() &#x3D;&gt; import(&#96;..&#x2F;pages&#x2F;$&#123;path&#125;&#96;)).catch(() &#x3D;&gt; import(&#39;..&#x2F;components&#x2F;Error&#39;));</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F;这个方法需要注意的一点，这个 path 不能直接传&#96;相对路径&#96;类似 &#96;..&#x2F;pages&#x2F;App&#96;,</span><br><span class="line">&#x2F;&#x2F;会找不到组件，所以最好只传过来一个组件名字，然后内部拼接相对路径</span><br><span class="line">&#x2F;&#x2F;另外在后面加了一个Promise的reject状态处理，如果组件加载错误，将会默认加载Error组件；</span><br><span class="line">import Loading from &#39;@c&#x2F;Loading&#39;;</span><br><span class="line">const App &#x3D; lazyLoad(&#39;App&#39;);</span><br><span class="line">const About &#x3D; lazyLoad(&#39;About&#39;);</span><br><span class="line"></span><br><span class="line">function AppRouter() &#123;</span><br><span class="line">    return (</span><br><span class="line">&lt;Suspense fallback&#x3D;&#123;&lt;Loading &#x2F;&gt;&#125;&gt;</span><br><span class="line">&#123;&#x2F;* 只有当你的应用部署到服务器的二级目录的时候，才需要设置basename *&#x2F;&#125;</span><br><span class="line">&#123;&#x2F;* &lt;Router basename&#x3D;&quot;&#x2F;&quot;&gt; *&#x2F;&#125;</span><br><span class="line">&lt;Router basename&#x3D;&quot;&#x2F;&quot;&gt;</span><br><span class="line">&lt;Switch&gt;</span><br><span class="line">&#123;routerConfig.map((n, index) &#x3D;&gt; &#123;</span><br><span class="line">return &lt;Route path&#x3D;&#123;n.path&#125; exact component&#x3D;&#123;n.component&#125; key&#x3D;&#123;index&#125;&gt;&lt;&#x2F;Route&gt;;</span><br><span class="line">&#125;)&#125;</span><br><span class="line">&lt;&#x2F;Switch&gt;</span><br><span class="line">&lt;&#x2F;Router&gt;</span><br><span class="line">&lt;&#x2F;Suspense&gt;</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default AppRouter;</span><br></pre></td></tr></table></figure><p>这样就完成了懒加载路由的简单封装。</p><p><img src="/images/lazy.gif" alt></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>window和document各种宽高计算</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/window%E5%92%8Cdocument%E5%90%84%E7%A7%8D%E5%AE%BD%E9%AB%98%E8%AE%A1%E7%AE%97/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/window%E5%92%8Cdocument%E5%90%84%E7%A7%8D%E5%AE%BD%E9%AB%98%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h3 id="window和document各种宽高计算"><a href="#window和document各种宽高计算" class="headerlink" title="window和document各种宽高计算"></a>window和document各种宽高计算</h3><p>[TOC]</p><h4 id="1、盒子模型"><a href="#1、盒子模型" class="headerlink" title="1、盒子模型"></a>1、盒子模型</h4><p><img src="/images/box-model-standard-small.png" alt="img"></p><p>所谓<code>CSS</code>盒子模型是：</p><p><code>margin</code> + <code>border</code> + <code>padding</code> + <code>content</code></p><p>举例说明：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  *&#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.box</span>&#123;</span></span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 200px;</span><br><span class="line">    padding: 20px;</span><br><span class="line">    margin: 20px;</span><br><span class="line">    border: 2px solid red;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.boxItem</span>&#123;</span></span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">    background: green;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"boxItem"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/box.jpg" alt></p><p>如图所示：</p><blockquote><p>可视区域高度： clientHeight = height + padding = 240;</p><p>正文全文高度：scrollHeight = height + padding = 240;</p><p>可见区域偏移高度：offsetHeight = height + padding + border = 244;</p></blockquote><p>此时 <code>scrollHeight</code> 和 <code>clientHeight</code> 好像看起来并没有什么区别。</p><p>如果我们上面的代码做以下修改：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid red;</span><br><span class="line">    <span class="attribute">overflow</span>:auto;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.boxItem</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">background</span>: green;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>可视区域高度： clientHeight = height + padding = 240;</p></blockquote><blockquote><p>正文全文高度：scrollHeight = height + padding = 1040;</p></blockquote><blockquote><p>可见区域偏移高度：offsetHeight = height + padding + border = 244;</p></blockquote><p>这下就可以看到之间的区别了，其他计算属性如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">clientLeft: <span class="number">2</span>;</span><br><span class="line">clinetTop: <span class="number">2</span>;</span><br><span class="line">offsetLeft: <span class="number">20</span>;</span><br><span class="line">offsetTop: <span class="number">20</span>;</span><br><span class="line">scrollLeft:<span class="number">0</span>;</span><br><span class="line">scrollTop:<span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>总结：</p><p>当前<code>div.box</code>元素的称为当前元素，当前元素的<code>offsetParent</code>（父类节点）在这里是 <code>body</code>；</p><p><code>Client</code></p><blockquote><p><code>clientleft</code>:元素的内边距的<code>外边缘</code>和元素边框的<code>外边缘</code>的距离，实际就是边框的左边框宽度</p><p><code>clienttop</code>:同理边框的上边框的宽度</p><p><code>clientwidth</code>:用于描述元素内尺寸宽度，是指 <code>元素内容</code>+<code>内边距</code> 大小，<code>不包括边框、外边距、滚动条部分</code></p><p><code>clientheight</code>:同理 用于描述元素内尺寸高度，是指 <code>元素内容</code>+<code>内边距</code> 大小，不包括边框、外边距、滚动条部分</p></blockquote><p><code>Offset</code></p><blockquote><p><code>offsetleft</code>: 元素的边框的外边缘距离与已定位的父容器（<code>offsetparent</code>）的左边距离（不包括元素的边框和父容器的边框）。</p><p><code>offsettop</code>:同理是指元素的边框的外边缘距离与已定位的父容器（<code>offsetparent</code>）的上边距离（不包括元素的边框和父容器的边框）。</p><p><code>offsetwidth</code>:描述元素外尺寸宽度，是指 元素内容宽度+内边距宽度(左右两个)+边框(左右两个)，不包括外边距和滚动条部分。</p><p><code>offsetheight</code>:同理 描述元素外尺寸高度，是指 元素内容高度+内边距高度(上下两个)+边框(上下两个)，不包括外边距和滚动条部分</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 知识总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建工具之webpack</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E4%B9%8Bwebpack/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E4%B9%8Bwebpack/</url>
      
        <content type="html"><![CDATA[<h3 id="构建工具之webpack"><a href="#构建工具之webpack" class="headerlink" title="构建工具之webpack"></a>构建工具之webpack</h3><h4 id="入门小试牛刀"><a href="#入门小试牛刀" class="headerlink" title="入门小试牛刀"></a>入门小试牛刀</h4><p>本章节我们讲解一下 webpack 构建详细过程。</p><p>作为 <code>module bundle</code>，越来越多的人使用<code>webpack</code>。</p><p>不需要像 <code>gulp grunt</code> 一样了解每个<code>task</code>过程，只需要配置入口文件等即可。</p><p><img src="/images/webpack.jpg" alt></p><p>这里使用<code>yarn</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn init -y</span><br><span class="line">yarn add webpack webpack-cli -D</span><br></pre></td></tr></table></figure><p>假如使用 <code>npm</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br><span class="line">npm install webpack webpack-cli --save-dev</span><br></pre></td></tr></table></figure><p>现在，我们将创建以下目录结构、文件和内容：</p><p><strong>project</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  webpack4</span><br><span class="line">  |- package.json</span><br><span class="line">  |- yarn.lock</span><br><span class="line"><span class="addition">+ |- index.html</span></span><br><span class="line"><span class="addition">+ |- /src</span></span><br><span class="line"><span class="addition">+   |- index.js</span></span><br></pre></td></tr></table></figure><p><strong><code>package.json</code></strong>中，去除 <code>main</code>, 增加 <code>private</code>，防止被误提交：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"webpack4"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"webpack"</span>: <span class="string">"^4.33.0"</span>,</span><br><span class="line">    <span class="attr">"webpack-cli"</span>: <span class="string">"^3.3.4"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们接下来的代码需要用到 lodash ，所以事先安装一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">yarn add lodash</span><br><span class="line"></span><br><span class="line">这里有一个小知识点：</span><br><span class="line">yarn add lodash ==VS== yarn add lodash -D</span><br><span class="line">抑或</span><br><span class="line">npm install lodash --save ==VS== npm install lodash --save-dev</span><br><span class="line">的区别：</span><br><span class="line"></span><br><span class="line">在安装一个 package，而此 package 要打包到生产环境 bundle 中时，你应该使用</span><br><span class="line">npm install --save。</span><br><span class="line">如果你在安装一个用于开发环境目的的 package 时（例如，linter, 测试库等），你应该使用</span><br><span class="line">npm install --save-dev</span><br></pre></td></tr></table></figure><p><code>index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>webpack<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"src/index.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>src/index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> _ <span class="keyword">from</span> <span class="string">'lodash'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Component</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> element = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">  element.innerText = _.join([<span class="string">'Hello'</span>, <span class="string">'World'</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.body.appendChild(Component());</span><br></pre></td></tr></table></figure><p>这时候运行，肯定不能显示，我们要先打包编译一下。</p><p>执行 <code>npx webpack</code>，会将我们的脚本 <code>src/index.js</code> 作为 入口起点，也会生成 <code>dist/main.js</code>作为 输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">alex:webpack4 $ npx webpack</span><br><span class="line">Hash: 918b00f8361c58df4bff</span><br><span class="line">Version: webpack 4.33.0</span><br><span class="line">Time: 2673ms</span><br><span class="line">Built at: 2019-06-12 23:49:02</span><br><span class="line">  Asset      Size  Chunks             Chunk Names</span><br><span class="line">main.js  70.4 KiB       0  [emitted]  main</span><br><span class="line">Entrypoint main = main.js</span><br><span class="line">[1] ./src/index.js 199 bytes &#123;0&#125; [built]</span><br><span class="line">[2] (webpack)/buildin/global.js 472 bytes &#123;0&#125; [built]</span><br><span class="line">[3] (webpack)/buildin/module.js 497 bytes &#123;0&#125; [built]</span><br><span class="line">    + 1 hidden module</span><br><span class="line"></span><br><span class="line">WARNING <span class="keyword">in</span> configuration</span><br><span class="line">The <span class="string">'mode'</span> option has not been <span class="built_in">set</span>, webpack will fallback to <span class="string">'production'</span> <span class="keyword">for</span> this value. Set <span class="string">'mode'</span> option to <span class="string">'development'</span> or <span class="string">'production'</span> to <span class="built_in">enable</span> defaults <span class="keyword">for</span> each environment.</span><br><span class="line">You can also <span class="built_in">set</span> it to <span class="string">'none'</span> to <span class="built_in">disable</span> any default behavior. Learn more: https://webpack.js.org/configuration/mode/</span><br></pre></td></tr></table></figure><p>把 <code>html</code> 中 <code>js</code> 的引用地址改为 ‘’<code>dist/main.js</code>”；</p><p>浏览器打开就能看到“<code>Hello World</code>”。</p><p>为了更加方便的配置项目，我们还是需要配置 <code>webpack.config.js</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)；</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry:&#123;</span><br><span class="line">    index: <span class="string">'./src/index.js'</span></span><br><span class="line">    <span class="comment">//记得加 ./ 不然报错 ERROR in Entry module not found: Error: Can't resolve 'src/index.js' in '/webpack4'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  output:&#123;</span><br><span class="line">    filename: <span class="string">'main.js'</span>,</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'dist'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>package.json 配置:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "build": "webpack"</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>打包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn build</span><br></pre></td></tr></table></figure><blockquote><p><em>通过在</em> <code>npm run build</code> <em>命令和你的参数之间添加两个中横线，可以将自定义参数传递给 webpack，例如：<em><code>npm run build -- --colors</code></em>。</em></p></blockquote><h4 id="loadsh-小插曲"><a href="#loadsh-小插曲" class="headerlink" title="loadsh 小插曲"></a>loadsh 小插曲</h4><p>不知道大家有没有注意到一个事情：我们只使用了<code>lodash</code>的一个<code>join</code>方法，却打包进去了整个版本  <code>70K</code>。</p><p>这对于优化来说，是个极其不划算的事情。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> Asset      Size  Chunks             Chunk Names</span><br><span class="line">main.js  <span class="number">70.4</span> KiB       <span class="number">0</span>  [emitted]  main</span><br></pre></td></tr></table></figure><p>当然我们首先</p><p><code>第一种方法</code>：</p><p>可以只引用 <code>join</code> 方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// import _ from 'lodash';</span></span><br><span class="line"><span class="keyword">import</span> join <span class="keyword">from</span> <span class="string">'lodash/join'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">component</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> element = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">  <span class="comment">// element.innerHTML = _.join(['Hello', 'World']);</span></span><br><span class="line">  element.innerHTML = join([<span class="string">'Hello'</span>, <span class="string">'World'</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> element;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> div = component();</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.body.append(div);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Hash: e68d39f2999aafcdc772</span><br><span class="line">Version: webpack <span class="number">4.33</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">304</span>ms</span><br><span class="line">Built at: <span class="number">2019</span><span class="number">-06</span><span class="number">-13</span> <span class="number">00</span>:<span class="number">42</span>:<span class="number">35</span></span><br><span class="line">  Asset      Size  Chunks             Chunk Names</span><br><span class="line">main.js  <span class="number">1.17</span> KiB       <span class="number">0</span>  [emitted]  index</span><br></pre></td></tr></table></figure><p><code>70.4 KiB —&gt; 1.17 KiB</code>效果显著。</p><p>但是一般情况，我们需要很多方法要用，不想如此麻烦，那么我们又该如何是好呢？</p><p><code>第二种方法：</code></p><p>使用 <code>lodash-webpack-plugin</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add lodash-webpack-plugin babel-core babel-loader babel-plugin-lodash babel-preset-env</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 构建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端/前端面试总结</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>最近一直在面试，却很少总结，反思了一下，这是不应该的。所以打算认真写一下。</p><p><strong>先说下笔试题</strong></p><h4 id="Q1"><a href="#Q1" class="headerlink" title="Q1:"></a>Q1:</h4><p>关于基本类型和==typeof==, 问的还是挺偏的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// number</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">NaN</span></span><br><span class="line"><span class="comment">// number</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">12</span></span><br><span class="line"><span class="comment">// string</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="string">"12"</span></span><br><span class="line"><span class="comment">// object</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span></span><br><span class="line"><span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">undefined</span></span><br><span class="line"><span class="comment">// object</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Date</span></span><br><span class="line"><span class="comment">// object</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;<span class="attr">a</span>:<span class="number">1</span>&#125;</span><br><span class="line"><span class="comment">// object</span></span><br><span class="line"><span class="keyword">typeof</span> [<span class="number">1</span>]</span><br><span class="line"><span class="comment">// function</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="comment">// true</span></span><br><span class="line"><span class="literal">null</span> == <span class="literal">undefined</span></span><br><span class="line"><span class="comment">// false</span></span><br><span class="line"><span class="literal">NaN</span> == <span class="literal">NaN</span></span><br></pre></td></tr></table></figure><p>类型判断这块的东西，比较基础，却容易混乱，接下来让我们深层次了解下这个东西。</p><p><img src="/images/1.jpeg" alt="img"></p><p>既然是数据类型判断，无可避免需要先说一下，==基本类型==有哪几种：</p><ul><li>String</li><li>Number</li><li>null</li><li>undefined</li><li>Boolean</li><li>Symbol(Es6)</li></ul><p>这六个属于基本数据类型，当然除此之外还有 ==Object== 这个属于引用类型。对象类型是有名字和键值的一个组合。</p><p>看到这里我们不禁会问，==arrays==、==functions==、==regular expressions==、==Date==、==Error==等等又算什么。它们只是特殊的Object.</p><p><strong>Example</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="string">""</span>); <span class="comment">// "string"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="string">"hello"</span>); <span class="comment">// "string"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">String</span>(<span class="string">"hello"</span>)); <span class="comment">// "string"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"hello"</span>)); <span class="comment">// "object"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="number">0</span>); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="number">-0</span>); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="number">0xff</span>); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="number">-3.142</span>); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">Infinity</span>); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> -<span class="literal">Infinity</span>); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">NaN</span>); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Number</span>(<span class="number">53</span>)); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">53</span>)); <span class="comment">// "object"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">true</span>); <span class="comment">// "boolean"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">false</span>); <span class="comment">// "boolean"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Boolean</span>(<span class="literal">true</span>)); <span class="comment">// "object"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">undefined</span>); <span class="comment">// "undefined"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">null</span>); <span class="comment">// "object"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Symbol</span>()); <span class="comment">// "symbol"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> []); <span class="comment">// "object"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Array</span>(<span class="number">5</span>)); <span class="comment">// "object"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;); <span class="comment">// "function"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Function</span>); <span class="comment">// "function"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Date</span>); <span class="comment">// "object"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> /^(.+)$/); <span class="comment">// "object"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"^(.+)$"</span>)); <span class="comment">// "object"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> &#123;&#125;); <span class="comment">// "object"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Object</span>); <span class="comment">// "object"</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>value</th><th>typeof</th></tr></thead><tbody><tr><td><code>undefined</code></td><td><code>&quot;undefined&quot;</code></td></tr><tr><td><code>null</code></td><td><code>&quot;object&quot;</code></td></tr><tr><td><code>true</code> or <code>false</code></td><td><code>&quot;boolean&quot;</code></td></tr><tr><td>all numbers or <code>NaN</code></td><td><code>&quot;number&quot;</code></td></tr><tr><td>all strings</td><td><code>&quot;string&quot;</code></td></tr><tr><td>all symbols</td><td><code>&quot;symbol&quot;</code></td></tr><tr><td>all functions</td><td><code>&quot;function&quot;</code></td></tr><tr><td>all arrays</td><td><code>&quot;object&quot;</code></td></tr><tr><td>native objects</td><td><code>&quot;object&quot;</code></td></tr><tr><td>host objects</td><td><em>dependent on implementation</em></td></tr><tr><td>other objects</td><td><code>&quot;object&quot;</code></td></tr></tbody></table><p>你或许经常碰到这句话；</p><p><img src="/images/1557903486895.png" alt="1557903486895"></p><p>这句话其实是在某些点上是错的。</p><p>很多人也许会问，那为什么有些不是对象但是我们依然可以如下调用对象的方法呢？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// getting length property of the string</span></span><br><span class="line">(“Hello World!”).length</span><br><span class="line"><span class="comment">//   getting the character of the string at index 8</span></span><br><span class="line">(“Another <span class="built_in">String</span>”)[<span class="number">8</span>]</span><br><span class="line"><span class="comment">//  calling Number.prototype.toFixed() method on the number</span></span><br><span class="line">(<span class="number">53.12345</span>).toFixed(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>真实的原因是javascript引擎创造了一个wrapped object 和这个原始语句相对应。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wrapper object: new String("Hello World!")</span></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"Hello World!"</span>)).toLowerCase();</span><br><span class="line"></span><br><span class="line"><span class="comment">// wrapper object: new String("Another String")</span></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"Another String"</span>))[<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// wrapper object: new Number(53.12345)</span></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">53.12345</span>)).toFixed(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>再次说下类型比较，==null== 和 ==[]==通过==typeof== 判断都返回 ==object==， 此时我们怎么样才能进行深层次的区分呢？</p><h5 id="比较精确的类型比较，大概要通过下面几种方法"><a href="#比较精确的类型比较，大概要通过下面几种方法" class="headerlink" title="比较精确的类型比较，大概要通过下面几种方法"></a>比较精确的类型比较，大概要通过下面几种方法</h5><ul><li><p>instanceof operator</p></li><li><p>checking the constructor property of the object</p></li><li><p>使用 toString() 方法检查类型.</p></li></ul><h4 id="Checking-for-null"><a href="#Checking-for-null" class="headerlink" title="Checking for null"></a>Checking for null</h4>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isNull</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> val === <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span> == <span class="literal">null</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span> === <span class="literal">null</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="Checking-for-NaN"><a href="#Checking-for-NaN" class="headerlink" title="Checking for NaN"></a>Checking for NaN</h4><p>  NaN是一个计算导致的结果，一般没有实质意思。前面说过 typeof NaN = number 如果想进一步区分，可以通过 isNaN 或者 es6的 Number.isNaN()</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="literal">NaN</span> <span class="comment">//number</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">isNaN</span>(<span class="literal">NaN</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">isNaN</span>(<span class="literal">null</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">isNaN</span>(<span class="literal">undefined</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">isNaN</span>(<span class="literal">Infinity</span>)); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>.isNaN(<span class="literal">NaN</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>.isNaN(<span class="literal">null</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>.isNaN(<span class="literal">undefined</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>.isNaN(<span class="literal">Infinity</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>  最终用法,兼容es6：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>.isNaN = <span class="built_in">Number</span>.isNaN || (<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> value !== value;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="Checking-for-arrays"><a href="#Checking-for-arrays" class="headerlink" title="Checking for arrays"></a>Checking for arrays</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// METHOD 1: constructor property</span></span><br><span class="line"><span class="comment">// Not reliable</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isArray</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">typeof</span> value == <span class="string">'object'</span> &amp;&amp; value.constructor === <span class="built_in">Array</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// METHOD 2: instanceof</span></span><br><span class="line"><span class="comment">// Not reliable since an object's prototype can be changed</span></span><br><span class="line"><span class="comment">// Unexpected results within frames</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isArray</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> value <span class="keyword">instanceof</span> <span class="built_in">Array</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// METHOD 3: Object.prototype.toString()</span></span><br><span class="line"><span class="comment">// Better option and very similar to ES6 Array.isArray()</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isArray</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(value) === <span class="string">'[object Array]'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// METHOD 4: ES6 Array.isArray()</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isArray</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Array</span>.isArray(value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实最常用的 Object.prototype.toString.call(data) 是很有用的（apply也可以）。不过我们可以封装一下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">type</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line"><span class="keyword">const</span> regex = <span class="regexp">/^\[object (\S+?)\]$/</span>;</span><br><span class="line"><span class="keyword">const</span> matches = <span class="built_in">Object</span>.prototype.toString.call(value).match(regex) || [];</span><br><span class="line"><span class="keyword">return</span> (matches[<span class="number">1</span>] || <span class="string">"undefined"</span>).toLowerCase();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Example</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(type(<span class="string">''</span>)); <span class="comment">// "string"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="string">'hello'</span>)); <span class="comment">// "string"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="built_in">String</span>(<span class="string">'hello'</span>))); <span class="comment">// "string"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">'hello'</span>))); <span class="comment">// "string"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="number">0</span>)); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="number">-0</span>)); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="number">0xff</span>)); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="number">-3.142</span>)); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="literal">Infinity</span>)); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(-<span class="literal">Infinity</span>)); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="literal">NaN</span>)); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="built_in">Number</span>(<span class="number">53</span>))); <span class="comment">// "number"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">53</span>))); <span class="comment">// "number"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="literal">true</span>)); <span class="comment">// "boolean"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="literal">false</span>)); <span class="comment">// "boolean"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="keyword">new</span> <span class="built_in">Boolean</span>(<span class="literal">true</span>))); <span class="comment">// "boolean"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="literal">undefined</span>)); <span class="comment">// "undefined"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="literal">null</span>)); <span class="comment">// "null"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="built_in">Symbol</span>())); <span class="comment">// "symbol"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="built_in">Symbol</span>.species)); <span class="comment">// "symbol"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(type([])); <span class="comment">// "array"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="built_in">Array</span>(<span class="number">5</span>))); <span class="comment">// "array"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log((<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> type(<span class="built_in">arguments</span>) &#125;)()); <span class="comment">// "arguments"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;)); <span class="comment">// "function"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="keyword">new</span> <span class="built_in">Function</span>)); <span class="comment">// "function"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="class"><span class="keyword">class</span> </span>&#123;&#125;)); <span class="comment">// "function"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(type(&#123;&#125;)); <span class="comment">// "object"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="keyword">new</span> <span class="built_in">Object</span>)); <span class="comment">// "object"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="regexp">/^(.+)$/</span>)); <span class="comment">// "regexp"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"^(.+)$"</span>))); <span class="comment">// "regexp"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="keyword">new</span> <span class="built_in">Date</span>)); <span class="comment">// "date"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="keyword">new</span> <span class="built_in">Set</span>)); <span class="comment">// "set"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="keyword">new</span> <span class="built_in">Map</span>)); <span class="comment">// "map"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="keyword">new</span> <span class="built_in">WeakSet</span>)); <span class="comment">// "weakset"</span></span><br><span class="line"><span class="built_in">console</span>.log(type(<span class="keyword">new</span> <span class="built_in">WeakMap</span>)); <span class="comment">// "weakmap"</span></span><br></pre></td></tr></table></figure><h4 id="Q2"><a href="#Q2" class="headerlink" title="Q2:"></a>Q2:</h4><p>考察<strong>变量作用域</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">"Hello body"</span>;</span><br><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">name: <span class="string">"A"</span>,</span><br><span class="line">sayHi: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> b = &#123;</span><br><span class="line">name: <span class="string">'B'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> sayHi = a.sayHi;</span><br><span class="line">name = <span class="string">"Hello C"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//依次写出返回值</span></span><br><span class="line"><span class="built_in">console</span>.log(name);<span class="comment">//Hello C</span></span><br><span class="line"><span class="comment">// 此时 this 指向仍是 a</span></span><br><span class="line">a.sayHi();<span class="comment">// A</span></span><br><span class="line"><span class="comment">// 此时 this 指向是 window 也就是全局变量 name</span></span><br><span class="line">sayHi(); <span class="comment">// Hello C</span></span><br><span class="line"><span class="comment">// 改变 this 指向 b</span></span><br><span class="line">a.sayHi.call(b);<span class="comment">// 'B'</span></span><br></pre></td></tr></table></figure><p>这应该是个大部分面试都会问的问题吧。</p><h5 id><a href="#" class="headerlink" title></a><img src="/images/1557908240751.png" alt="1557908240751"></h5><p>搞笑一下，言归正传，继续。</p><h4 id="Q3"><a href="#Q3" class="headerlink" title="Q3:"></a>Q3:</h4><p>考察 <strong>栈(Stack) &amp;&amp; 堆(Heap)</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">"a"</span>;</span><br><span class="line"><span class="keyword">const</span> a = &#123;</span><br><span class="line">  name: name,</span><br><span class="line">  php: [<span class="string">'Hello'</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> b = a;</span><br><span class="line">name = <span class="string">"CC"</span>;</span><br><span class="line">b.php = [<span class="string">'world'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* a = b = &#123;name: 'a', php: [world]&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(a)</span><br><span class="line"><span class="built_in">console</span>.log(b)</span><br></pre></td></tr></table></figure><p><strong>Stack</strong></p><p>存储有顺序的数据，所以存储 variables和指向堆内存中的该对象的指针</p><p><img src="/images/stack1.png" alt></p><p><strong>heap</strong></p><p>无序存储数据，放置 objects</p><p><img src="/images/1557916548775.png" alt="1557916548775"></p><h3 id="扩展知识："><a href="#扩展知识：" class="headerlink" title="扩展知识："></a>扩展知识：</h3><p>javascript 是一种垃圾回收机制的语言。所谓垃圾回收，就是用完就会注销。</p><p>并且是一种==单线程并发==的语言。</p><h4 id="Q4"><a href="#Q4" class="headerlink" title="Q4:"></a>Q4:</h4><p><strong>trim 去除前后空格，实现方法？</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">" hello world "</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">trim</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> regex = <span class="regexp">/^\s|\s+$/g</span>;</span><br><span class="line">  <span class="keyword">return</span> str.replace(regex, <span class="string">''</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(trim(str));<span class="comment">// "hello world"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// trimLeft</span></span><br><span class="line"><span class="built_in">String</span>.prototype.trimLeft = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.replace(<span class="regexp">/^\s+/g</span>, <span class="string">''</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// trimRight</span></span><br><span class="line"><span class="built_in">String</span>.prototype.trimRight = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.replace(<span class="regexp">/\s+$/g</span>, <span class="string">''</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Q5"><a href="#Q5" class="headerlink" title="Q5:"></a>Q5:</h4><p><strong>请把“my-name-is-andy”变成驼峰格式？</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">"my-name-is-andy"</span>;</span><br><span class="line"><span class="comment">// 正则</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatString</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!str) <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">return</span> str.replace(<span class="regexp">/-(\w+)/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">...args</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> args[<span class="number">1</span>] ? args[<span class="number">1</span>].replace(<span class="regexp">/^\w&#123;1&#125;/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$<span class="number">1</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $<span class="number">1.</span>toUpperCase();</span><br><span class="line">      &#125;) : str</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatString</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!str) <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">if</span>(str.includes(<span class="string">'-'</span>))&#123;</span><br><span class="line">    <span class="keyword">const</span> arr = str.split(<span class="string">'-'</span>);</span><br><span class="line">    <span class="keyword">let</span> reuslt = <span class="string">''</span>;</span><br><span class="line">    <span class="comment">// forEach 循环  n 是不能被重新赋值，如果是object,array 则可以操作增加删除</span></span><br><span class="line">    arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">n,i</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        result += n.substr(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + n.substr(<span class="number">1</span>);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       result = n;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>扩展知识：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.forEach(<span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">currentValue[, index [, array]]</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// your iterator</span></span><br><span class="line">&#125;[, thisArg])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Example:</span><br><span class="line"></span><br><span class="line"><span class="comment">//base useage</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>].forEach(<span class="function">(<span class="params">n, i</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`a[<span class="subst">$&#123;i&#125;</span>]=<span class="subst">$&#123;n&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a[0]=1</span></span><br><span class="line"><span class="comment">a[1]=2</span></span><br><span class="line"><span class="comment">a[2]=3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// thisArg</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> items = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Counter</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.sum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">this</span>.count = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">Counter.prototype.add = <span class="function"><span class="keyword">function</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.sum += n;</span><br><span class="line">    <span class="keyword">this</span>.count++;</span><br><span class="line">  &#125;, <span class="keyword">this</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> obj = <span class="keyword">new</span> Counter();</span><br><span class="line">obj.add(items);</span><br><span class="line"><span class="built_in">console</span>.log(obj.sum);<span class="comment">//6</span></span><br><span class="line"><span class="built_in">console</span>.log(obj.count);<span class="comment">//3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// deep copy a object 深度复制</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">copy</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> copy = <span class="built_in">Object</span>.create(<span class="built_in">Object</span>.getPrototypeOf(obj));</span><br><span class="line">  <span class="keyword">const</span> propNames = <span class="built_in">Object</span>.getOwnPropertyNames(obj);</span><br><span class="line"></span><br><span class="line">  propNames.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> desc = <span class="built_in">Object</span>.getOwnPropertyDescriptor(obj, name);</span><br><span class="line">    <span class="built_in">Object</span>.defineProperty(copy, name, desc);</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> copy;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj1 = &#123;<span class="attr">a</span>: <span class="number">1</span>&#125;;<span class="comment">// &#123;a: 1&#125;</span></span><br><span class="line"><span class="keyword">const</span> obj2 = copy(obj1);<span class="comment">// &#123;a: 1&#125;</span></span><br><span class="line">obj1.a = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj1);<span class="comment">// &#123;a: 2&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(obj2);<span class="comment">// &#123;a: 1&#125;</span></span><br></pre></td></tr></table></figure><h4 id="Q6"><a href="#Q6" class="headerlink" title="Q6:"></a>Q6:</h4><p><strong>执行以下代码，会发送什么，又如何改进？</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> spans = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'span'</span>);<span class="comment">// 5个</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt; spans.length; i++)&#123;</span><br><span class="line">spans[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i)<span class="comment">//5</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">结果是 点击任何一个span 都是 alert(5)</span></span><br><span class="line"><span class="comment">var i = 0 其实是一个全局变量，整个循环结束后 i == spans.length 依然存在</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 改进1 var 更改为 let，这样 i 就是一个当前代码块里的一个局部变量</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt; spans.length; i++)&#123;</span><br><span class="line">spans[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i)<span class="comment">// Uncaught ReferenceError: i is not defined</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用闭包  closure functon 这样就避免了最后只读 i</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;spans.length;i++)&#123;</span><br><span class="line">  spans[i].onclick = (<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      alert(n)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Q7"><a href="#Q7" class="headerlink" title="Q7:"></a>Q7:</h4><p><strong>写出Es6的几种用法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="下是面谈的问题"><a href="#下是面谈的问题" class="headerlink" title="下是面谈的问题"></a>下是面谈的问题</h3><h4 id="Q8"><a href="#Q8" class="headerlink" title="Q8:"></a>Q8:</h4><p><strong>Vue 生命周期实现过程？</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Q9"><a href="#Q9" class="headerlink" title="Q9:"></a>Q9:</h4><p><strong>vuex中 mumation 和 action 有什么不同？ 实现原理是什么？</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Q10："><a href="#Q10：" class="headerlink" title="Q10："></a>Q10：</h4><p><strong>vue v-if 和 v-show 的区别？ Key的作用？</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Q11"><a href="#Q11" class="headerlink" title="Q11:"></a>Q11:</h4><p><strong>vue keep-alive 用法？</strong></p><h4 id="Q12"><a href="#Q12" class="headerlink" title="Q12:"></a>Q12:</h4><p><strong>vue router 如何返回和刷新？</strong></p><h4 id="Q13："><a href="#Q13：" class="headerlink" title="Q13："></a>Q13：</h4><p><strong>Vue 框架特点</strong></p><h4 id="Q14"><a href="#Q14" class="headerlink" title="Q14"></a>Q14</h4><p><strong>es6 箭头函数</strong></p><h4 id="Q15"><a href="#Q15" class="headerlink" title="Q15:"></a>Q15:</h4><p><strong>bind 和 call apply 区别</strong></p><h4 id="Q16"><a href="#Q16" class="headerlink" title="Q16:"></a>Q16:</h4><p><strong>Promise 和 async await 区别？</strong></p><h4 id="Q17"><a href="#Q17" class="headerlink" title="Q17:"></a>Q17:</h4><p>移动端适配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入了解 HTML5 History API，前端路由的生成，解读 webpack-dev-server 的 historyApiFallback 原理</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84history%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84history%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="深入了解-HTML5-History-API，前端路由的生成，解读-webpack-dev-server-的-historyApiFallback-原理"><a href="#深入了解-HTML5-History-API，前端路由的生成，解读-webpack-dev-server-的-historyApiFallback-原理" class="headerlink" title="深入了解 HTML5 History API，前端路由的生成，解读 webpack-dev-server 的 historyApiFallback 原理"></a>深入了解 HTML5 History API，前端路由的生成，解读 webpack-dev-server 的 historyApiFallback 原理</h3><p>[TOC]</p><h4 id="1、history"><a href="#1、history" class="headerlink" title="1、history"></a>1、history</h4><p><code>History</code> 接口，允许操作浏览器的 <code>session history</code>，比如在当前<code>tab</code>下浏览的所有页面或者当前页面的会话记录。</p><blockquote><p>history属性</p></blockquote><p><img src="/images/1568966948334.png" alt="1568966948334"></p><p>1、<code>length</code>(只读)</p><p>   返回一个总数，<code>代表当前窗口下的所有会话记录数量</code>，包括当前页面。如果你在新开的一个<code>tab</code>里面输入一个地址，当前的<code>length</code>是<code>1</code>，如果再输入一个地址，就会变成<code>2</code>；</p><p>   假设当前总数已经是<code>6</code>，无论是浏览器的返回还是 <code>history.back()</code>, 当前总数都不会改变。</p><p><code>2、scrollRestoration</code>(实验性API)</p><p>   允许<code>web</code>应用在<code>history</code>导航下指定一个默认返回的页面滚动行为，就是是否自动滚动到页面顶部；默认是 <code>auto</code>, 另外可以是 <code>manual</code>(手动)</p><p>3、 <code>state</code> (当前页面状态)</p><pre><code>返回一个任意的状态值，代表当前处在历史记录`栈`里最高的状态。其实就是返回当前页面的`state`，默认是 null</code></pre><blockquote><p>history 方法</p></blockquote><p>History不继承任何方法；</p><p>1、 <code>back()</code></p><p>返回历史记录会话的上一个页面，同浏览器的返回，同 <code>history.go(-1)</code></p><p>2、<code>forward()</code></p><p>前进到历史会话记录的下一个页面，同浏览器的前进，同 <code>history.go(1)</code></p><p>3、<code>go()</code></p><p>从<code>session history</code>里面加载页面，取决于当前页面的相对位置，比如 <code>go(-1)</code> 是返回上一页，<code>go(1)</code>是前进到下一个页面。<br>如果你直接一个超过当前总<code>length</code>的返回，比如初始页面，没有前一个页面，也没有后一个页面，这个时候 <code>go(-1)</code> 和 <code>go(1)</code>,都不会有任何作用；<br>如果你不指定<code>任何参数</code>或者<code>go(0)</code>,将会重新加载当前页面；</p><p>4、<code>pushState(StateObj, title, url)</code></p><p>把提供的状态数据放到当前的会话栈里面，如果有参数的话，一般第二个是<code>title</code>，第三个是<code>UR</code>L。<br>这个数据被DOM当做透明数据；你可以传任何可以序列号的数据。不过火狐现在忽略 <code>title</code> 这个参数；<br>这个方法<code>会</code>引起会话记录<code>length</code>的增长。</p><p>5、<code>replaceState(StateObj, title, url)</code></p><p>把提供的状态数据更新到当前的会话栈里面最近的入口，如果有参数的话，一般第二个是<code>title</code>，第三个是<code>URL</code>。<br>这个数据被DOM当做透明数据；你可以传任何可以序列号的数据。不过火狐现在忽略 <code>title</code> 这个参数；<br>这个方法<code>不会</code>引起会话记录<code>length</code>的增长。</p><hr><p><code>综上所述，pushState</code> 和 <code>replaceState</code> 是修改当前<code>session history</code>的两个方法，他们都会触发一个方法 <code>onpopstate</code> 事件;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">history.pushState(&#123;<span class="attr">demo</span>: <span class="number">12</span>&#125;, <span class="string">"8888"</span>, <span class="string">"en-US/docs/Web/API/XMLHttpRequest"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/1568969522699.png" alt="1568969522699"></p><p>如图 <code>pushState</code> 会改变当你在后面建立的页面发起XHR请求的时候，<code>请求header</code>里面的 <code>referrer；这个地址就是你在pushState里面的URL；</code></p><p>另外URL <code>en-US/docs/Web/API/XMLHttpRequest（并非真实存在的URL）</code>, 在<code>pushState</code>完成之后，<code>并不触发页面的重新加载或者检查当前URL的目录是否存在</code>。</p><p>只有当你此刻从这个页面跳转到 <code>google.com</code>, 然后再点击返回按钮，此时的页面就是你现在pushState的页面，state也会是当前的state, <code>也同时会加载当前的页面资源，oops，此刻会显示不存在；</code></p><p><img src="/images/1568970176102.png" alt="1568970176102"></p><p><code>replaceState</code> 同理；</p><p>关于 <code>onpopstate</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onpopstate = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  alert(<span class="string">"location: "</span> + <span class="built_in">document</span>.location + <span class="string">", state: "</span> + <span class="built_in">JSON</span>.stringify(event.state));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">history.pushState(&#123;<span class="attr">page</span>: <span class="number">1</span>&#125;, <span class="string">"title 1"</span>, <span class="string">"?page=1"</span>);</span><br><span class="line">history.pushState(&#123;<span class="attr">page</span>: <span class="number">2</span>&#125;, <span class="string">"title 2"</span>, <span class="string">"?page=2"</span>);</span><br><span class="line">history.replaceState(&#123;<span class="attr">page</span>: <span class="number">3</span>&#125;, <span class="string">"title 3"</span>, <span class="string">"?page=3"</span>);</span><br><span class="line">history.back(); <span class="comment">// alerts "location: http://example.com/example.html?page=1, state: &#123;"page":1&#125;"</span></span><br><span class="line">history.back(); <span class="comment">// alerts "location: http://example.com/example.html, state: null</span></span><br><span class="line">history.go(<span class="number">2</span>);  <span class="comment">// alerts "location: http://example.com/example.html?page=3, state: &#123;"page":3&#125;</span></span><br></pre></td></tr></table></figure><hr><h4 id="2、两种路由模式的生成"><a href="#2、两种路由模式的生成" class="headerlink" title="2、两种路由模式的生成"></a>2、两种路由模式的生成</h4><p>以下说明仅存在于当前路由是 <code>history</code> 模式；<br>说道 <code>webpack-dev-server</code>的 <code>historyApiFallback</code> 就不得不说下 VUE 前端路由，路由跳转原理；</p><p>传统的web开发中，大多是多页应用，每个模块对应一个页面，在浏览器输入相关页面的路径，然后服务端处理相关浏览器的请求，通过HTTP把资源返回给客户端浏览器进行渲染。</p><p>传统开发，后端定义好路由的路径和请求数据的地址；</p><p>随着前端的发展，前端也承担着越来越大的责任，比如Ajax局部刷新数据，前端可以操控一些历史会话，而不用每次都从服务端进行数据交互。</p><p><code>history.pushState</code> 和 <code>history.replaceState</code> ，这两个<code>history</code>新增的<code>api</code>，为前端操控浏览器历史栈提供了可能性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@data <span class="type">&#123;object&#125;</span> </span>state对象 最大640KB, 如果需要存很大的数据，考虑 sessionStorage localStorage</span></span><br><span class="line"><span class="comment">* <span class="doctag">@title <span class="type">&#123;string&#125;</span> </span>标题</span></span><br><span class="line"><span class="comment">* <span class="doctag">@url <span class="type">&#123;string&#125;</span> </span>必须同一个域下，相对路径和绝对路径都可以</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">history.pushState(data, title, url) <span class="comment">//向浏览器历史栈中增加一条记录。</span></span><br><span class="line">history.replaceState(data, title, url) <span class="comment">//替换历史栈中的当前记录。</span></span><br></pre></td></tr></table></figure><p>这两个Api都会操作浏览器的历史栈，而不会引起页面的刷新。不同的是，<code>pushState</code>会增加一条新的历史记录，而<code>replaceState</code>则会替换当前的历史记录。所需的参数相同，在将新的历史记录存入栈后，会把传入的<code>data</code>（即state对象）同时存入，以便以后调用。同时，这俩api都会更新或者覆盖当前浏览器的<code>title</code>和<code>url</code>为对应传入的参数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 假设当前的URL： http://test.com</span></span><br><span class="line"></span><br><span class="line">history.pushState(<span class="literal">null</span>, <span class="literal">null</span>, <span class="string">"/login"</span>);</span><br><span class="line"><span class="comment">// http://test.com ----&gt;&gt;&gt;  http://test.com/login</span></span><br><span class="line"></span><br><span class="line">history.pushState(<span class="literal">null</span>, <span class="literal">null</span>, <span class="string">"http://test.com/regiest"</span>);</span><br><span class="line"><span class="comment">// http://test.com ----&gt;&gt;&gt;  http://test.com/regiest</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误用法</span></span><br><span class="line">history.pushState(<span class="literal">null</span>, <span class="literal">null</span>, <span class="string">"http://baidu.com/regiest"</span>);</span><br><span class="line"><span class="comment">// error 跨域报错</span></span><br></pre></td></tr></table></figure><p>也正是基于浏览器的<code>hitroy</code>，慢慢的衍生出来现在的前端路由比如<code>vue</code>的<code>history</code>路由，<code>react</code>的<code>BrowseHistory</code>：</p><p>==现在让我们手动写一个history路由模式==：</p><blockquote><p>Html</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">data-link</span>=<span class="string">"/"</span>&gt;</span>login<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">data-link</span>=<span class="string">"/news"</span>&gt;</span>news<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">data-link</span>=<span class="string">"/contact"</span>&gt;</span>contact<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// history 路由</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HistoryRouter</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(options = &#123;&#125;) &#123;</span><br><span class="line">    <span class="comment">// store all router</span></span><br><span class="line">    <span class="keyword">this</span>.routers = &#123;&#125;;</span><br><span class="line">    <span class="comment">// 遍历路由参数，保存到 this.routers</span></span><br><span class="line">    <span class="keyword">if</span> (options.router) &#123;</span><br><span class="line">      options.router.forEach(<span class="function"><span class="params">n</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.routers[n.path] = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">document</span>.getElementById(<span class="string">"content"</span>).innerHTML = n.component;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 绑定到 this.routers</span></span><br><span class="line">    <span class="keyword">this</span>.updateContent = <span class="keyword">this</span>.updateContent.bind(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">// 初始化事件</span></span><br><span class="line">    <span class="keyword">this</span>.init();</span><br><span class="line">    <span class="keyword">this</span>.bindClickEvent();</span><br><span class="line">  &#125;</span><br><span class="line">  init() &#123;</span><br><span class="line">    <span class="comment">// 页面初始化的时候，初始化当前匹配路由</span></span><br><span class="line">    <span class="comment">// 监听 load</span></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="keyword">this</span>.updateContent, <span class="literal">false</span>);</span><br><span class="line">    <span class="comment">// pushState replaceState 不能触发 popstate 事件</span></span><br><span class="line">    <span class="comment">// 当浏览器返回前进或者刷新，都会触发 popstate 更新</span></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">"popstate"</span>, <span class="keyword">this</span>.updateContent, <span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 更新内容</span></span><br><span class="line">  updateContent(e) &#123;</span><br><span class="line">    alert(e ? e.type : <span class="string">"click"</span>);</span><br><span class="line">    <span class="keyword">const</span> currentPath = location.pathname || <span class="string">"/"</span>;</span><br><span class="line">    <span class="keyword">this</span>.routers[currentPath] &amp;&amp; <span class="keyword">this</span>.routers[currentPath]();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 绑定点击事件</span></span><br><span class="line">  bindClickEvent() &#123;</span><br><span class="line">    <span class="keyword">const</span> links = <span class="built_in">document</span>.querySelectorAll(<span class="string">'a'</span>);</span><br><span class="line">    <span class="built_in">Array</span>.prototype.forEach.call(links, link =&gt; &#123;</span><br><span class="line">      link.addEventListener(<span class="string">'click'</span>, e =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> path = e.target.getAttribute(<span class="string">"data-link"</span>);</span><br><span class="line">        <span class="comment">// 添加到session history</span></span><br><span class="line">        <span class="keyword">this</span>.handlePush(path);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// pushState 不会触发 popstate</span></span><br><span class="line">  handlePush(path)&#123;</span><br><span class="line">    <span class="built_in">window</span>.history.pushState(&#123;path&#125;, <span class="literal">null</span>, path);</span><br><span class="line">    <span class="keyword">this</span>.updateContent();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 实例</span></span><br><span class="line"><span class="keyword">new</span> HistoryRouter(&#123;</span><br><span class="line">  router: [&#123;</span><br><span class="line">    name: <span class="string">"index"</span>,</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    component: <span class="string">"Index"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    name: <span class="string">"news"</span>,</span><br><span class="line">    path: <span class="string">"/news"</span>,</span><br><span class="line">    component: <span class="string">"News"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    name: <span class="string">"contact"</span>,</span><br><span class="line">    path: <span class="string">"/contact"</span>,</span><br><span class="line">    component: <span class="string">"Contact"</span></span><br><span class="line">  &#125;]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>第一次渲染的时候，会根据当前的 <code>pathname</code> 进行更新对应的 <code>callback</code> 事件，然后更新 <code>content</code> , 这个时候无需服务器的请求；</p><p>如果这个时候，我们点击<code>浏览器的返回🔙前进按钮</code>，发现依然会依次渲染相关 <code>content</code> ，这就是<code>history历史堆栈</code>的魅力所在。</p><p><img src="/images/Jietu20190921-141014-HD.gif" alt></p><p>最后我们发现当我们切换到非loading page的时候，我们刷新页面，会报出 Get 404，这个时候就是请求了server , 却发现不存在这个目录的资源；</p><p>这个时候我们就需要 <code>historyApiFallback</code> 。</p><hr><h4 id="3、historyApiFallback"><a href="#3、historyApiFallback" class="headerlink" title="3、historyApiFallback"></a>3、historyApiFallback</h4><p><code>Webpack-dev-server</code> 的背后的是<code>connect-history-api-fallback</code>；</p><blockquote><p>关于 connect-history-api-fallback 中间件，解决这个404问题</p></blockquote><p>单页应用(SPA)一般只有一个<code>index.html</code>, 导航的跳转都是基于<a href="http://www.w3.org/html/wg/drafts/html/master/single-page.html#the-history-interface" target="_blank" rel="noopener">HTML5 History API</a>，当用户在越过<code>index.html</code> 页面直接访问这个地址或是通过浏览器的刷新按钮重新获取时，就会出现404问题；</p><p>比如 直接访问<code>/login</code>,  <code>/login/online</code>，这时候越过了<code>index.html</code>，去查找这个地址下的文件。由于这是个一个单页应用，最终结果肯定是查找失败，返回一个<code>404错误</code>。</p><p><strong>这个中间件就是用来解决这个问题的</strong>；</p><p>只要满足下面四个条件之一，这个中间件就会改变请求的地址，指向到默认的<code>index.html</code>:</p><blockquote><p>1 <code>GET请求</code></p><p>2  接受内容格式为<code>text/html</code></p><p>3 不是一个直接的文件请求，比如路径中不带有 <code>.</code></p><p>4 没有 <code>options.rewrites</code> 里的正则匹配</p></blockquote><hr><blockquote><p>connect-history-api-fallback 源码：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"></span><br><span class="line">exports = <span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> <span class="title">historyApiFallback</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">  options = options || &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> logger = getLogger(options);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> headers = req.headers;</span><br><span class="line">    <span class="keyword">if</span> (req.method !== <span class="string">'GET'</span>) &#123;</span><br><span class="line">      logger(</span><br><span class="line">        <span class="string">'Not rewriting'</span>,</span><br><span class="line">        req.method,</span><br><span class="line">        req.url,</span><br><span class="line">        <span class="string">'because the method is not GET.'</span></span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">return</span> next();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!headers || <span class="keyword">typeof</span> headers.accept !== <span class="string">'string'</span>) &#123;</span><br><span class="line">      logger(</span><br><span class="line">        <span class="string">'Not rewriting'</span>,</span><br><span class="line">        req.method,</span><br><span class="line">        req.url,</span><br><span class="line">        <span class="string">'because the client did not send an HTTP accept header.'</span></span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">return</span> next();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (headers.accept.indexOf(<span class="string">'application/json'</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      logger(</span><br><span class="line">        <span class="string">'Not rewriting'</span>,</span><br><span class="line">        req.method,</span><br><span class="line">        req.url,</span><br><span class="line">        <span class="string">'because the client prefers JSON.'</span></span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">return</span> next();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!acceptsHtml(headers.accept, options)) &#123;</span><br><span class="line">      logger(</span><br><span class="line">        <span class="string">'Not rewriting'</span>,</span><br><span class="line">        req.method,</span><br><span class="line">        req.url,</span><br><span class="line">        <span class="string">'because the client does not accept HTML.'</span></span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">return</span> next();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> parsedUrl = url.parse(req.url);</span><br><span class="line">    <span class="keyword">var</span> rewriteTarget;</span><br><span class="line">    options.rewrites = options.rewrites || [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; options.rewrites.length; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> rewrite = options.rewrites[i];</span><br><span class="line">      <span class="keyword">var</span> match = parsedUrl.pathname.match(rewrite.from);</span><br><span class="line">      <span class="keyword">if</span> (match !== <span class="literal">null</span>) &#123;</span><br><span class="line">        rewriteTarget = evaluateRewriteRule(parsedUrl, match, rewrite.to);</span><br><span class="line">        logger(<span class="string">'Rewriting'</span>, req.method, req.url, <span class="string">'to'</span>, rewriteTarget);</span><br><span class="line">        req.url = rewriteTarget;</span><br><span class="line">        <span class="keyword">return</span> next();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (parsedUrl.pathname.indexOf(<span class="string">'.'</span>) !== <span class="number">-1</span> &amp;&amp;</span><br><span class="line">        options.disableDotRule !== <span class="literal">true</span>) &#123;</span><br><span class="line">      logger(</span><br><span class="line">        <span class="string">'Not rewriting'</span>,</span><br><span class="line">        req.method,</span><br><span class="line">        req.url,</span><br><span class="line">        <span class="string">'because the path includes a dot (.) character.'</span></span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">return</span> next();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rewriteTarget = options.index || <span class="string">'/index.html'</span>;</span><br><span class="line">    logger(<span class="string">'Rewriting'</span>, req.method, req.url, <span class="string">'to'</span>, rewriteTarget);</span><br><span class="line">    req.url = rewriteTarget;</span><br><span class="line">    next();</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">evaluateRewriteRule</span>(<span class="params">parsedUrl, match, rule</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> rule === <span class="string">'string'</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> rule;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> rule !== <span class="string">'function'</span>) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Rewrite rule can only be of type string of function.'</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> rule(&#123;</span><br><span class="line">    parsedUrl: parsedUrl,</span><br><span class="line">    match: match</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">acceptsHtml</span>(<span class="params">header, options</span>) </span>&#123;</span><br><span class="line">  options.htmlAcceptHeaders = options.htmlAcceptHeaders || [<span class="string">'text/html'</span>, <span class="string">'*/*'</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; options.htmlAcceptHeaders.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (header.indexOf(options.htmlAcceptHeaders[i]) !== <span class="number">-1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getLogger</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (options &amp;&amp; options.logger) &#123;</span><br><span class="line">    <span class="keyword">return</span> options.logger;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (options &amp;&amp; options.verbose) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">console</span>.log.bind(<span class="built_in">console</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实代码也挺简单的，最主要先符合上面四个原则，然后先匹配自定义rewrites规则，再匹配点文件规则；</p><blockquote><p><code>getLogger</code>, 默认不输出，<code>options.verbose</code>如果为true，则输出，默认<code>console.log.bind(console)</code></p></blockquote><blockquote><p>如果<code>req.method != &#39;GET&#39;</code>，结束<br>如果<code>!headers || !headers.accept != &#39;string&#39;</code> ，结束<br>如果<code>headers.accept.indexOf(&#39;application/json&#39;) === 0</code> 结束</p></blockquote><blockquote><p><code>acceptsHtml</code>函数a判断<code>headers.accept</code>字符串是否含有[‘text/html’, ‘<em>/</em>‘]中任意一个<br>当然不够这两个不够你可以自定义到选项<code>options.htmlAcceptHeaders</code>中<br><code>!acceptsHtml(headers.accept, options)</code>，结束</p></blockquote><blockquote><p>然后根据你定义的选项<code>rewrites</code>, 没定义就相当于跳过了<br>按定义的数组顺序，字符串依次匹配路由rewrite.from，匹配成功则走rewrite.to，to可以是字符串也可以是函数，结束</p></blockquote><blockquote><p>判断dot file，即pathname中包含<code>.</code>(点)，并且选项<code>disableDotRule !== true</code>，即没有关闭点文件限制规则, 结束</p></blockquote><blockquote><p><code>rewriteTarget = options.index || &#39;/index.html&#39;</code></p></blockquote><p>大致如此；</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 深度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 运行环境</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3javaScript%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3javaScript%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h3 id="JavaScript-运行环境"><a href="#JavaScript-运行环境" class="headerlink" title="JavaScript 运行环境"></a>JavaScript 运行环境</h3><p>[TOC]</p><p>我们在这里会深入了解浏览器的<code>javaScript</code>的运行机制。</p><p>我们将了解 <code>chrome V8</code>引擎如何格式化代码和如何通过 <code>Event Loop</code> 让代码运行在一个线程上，包括 <code>同步</code> 和 <code>异步</code>。</p><h4 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h4><p>当我们在浏览器里面访问一个网址，比如 <code>Chrome</code>， <code>Edge</code>， <code>Firefox</code>  或者 <code>safari</code>。每一个浏览器都有一个 <code>Javascript Running Environment</code> 。在这个环境里，开发者可以访问构。一个程序的<code>Web API</code>。</p><p><code>AJAX</code>、<code>DOM树</code>和<code>其他API</code>，不是<code>JavaScript</code>的一部分，它们只是<code>浏览器提供</code>的可以在<code>JS 运行环境</code>里面运行的含有<code>方法</code>和<code>属性</code>的<code>对象</code>。</p><p>当然，在运行环境中，是一个 <code>js 引擎</code>来格式化代码。每个浏览器都有自己的引擎版本。<code>Chrome</code> 使用 <code>V8 JS 引擎</code>，也就是我们接下来要分析的。</p><h4 id="2、V8-JS-引擎"><a href="#2、V8-JS-引擎" class="headerlink" title="2、V8 JS 引擎"></a>2、V8 JS 引擎</h4><p>一旦<code>Chrome</code> 接收到<code>web</code>页面的<code>javaScript</code> 代码或者脚本，<code>V8 js</code>引擎就开始格式化代码。刚开始，它会部分的格式化代码来检查语法错误。如果没有找到语法错误，它将从上到下开始解读代码。它的最终目的是将<code>JavaScript</code>代码转化为机器可以读懂的机器码。但是在我们了解它到底对代码做了什么之前，我们必须先了解格式化代码的运行环境。</p><h4 id="3、Javascript-运行环境"><a href="#3、Javascript-运行环境" class="headerlink" title="3、Javascript 运行环境"></a>3、Javascript 运行环境</h4><p>可以把js运行环境想象是一个大容器。在这个大容器里面还有其他的小容器。当 JS 引擎开始格式化代码时，代码被分块放入不同的容器中。</p><p><img src="/images/js_running.png" alt></p><h5 id="3-1-、Heap-堆"><a href="#3-1-、Heap-堆" class="headerlink" title="3.1 、Heap 堆"></a>3.1 、Heap 堆</h5><p>环境里面的第一个容器，也是<code>V8 js</code> 引擎的一部分，被称为“<code>内存堆</code>”。</p><p>当 <code>JS 引擎</code>在代码里碰到<code>变量</code>和<code>函数声明</code>，它把它们储存在<code>堆</code>里。</p><h5 id="3-2、Stack-栈"><a href="#3-2、Stack-栈" class="headerlink" title="3.2、Stack 栈"></a>3.2、Stack 栈</h5><p>环境里面的第二个容器是 <code>call stack</code> 调用栈。它也是 <code>JS V8</code> 引擎的一部分。当<code>JS引擎</code>碰到一个调用指令，比如一个 <code>function call</code>，</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 深度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack4配置React项目，同时配置DEV和PROD环境</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/webpack4%20%E9%85%8D%E7%BD%AEreact%E9%A1%B9%E7%9B%AE/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/webpack4%20%E9%85%8D%E7%BD%AEreact%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="webpack4配置React项目，同时配置DEV和PROD环境"><a href="#webpack4配置React项目，同时配置DEV和PROD环境" class="headerlink" title="webpack4配置React项目，同时配置DEV和PROD环境"></a>webpack4配置React项目，同时配置DEV和PROD环境</h2><p>[TOC]</p><h3 id="1、生成一个react项目"><a href="#1、生成一个react项目" class="headerlink" title="1、生成一个react项目"></a>1、生成一个react项目</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add create-react-app -global</span><br><span class="line">npx create-react-app my-app</span><br></pre></td></tr></table></figure><h3 id="2、从零配置webapck"><a href="#2、从零配置webapck" class="headerlink" title="2、从零配置webapck"></a>2、从零配置webapck</h3><p>安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add webpack webpack-cli webpack-dev-server</span><br></pre></td></tr></table></figure><p>在package.json增加</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">        "dev": "webpack-dev-server --mode development",</span><br><span class="line">        "build": "webpack --mode production",</span><br><span class="line"> &#125;,</span><br><span class="line"># yarn dev 去启动本地server</span><br><span class="line"># yarn build 去生成生产代码</span><br></pre></td></tr></table></figure><p>生成配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch webpack.config.js</span><br></pre></td></tr></table></figure><p>在<code>webpack.config.js</code>增加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">"html-webpack-plugin"</span>);</span><br><span class="line"><span class="comment">// path function</span></span><br><span class="line"><span class="keyword">const</span> resolve = <span class="function"><span class="params">src</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> path.resolve(__dirname, src);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">env, argv</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//argv 里面的 mode 分别是之前执行命令的的，development production</span></span><br><span class="line">    <span class="comment">// 传递给 babel.config.js</span></span><br><span class="line">    process.env.NODE_ENV = argv.mode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (&#123;</span><br><span class="line">entry: &#123;</span><br><span class="line">            <span class="string">"login"</span>: <span class="string">"./src/login"</span>,</span><br><span class="line">            <span class="string">"index"</span>: <span class="string">"./src/index"</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        output: &#123;</span><br><span class="line">            path: resolve(<span class="string">"cdn"</span>),</span><br><span class="line">            filename: <span class="string">'js/[name].[hash:8].js'</span>,</span><br><span class="line">            publicPath: <span class="string">'/'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//解析 jsx</span></span><br><span class="line">         rules: [&#123;</span><br><span class="line">                    test: <span class="regexp">/\.jsx?$/</span>,</span><br><span class="line">                    use: <span class="string">'babel-loader'</span>,</span><br><span class="line">                    exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">          &#125;],</span><br><span class="line">        plugins:[</span><br><span class="line">            <span class="comment">// 生成最终需要的html模板</span></span><br><span class="line">            <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">                title: <span class="string">"Login"</span>,</span><br><span class="line">                template: resolve(<span class="string">"public/index.html"</span>),</span><br><span class="line">                filename: <span class="string">"login.html"</span>,</span><br><span class="line">                hash: <span class="literal">true</span>,<span class="comment">//增加hash</span></span><br><span class="line">                minify:<span class="literal">true</span>,<span class="comment">//压缩html代码</span></span><br><span class="line">                chunks: [<span class="string">'login'</span>],</span><br><span class="line">                favicon: resolve(<span class="string">"public/favicon.ico"</span>)</span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">                title: <span class="string">"Index"</span>,</span><br><span class="line">                template: resolve(<span class="string">"public/index.html"</span>),</span><br><span class="line">                filename: <span class="string">"index.html"</span>,</span><br><span class="line">                hash: <span class="literal">true</span>,</span><br><span class="line">                minify: <span class="literal">true</span>,</span><br><span class="line">                chunks: [<span class="string">'index'</span>],</span><br><span class="line">                favicon: resolve(<span class="string">"public/favicon.ico"</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时还需要配置 babel7，把 ES6\7转化为浏览器直接解析的语法；</p><p>webpack 4: transpiling Javascript ES6 with Babel 7</p><p><img src="https://www.valentinog.com/blog/wp-content/uploads/2017/10/from-gulp-to-webpack-babel-300x136.png" alt="webpack 4: transpiling Javascript ES6 with Babel"></p><p>babel-loader把ES6甚至更高的版本，编译成ES5，这样浏览器就能解析了。</p><blockquote><p>babel core<br>babel loader<br>babel preset env for compiling Javascript ES6 code down to ES5</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add @babel/core babel-loader @babel/preset-env @babel/preset-react</span><br></pre></td></tr></table></figure><p>下一步，我们生成一个babel.config.js配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch babel.config.js</span><br></pre></td></tr></table></figure><p><code>babel.config.js</code></p><p>在这里可以除无用的 <code>console.log()</code>来减少文件的体积。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> removeConsolePlugin = [];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"babel"</span>, process.env.NODE_ENV)</span><br><span class="line"><span class="comment">//移除console</span></span><br><span class="line"><span class="keyword">if</span> (process.env.NODE_ENV == <span class="string">"production"</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"====remove-console====="</span>);</span><br><span class="line">    removeConsolePlugin.push([</span><br><span class="line">        <span class="string">"transform-remove-console"</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"exclude"</span>: [<span class="string">"error"</span>, <span class="string">"warn"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    ]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="string">"presets"</span>: [</span><br><span class="line">        [</span><br><span class="line">            <span class="string">"@babel/preset-env"</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">"modules"</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="string">"targets"</span>: &#123;</span><br><span class="line">                    <span class="string">"browsers"</span>: [</span><br><span class="line">                        <span class="string">"last 2 Chrome versions"</span>,</span><br><span class="line">                        <span class="string">"last 2 Firefox versions"</span>,</span><br><span class="line">                        <span class="string">"last 2 Safari versions"</span>,</span><br><span class="line">                        <span class="string">"last 2 iOS versions"</span>,</span><br><span class="line">                        <span class="string">"last 1 Android version"</span>,</span><br><span class="line">                        <span class="string">"last 1 ChromeAndroid version"</span>,</span><br><span class="line">                        <span class="string">"ie 11"</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"@babel/preset-react"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"plugins"</span>: [</span><br><span class="line">        <span class="string">"@babel/plugin-proposal-class-properties"</span>,</span><br><span class="line">        ...removeConsolePlugin</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个时候<code>yarn dev</code>，我们启动本地server，应该是成功的了。</p><h3 id="3、设置alias别名和自动填写后缀"><a href="#3、设置alias别名和自动填写后缀" class="headerlink" title="3、设置alias别名和自动填写后缀"></a>3、设置alias别名和自动填写后缀</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">resolve: &#123;</span><br><span class="line">    <span class="comment">// 别名</span></span><br><span class="line">    alias: &#123;</span><br><span class="line">        <span class="string">"@"</span>: resolve(<span class="string">'src'</span>),</span><br><span class="line">        <span class="string">"@c"</span>: resolve(<span class="string">'src/components'</span>),</span><br><span class="line">        <span class="string">"@less"</span>: resolve(<span class="string">'src/less'</span>),</span><br><span class="line">        <span class="string">"@util"</span>: resolve(<span class="string">'src/utils'</span>),</span><br><span class="line">        <span class="string">"@/images"</span>: resolve(<span class="string">'src//images'</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 自动添加后缀</span></span><br><span class="line">extensions: [<span class="string">'.jsx'</span>, <span class="string">'.js'</span>, <span class="string">'.less'</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、配置-devServer"><a href="#4、配置-devServer" class="headerlink" title="4、配置 devServer"></a>4、配置 devServer</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">port: <span class="number">3001</span>,</span><br><span class="line">    open: <span class="literal">true</span>,</span><br><span class="line">    hot: <span class="literal">true</span>,</span><br><span class="line">    compress: <span class="literal">true</span>,</span><br><span class="line">    contentBase: path.join(__dirname, <span class="string">'./'</span>),</span><br><span class="line">    noInfo: <span class="literal">false</span>,</span><br><span class="line">    overlay: &#123;</span><br><span class="line">        warnings: <span class="literal">true</span>,</span><br><span class="line">        errors: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    proxy: &#123;</span><br><span class="line">        <span class="string">'/api'</span>: &#123;</span><br><span class="line">            target: <span class="string">'http://****'</span>,</span><br><span class="line">            changeOrigin: <span class="literal">true</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="5、解析分离less到单独的文件"><a href="#5、解析分离less到单独的文件" class="headerlink" title="5、解析分离less到单独的文件"></a>5、解析分离less到单独的文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack4 使用 mini-css-extract-plugin</span></span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分离css</span></span><br><span class="line"># plugins 增加</span><br><span class="line">plugins.push(<span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">    <span class="comment">// Options similar to the same options webpackOptions.output</span></span><br><span class="line">    <span class="comment">// all options are optional</span></span><br><span class="line">    filename: <span class="string">'css/[name].[hash:8].css'</span>,</span><br><span class="line">    chunkFilename: <span class="string">'css/[name].[hash:8].css'</span>,</span><br><span class="line">    ignoreOrder: <span class="literal">false</span></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">#rules 增加</span><br><span class="line">rules:[</span><br><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">    use: [</span><br><span class="line">        isProduction ? MiniCssExtractPlugin.loader : <span class="string">"style-loader"</span>,</span><br><span class="line">        <span class="string">"css-loader"</span>,</span><br><span class="line">        <span class="string">"less-loader"</span></span><br><span class="line">    ]</span><br><span class="line">    <span class="comment">// webpack4 废弃</span></span><br><span class="line">    <span class="comment">// use: ExtractTextPlugin.extract(&#123;</span></span><br><span class="line">    <span class="comment">//     fallback: "style-loader",</span></span><br><span class="line">    <span class="comment">//     use: [</span></span><br><span class="line">    <span class="comment">//         'css-loader',</span></span><br><span class="line">    <span class="comment">//         "less-loader"</span></span><br><span class="line">    <span class="comment">//     ]</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="6、url-loader-file-loader-解析图片地址，并导出到指定文件"><a href="#6、url-loader-file-loader-解析图片地址，并导出到指定文件" class="headerlink" title="6、url-loader, file-loader 解析图片地址，并导出到指定文件"></a>6、url-loader, file-loader 解析图片地址，并导出到指定文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.(png|jpg|svg|gif|ico)?$/</span>,</span><br><span class="line">    use: [&#123;</span><br><span class="line">        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">        options: &#123; <span class="comment">// 这里的options选项参数可以定义多大的图片转换为base64</span></span><br><span class="line">            fallback: <span class="string">"file-loader"</span>,</span><br><span class="line">            limit: <span class="number">10</span> * <span class="number">1024</span>, <span class="comment">// 表示小于10kb的图片转为base64,大于10kb的是路径</span></span><br><span class="line">            outputPath: <span class="string">'images'</span>, <span class="comment">//定义输出的图片文件夹</span></span><br><span class="line">            name: <span class="string">'[name].[contenthash:8].[ext]'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7、多个less文件公用的common-less，需要删除合并"><a href="#7、多个less文件公用的common-less，需要删除合并" class="headerlink" title="7、多个less文件公用的common.less，需要删除合并"></a>7、多个less文件公用的common.less，需要删除合并</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 去除重复的 less, 比如 common.less里面的内容</span></span><br><span class="line">plugins.push(<span class="keyword">new</span> OptimizeCss/imagesPlugin(&#123;</span><br><span class="line">    assetNameRegExp: <span class="regexp">/\.css$/g</span>,</span><br><span class="line">    cssProcessor: <span class="built_in">require</span>(<span class="string">'cssnano'</span>),</span><br><span class="line">    cssProcessorPluginOptions: &#123;</span><br><span class="line">    preset: [</span><br><span class="line">    <span class="string">'default'</span>,</span><br><span class="line">    &#123;</span><br><span class="line">            discardComments: &#123;</span><br><span class="line">                removeAll: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     ],</span><br><span class="line">    &#125;,</span><br><span class="line">    canPrint: <span class="literal">true</span></span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><p>8、提取各个模块的公共代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">optimization: &#123;</span><br><span class="line">          splitChunks: &#123;</span><br><span class="line">              <span class="comment">// 静态资源缓存</span></span><br><span class="line">              <span class="comment">// test, priority and reuseExistingChunk can only be configured on cache group level.</span></span><br><span class="line">              cacheGroups: &#123;</span><br><span class="line">                  <span class="comment">// 提取 node_modules 里面依赖的代码</span></span><br><span class="line">                  vendors: &#123;</span><br><span class="line">                      test: <span class="regexp">/[\\/]node_modules[\\/]/</span>,</span><br><span class="line">                      name: <span class="string">'chunk-vendors'</span>,</span><br><span class="line">                      chunks: <span class="string">'all'</span>,</span><br><span class="line">                      minChunks: <span class="number">2</span>, <span class="comment">//2个共享以及以上都提取</span></span><br><span class="line">                      priority: <span class="number">-10</span> <span class="comment">//优先级</span></span><br><span class="line">                  &#125;,</span><br><span class="line">                  <span class="comment">// 提出每个模块公共的代码</span></span><br><span class="line">                  commons: &#123;</span><br><span class="line">                      name: <span class="string">'chunk-commons'</span>,</span><br><span class="line">                      test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                      chunks: <span class="string">'initial'</span>,</span><br><span class="line">                      minChunks: <span class="number">2</span>, <span class="comment">//两个共享以及以上都提取,</span></span><br><span class="line">                      minSize: <span class="number">0</span>,</span><br><span class="line">                      priority: <span class="number">-20</span>, <span class="comment">//优先级</span></span><br><span class="line">                      reuseExistingChunk: <span class="literal">true</span></span><br><span class="line">                  &#125;,</span><br><span class="line">                  css: &#123;</span><br><span class="line">                      name: <span class="string">'css-commons'</span>,</span><br><span class="line">                      test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                      minChunks: <span class="number">2</span>,</span><br><span class="line">                      minSize: <span class="number">0</span>,</span><br><span class="line">                      priority: <span class="number">-20</span>,</span><br><span class="line">                      chunks: <span class="string">'initial'</span>,</span><br><span class="line">                      reuseExistingChunk: <span class="literal">true</span>,</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="comment">// I pull the Webpack runtime out into its own bundle file so that the</span></span><br><span class="line">          <span class="comment">// contentHash of each subsequent bundle will remain the same as long as the</span></span><br><span class="line">          <span class="comment">// source code of said bundles remain the same.</span></span><br><span class="line">          runtimeChunk: <span class="string">"single"</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>全部代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * webpack 4 config</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author </span>master2011zhao<span class="doctag">@gmail</span>.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date </span>20190910</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">"html-webpack-plugin"</span>);</span><br><span class="line"><span class="comment">// webpack4 使用 mini-css-extract-plugin</span></span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="comment">// extract 被废弃</span></span><br><span class="line"><span class="comment">// const ExtractTextPlugin = require('extract-text-webpack-plugin');</span></span><br><span class="line"><span class="comment">// clean project</span></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">    CleanWebpackPlugin</span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">"clean-webpack-plugin"</span>);</span><br><span class="line"><span class="comment">// 压缩css</span></span><br><span class="line"><span class="keyword">const</span> OptimizeCss/imagesPlugin = <span class="built_in">require</span>(<span class="string">'optimize-css-/images-webpack-plugin'</span>);</span><br><span class="line"><span class="comment">// notifier</span></span><br><span class="line"><span class="keyword">const</span> WebpackBuildNotifierPlugin = <span class="built_in">require</span>(<span class="string">'webpack-build-notifier'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// path function</span></span><br><span class="line"><span class="keyword">const</span> resolve = <span class="function"><span class="params">src</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> path.resolve(__dirname, src);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">env, argv</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> isProduction = argv.mode === <span class="string">"production"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"isProduction"</span>, isProduction);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 传递给 babel.config.js</span></span><br><span class="line">    process.env.NODE_ENV = argv.mode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(process.env.NODE_ENV);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> plugins = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成模板</span></span><br><span class="line">    <span class="keyword">let</span> HtmlTemplates = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生产环境</span></span><br><span class="line">    <span class="keyword">if</span> (isProduction) &#123;</span><br><span class="line">        <span class="comment">// 清理项目, 清理不干净，需要使用 rm.sh</span></span><br><span class="line">        plugins.push(<span class="keyword">new</span> CleanWebpackPlugin(&#123;</span><br><span class="line">            dry: <span class="literal">false</span>,</span><br><span class="line">            verbose: <span class="literal">true</span>,</span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建完成提醒</span></span><br><span class="line">        plugins.push(<span class="keyword">new</span> WebpackBuildNotifierPlugin(&#123;</span><br><span class="line">            title: <span class="string">"react project build"</span>,</span><br><span class="line">            suppressSuccess: <span class="literal">true</span>,</span><br><span class="line">            suppressWarning: <span class="literal">false</span>,</span><br><span class="line">            messageFormatter: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"build completely"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分离css</span></span><br><span class="line">        <span class="comment">// plugins.push(new ExtractTextPlugin('css/[name].[hash:8].css'));</span></span><br><span class="line">        plugins.push(<span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">            <span class="comment">// Options similar to the same options in webpackOptions.output</span></span><br><span class="line">            <span class="comment">// all options are optional</span></span><br><span class="line">            filename: <span class="string">'css/[name].[hash:8].css'</span>,</span><br><span class="line">            chunkFilename: <span class="string">'css/[name].[hash:8].css'</span>,</span><br><span class="line">            ignoreOrder: <span class="literal">false</span>, <span class="comment">// Enable to remove warnings about conflicting order</span></span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 去除重复的 less, 比如 common</span></span><br><span class="line">        plugins.push(<span class="keyword">new</span> OptimizeCss/imagesPlugin(&#123;</span><br><span class="line">            assetNameRegExp: <span class="regexp">/\.css$/g</span>,</span><br><span class="line">            cssProcessor: <span class="built_in">require</span>(<span class="string">'cssnano'</span>),</span><br><span class="line">            cssProcessorPluginOptions: &#123;</span><br><span class="line">                preset: [</span><br><span class="line">                    <span class="string">'default'</span>,</span><br><span class="line">                    &#123;</span><br><span class="line">                        discardComments: &#123;</span><br><span class="line">                            removeAll: <span class="literal">true</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">            &#125;,</span><br><span class="line">            canPrint: <span class="literal">true</span></span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 公共提取的chunk</span></span><br><span class="line">        <span class="keyword">const</span> commonChunks = [<span class="string">"chunk-vendors"</span>, <span class="string">"runtime"</span>, <span class="string">"chunk-commons"</span>, <span class="string">"css-commons"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> minify = &#123;</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">            removeComments: <span class="literal">true</span>,</span><br><span class="line">            removeRedundantAttributes: <span class="literal">true</span>,</span><br><span class="line">            removeScriptTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            removeStyleLinkTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            useShortDoctype: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成模板</span></span><br><span class="line">        HtmlTemplates = [</span><br><span class="line">            <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">                title: <span class="string">"Login"</span>,</span><br><span class="line">                template: resolve(<span class="string">"public/index.html"</span>),</span><br><span class="line">                filename: <span class="string">"login.html"</span>,</span><br><span class="line">                hash: <span class="literal">true</span>,</span><br><span class="line">                minify,</span><br><span class="line">                chunks: [...commonChunks, <span class="string">'login'</span>],</span><br><span class="line">                favicon: resolve(<span class="string">"public/favicon.ico"</span>)</span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">                title: <span class="string">"Index"</span>,</span><br><span class="line">                template: resolve(<span class="string">"public/index.html"</span>),</span><br><span class="line">                filename: <span class="string">"index.html"</span>,</span><br><span class="line">                hash: <span class="literal">true</span>,</span><br><span class="line">                minify,</span><br><span class="line">                chunks: [...commonChunks, <span class="string">'index'</span>],</span><br><span class="line">                favicon: resolve(<span class="string">"public/favicon.ico"</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 生成模板</span></span><br><span class="line">        HtmlTemplates = [</span><br><span class="line">            <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">                title: <span class="string">"Login"</span>,</span><br><span class="line">                template: resolve(<span class="string">"public/index.html"</span>),</span><br><span class="line">                filename: <span class="string">"login.html"</span>,</span><br><span class="line">                favicon: resolve(<span class="string">"public/favicon.ico"</span>),</span><br><span class="line">                chunks: [<span class="string">'login'</span>], <span class="comment">//指定入口</span></span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">                title: <span class="string">"Index"</span>,</span><br><span class="line">                template: resolve(<span class="string">"./public/index.html"</span>),</span><br><span class="line">                filename: <span class="string">"index.html"</span>,</span><br><span class="line">                favicon: resolve(<span class="string">"public/favicon.ico"</span>),</span><br><span class="line">                chunks: [<span class="string">'index'</span>], <span class="comment">//指定入口</span></span><br><span class="line">            &#125;)</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        entry: &#123;</span><br><span class="line">            <span class="string">"login"</span>: <span class="string">"./src/login"</span>,</span><br><span class="line">            <span class="string">"index"</span>: <span class="string">"./src/index"</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        output: &#123;</span><br><span class="line">            path: resolve(<span class="string">"cdn"</span>),</span><br><span class="line">            filename: <span class="string">'js/[name].[hash:8].js'</span>,</span><br><span class="line">            publicPath: <span class="string">'/'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        devServer: &#123;</span><br><span class="line">            port: <span class="number">3001</span>,</span><br><span class="line">            open: <span class="literal">true</span>,</span><br><span class="line">            hot: <span class="literal">true</span>,</span><br><span class="line">            compress: <span class="literal">true</span>,</span><br><span class="line">            contentBase: path.join(__dirname, <span class="string">'./'</span>),</span><br><span class="line">            noInfo: <span class="literal">false</span>,</span><br><span class="line">            overlay: &#123;</span><br><span class="line">                warnings: <span class="literal">true</span>,</span><br><span class="line">                errors: <span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            proxy: &#123;</span><br><span class="line">                <span class="string">'/api'</span>: &#123;</span><br><span class="line">                    target: <span class="string">'http://*****:8093'</span>,</span><br><span class="line">                    changeOrigin: <span class="literal">true</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        resolve: &#123;</span><br><span class="line">            <span class="comment">// 别名</span></span><br><span class="line">            alias: &#123;</span><br><span class="line">                <span class="string">"@"</span>: resolve(<span class="string">'src'</span>),</span><br><span class="line">                <span class="string">"@c"</span>: resolve(<span class="string">'src/components'</span>),</span><br><span class="line">                <span class="string">"@less"</span>: resolve(<span class="string">'src/less'</span>),</span><br><span class="line">                <span class="string">"@util"</span>: resolve(<span class="string">'src/utils'</span>),</span><br><span class="line">                <span class="string">"@/images"</span>: resolve(<span class="string">'src//images'</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 自动添加后缀</span></span><br><span class="line">            extensions: [<span class="string">'.jsx'</span>, <span class="string">'.js'</span>, <span class="string">'.less'</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="built_in">module</span>: &#123;</span><br><span class="line">            rules: [&#123;</span><br><span class="line">                    test: <span class="regexp">/\.jsx?$/</span>,</span><br><span class="line">                    use: <span class="string">'babel-loader'</span>,</span><br><span class="line">                    exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                    use: [</span><br><span class="line">                        isProduction ? MiniCssExtractPlugin.loader : <span class="string">"style-loader"</span>,</span><br><span class="line">                        <span class="string">"css-loader"</span>,</span><br><span class="line">                        <span class="string">"less-loader"</span></span><br><span class="line">                    ]</span><br><span class="line">                    <span class="comment">// webpack4 废弃</span></span><br><span class="line">                    <span class="comment">// use: ExtractTextPlugin.extract(&#123;</span></span><br><span class="line">                    <span class="comment">//     fallback: "style-loader",</span></span><br><span class="line">                    <span class="comment">//     use: [</span></span><br><span class="line">                    <span class="comment">//         'css-loader',</span></span><br><span class="line">                    <span class="comment">//         "less-loader"</span></span><br><span class="line">                    <span class="comment">//     ]</span></span><br><span class="line">                    <span class="comment">// &#125;)</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    test: <span class="regexp">/\.(png|jpg|svg|gif|ico)?$/</span>,</span><br><span class="line">                    use: [&#123;</span><br><span class="line">                        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                        options: &#123; <span class="comment">// 这里的options选项参数可以定义多大的图片转换为base64</span></span><br><span class="line">                            fallback: <span class="string">"file-loader"</span>,</span><br><span class="line">                            limit: <span class="number">10</span> * <span class="number">1024</span>, <span class="comment">// 表示小于10kb的图片转为base64,大于10kb的是路径</span></span><br><span class="line">                            outputPath: <span class="string">'images'</span>, <span class="comment">//定义输出的图片文件夹</span></span><br><span class="line">                            name: <span class="string">'[name].[contenthash:8].[ext]'</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;]</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="comment">// &#123;</span></span><br><span class="line">                <span class="comment">//     test: /\.html$/,</span></span><br><span class="line">                <span class="comment">//     use: [&#123;</span></span><br><span class="line">                <span class="comment">//         loader: "html-loader",</span></span><br><span class="line">                <span class="comment">//         options: &#123;</span></span><br><span class="line">                <span class="comment">//             minimize: true,</span></span><br><span class="line">                <span class="comment">//             removeComments: true,</span></span><br><span class="line">                <span class="comment">//             collapseWhitespace: true</span></span><br><span class="line">                <span class="comment">//         &#125;</span></span><br><span class="line">                <span class="comment">//     &#125;]</span></span><br><span class="line">                <span class="comment">// &#125;</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        plugins: [</span><br><span class="line">            ...plugins,</span><br><span class="line">            ...HtmlTemplates</span><br><span class="line">        ],</span><br><span class="line">        optimization: &#123;</span><br><span class="line">            splitChunks: &#123;</span><br><span class="line">                <span class="comment">// 静态资源缓存</span></span><br><span class="line">                <span class="comment">// test, priority and reuseExistingChunk can only be configured on cache group level.</span></span><br><span class="line">                cacheGroups: &#123;</span><br><span class="line">                    <span class="comment">// 提取 node_modules 里面依赖的代码</span></span><br><span class="line">                    vendors: &#123;</span><br><span class="line">                        test: <span class="regexp">/[\\/]node_modules[\\/]/</span>,</span><br><span class="line">                        name: <span class="string">'chunk-vendors'</span>,</span><br><span class="line">                        chunks: <span class="string">'all'</span>,</span><br><span class="line">                        minChunks: <span class="number">2</span>, <span class="comment">//2个共享以及以上都提取</span></span><br><span class="line">                        priority: <span class="number">-10</span> <span class="comment">//优先级</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="comment">// 提出每个模块公共的代码</span></span><br><span class="line">                    commons: &#123;</span><br><span class="line">                        name: <span class="string">'chunk-commons'</span>,</span><br><span class="line">                        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                        chunks: <span class="string">'initial'</span>,</span><br><span class="line">                        minChunks: <span class="number">2</span>, <span class="comment">//两个共享以及以上都提取,</span></span><br><span class="line">                        minSize: <span class="number">0</span>,</span><br><span class="line">                        priority: <span class="number">-20</span>, <span class="comment">//优先级</span></span><br><span class="line">                        reuseExistingChunk: <span class="literal">true</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    css: &#123;</span><br><span class="line">                        name: <span class="string">'css-commons'</span>,</span><br><span class="line">                        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                        minChunks: <span class="number">2</span>,</span><br><span class="line">                        minSize: <span class="number">0</span>,</span><br><span class="line">                        priority: <span class="number">-20</span>,</span><br><span class="line">                        chunks: <span class="string">'initial'</span>,</span><br><span class="line">                        reuseExistingChunk: <span class="literal">true</span>,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// I pull the Webpack runtime out into its own bundle file so that the</span></span><br><span class="line">            <span class="comment">// contentHash of each subsequent bundle will remain the same as long as the</span></span><br><span class="line">            <span class="comment">// source code of said bundles remain the same.</span></span><br><span class="line">            runtimeChunk: <span class="string">"single"</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 构建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP 报头字段列表</title>
      <link href="/2019/06/06/%E7%BD%91%E7%BB%9C/List-of-HTTP-header-fields/"/>
      <url>/2019/06/06/%E7%BD%91%E7%BB%9C/List-of-HTTP-header-fields/</url>
      
        <content type="html"><![CDATA[<h3 id="HTTP-报头字段列表"><a href="#HTTP-报头字段列表" class="headerlink" title="HTTP 报头字段列表"></a>HTTP 报头字段列表</h3><p>[TOC]</p><p>HTTP报头字段 是 HTTP中请求和响应消息的头部部分的组件。他们是定义HTTP事务的操作参数</p><p>头部字段在<code>请求行</code>或者<code>响应行</code>发出之后，才会被传送；</p><p>首先让我们以<code>RFC 7230</code>为例了解一下 报文格式 <code>Message Format</code>:</p><h4 id="1、Message-Format-报文格式"><a href="#1、Message-Format-报文格式" class="headerlink" title="1、Message Format 报文格式"></a>1、Message Format 报文格式</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">RFC 7230     HTTP/1.1 Message Syntax and Routing      June 2014</span><br><span class="line">HTTP-message = start-line</span><br><span class="line">               *( header-field CRLF )(0或多个)</span><br><span class="line">               CRLF（回车换行表明头部部分的结束）</span><br><span class="line">               [ message-body ]</span><br></pre></td></tr></table></figure><h5 id="1-1、start-line-开始行"><a href="#1-1、start-line-开始行" class="headerlink" title="1.1、start-line 开始行"></a>1.1、start-line 开始行</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">start-line = request-line / status-line</span><br><span class="line"></span><br><span class="line">一个HTTP消息可以是客户端发往服务器的一个request请求也可以是服务器响应客户端的response响应。</span><br><span class="line">这个两者的区别就在于 start-line 是 request-line (针对请求) 或者 status-line（针对响应）.</span><br><span class="line"></span><br><span class="line">在理论上，一个客户端可以接收请求和一个服务端可以接收响应，根据他们的不同的 start-line.但是在实践中</span><br><span class="line">，服务器是被用来实现只希望接收一个请求（响应是作为一个未知名或者不合法的请求的一个解释）和客户端是实现只接受响应的。</span><br></pre></td></tr></table></figure><h5 id="1-2、request-line-请求行"><a href="#1-2、request-line-请求行" class="headerlink" title="1.2、request-line 请求行"></a>1.2、request-line 请求行</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">request-line = method SP(空格) request-target SP HTTP-version CRLF(回车换行)</span><br><span class="line"></span><br><span class="line">method token 表明请求资源的请求方法，大小写敏感：</span><br><span class="line"></span><br><span class="line">+---------+-------------------------------------------------+-------+</span><br><span class="line">   | Method  | Description                                     | Sec.  |</span><br><span class="line">   +---------+-------------------------------------------------+-------+</span><br><span class="line">   | GET     | Transfer a current representation of the target | 4.3.1 |</span><br><span class="line">   |         | resource.                                       |       |</span><br><span class="line">   |         | 传输目标资源的当前表示                              |       |</span><br><span class="line">   | HEAD    | Same as GET, but only transfer the status line  | 4.3.2 |</span><br><span class="line">   |         | and header section.                             |       |</span><br><span class="line">   |         | 只传输状态行和头部                                 |       |</span><br><span class="line">   | POST    | Perform resource-specific processing on the     | 4.3.3 |</span><br><span class="line">   |         | request payload.                                |       |</span><br><span class="line">   |         | 请求负载中执行指定资源的处理                         |       |</span><br><span class="line">   | PUT     | Replace all current representations of the      | 4.3.4 |</span><br><span class="line">   |         | target resource with the request payload.       |       |</span><br><span class="line">   |         | 在请求负载中替换目标资源的当前表示                    |       |</span><br><span class="line">   | DELETE  | Remove all current representations of the       | 4.3.5 |</span><br><span class="line">   |         | target resource.                                |       |</span><br><span class="line">   |         | 移除目标资源的所有现在的表示                         |       |</span><br><span class="line">   | CONNECT | Establish a tunnel to the server identified by  | 4.3.6 |</span><br><span class="line">   |         | the target resource.                            |       |</span><br><span class="line">   |         | 目标资源定义建立的一个连接服务器的通道                 |       |</span><br><span class="line">   | OPTIONS | Describe the communication options for the      | 4.3.7 |</span><br><span class="line">   |         | target resource.                                |       |</span><br><span class="line">   |         | 描述目标资源的连接参数                              |       |</span><br><span class="line">   | TRACE   | Perform a message loop-back test along the path | 4.3.8 |</span><br><span class="line">   |         | to the target resource.                         |       |</span><br><span class="line">   |         | 跟随目标资源执行一个消息回环测试                      |       |</span><br><span class="line">   +---------+-------------------------------------------------+-------+</span><br><span class="line"></span><br><span class="line">request-target 是当前请求要求获取的资源</span><br><span class="line"></span><br><span class="line">接收者会用空格隔开的方式去格式化 request-line 到它的组件里面。不用空格隔开的话，只能有三个组件。</span><br><span class="line">不幸运的是，一些用户代理不能去合理的解压或者解码超文本里面发现的空格。导致了这些不允许的字符被发送到请求的目标那里。</span><br><span class="line"></span><br><span class="line">接收者的一个非法 request-line 应该被请求目标回应 400（bad request）错误 或者 301（永久移除）；</span><br><span class="line">接收者不应该尝试去自动更正然后没有重定向地处理这个请求，因为非法的 reqest-line 会跟着请求链故意精心的绕过安全过滤策略。</span><br><span class="line"></span><br><span class="line">HTTP并不会预先设置一个request-line的长度。服务器如果接收一个比其他任何请求都长的请求的时候，会反馈一个 501 （没有实现）的状态码。一个服务器接收一个比任何URL都长的请求目标是，它希望解析必须回应一个 414 （URL Too long）的状态码。</span><br></pre></td></tr></table></figure><h5 id="1-3、status-line-状态行"><a href="#1-3、status-line-状态行" class="headerlink" title="1.3、status line 状态行"></a>1.3、status line 状态行</h5><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">status-line = HTTP-version SP status-code SP reason-phrase CRLF</span><br><span class="line"></span><br><span class="line">响应消息的第一行就是 status-line，由 协议版本 + SP + statusCode + SP + reason-phrase + CRLF 组成。</span><br><span class="line"></span><br><span class="line">status-code = 3DIGIT （三个数字）</span><br><span class="line"></span><br><span class="line">状态码用来描述服务器尝试理解和满足客户端相应请求的结果。其他的响应信息是用来解释状态码的定义。</span><br><span class="line">状态码是可以扩展的，客户端不用去理解注册的状态码的含义，尽管这样的理解是明显令人向往的。</span><br><span class="line">但是客户端必须懂得这些状态码的分类，也就是第一个数字，不能把一个未被认可的状态码等价于 X00, 客户端不能缓存一个带有未知名状态码的响应消息。</span><br><span class="line"></span><br><span class="line">第一个数字代表状态码的分类，其他两个数字没有明显的分类规则，总共有5类状态码：</span><br><span class="line"></span><br><span class="line">1XX (Informational信息)： 请求被接收，持续处理的过程。</span><br><span class="line">2XX (Successfull成功): 请求被成功接收，解读和接受。</span><br><span class="line">3XX (Redirection重定向): 为了完成请求过程，更多的动作需要去执行。</span><br><span class="line">4XX (Client error 客户端错误): 请求包含错误的语法或者不能被实现。</span><br><span class="line">5XX (Server error 服务器错误): 服务器不能实现一个显然合法的请求。</span><br><span class="line"></span><br><span class="line">reason-phrase  = *( HTAB / SP / VCHAR / obs-text )</span><br><span class="line"></span><br><span class="line"><span class="attribute">reason-phrase设计的最底层目的是为了提供一个当前状态码的文本描述。客户端可忽略。</span></span><br></pre></td></tr></table></figure><h5 id="1-4、Header-Fields-头部字段"><a href="#1-4、Header-Fields-头部字段" class="headerlink" title="1.4、Header Fields 头部字段"></a>1.4、Header Fields 头部字段</h5><p>每一个<code>头部字段</code>由一个<code>大小写不敏感的字段名字</code>，跟着一个<code>冒号</code>，<code>可选的空格</code>，<code>字段值</code>和<code>可选的尾部空格</code>组成。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">header-field = field-name  ":" OWS(可选的空格) field-value OWS</span><br><span class="line"></span><br><span class="line">  field-name     = token</span><br><span class="line">     field-value    = *( field-content / obs-fold )</span><br><span class="line">     field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]</span><br><span class="line">     field-vchar    = VCHAR / obs-text</span><br><span class="line"></span><br><span class="line">     obs-fold       = CRLF 1*( SP / HTAB )</span><br><span class="line">                    ; obsolete line folding</span><br></pre></td></tr></table></figure><h5 id="1-5、message-body"><a href="#1-5、message-body" class="headerlink" title="1.5、message body"></a>1.5、message body</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> message-body = *OCTET</span><br><span class="line"></span><br><span class="line">一个HTTP消息的消息正文是用来携带请求或者响应的负载正文。</span><br><span class="line">消息体是和有效载荷体是一致的，除非一个传输编码已经被完成。</span><br><span class="line"></span><br><span class="line">消息中允许的消息主体的规则在请求和响应中是不同的。</span><br><span class="line"></span><br><span class="line">request 请求中的 message body的预定义是被 Content-Length 或 Transfer-Encoding 头部字段控制。</span><br><span class="line"></span><br><span class="line">请求消息框架是和method的语义无关的。甚至请求方法对消息体没有任何用处。</span><br><span class="line"></span><br><span class="line">响应消息中的message body存在与否决定于请求的方法和响应返回的状态码。</span><br><span class="line">HEAD请求不会返回 message body，因为它只是关联响应头部字段。即使存在 message body ，如果方法是GET也是表明将会显示什么值.</span><br><span class="line">所有 1XX 204 304 都不会有 message body.</span><br></pre></td></tr></table></figure><h4 id="2、Standard-request-fields-标准请求头字段"><a href="#2、Standard-request-fields-标准请求头字段" class="headerlink" title="2、Standard request fields 标准请求头字段"></a>2、Standard request fields 标准请求头字段</h4><table><thead><tr><th>字段名</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>A-IM</td><td>对请求可接受的接口实例化,同accept</td><td>A-IM: feed</td></tr><tr><td>Accept</td><td>response可接受的媒体类型</td><td>Accept: text/html<br>其他：text/html; q=1.0, text/*; q=0.8, image/gif; q=0.6, image/jpeg; q=0.6, image/*; q=0.5, */*; q=0.1</td></tr><tr><td>Accept-Charset</td><td>可接受的字符集</td><td>Accept-Charset: utf-8</td></tr><tr><td>Accept-Encoding</td><td>可接受的文件解码格式</td><td>Accept-Encoding: gzip, deflate</td></tr><tr><td>Accept-Language</td><td>response可接受的人类语言</td><td>Accept-Language: en-US</td></tr><tr><td>Accept-Datetime</td><td>可接受的时间版本</td><td>Accept-Datetime: Thu, 31 May 2007 20:35:00 GMT</td></tr><tr><td>Access-Control-Request-Method,<br>Access-Control-Request-Headers</td><td>利用origin发起跨域资源请求</td><td>Access-Control-Request-Method: GET<br></td></tr><tr><td>Authorization</td><td>HTTP认证</td><td>Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Cache-Control</td><td>用来指定一个在请求响应链中所有缓存机制必须遵守的一个指令</td><td>Cache-Control: no-cache</td></tr><tr><td>Connection</td><td>当前连接和持续请求的的控制参数。HTTP/2不得用这个方法，默认持续连接</td><td>Connection: keep-alive<br>Connection: Upgrade</td></tr><tr><td>Content-Length</td><td>request body的长度</td><td>Content-Length: 348</td></tr><tr><td>Content-Type</td><td>request body的媒体格式（POST 和 PUT适用）</td><td>Content-Type: application/x-www-form-urlencoded</td></tr><tr><td>Cookie</td><td>一个被服务器用set-cookie发送的数据</td><td>Cookie: $Version=1; Skin=new;</td></tr><tr><td>Date</td><td>message发出的时间</td><td>Date: Tue, 15 Nov 1994 08:12:31 GMT</td></tr><tr><td>Expect</td><td>客户端表明的特殊的服务器要做的行为</td><td>Expect: 100-continue</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
          <category> HTTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript - 并发模式和 Event Loop 事件循环解读</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%92%8C%20Event%20Loop%20%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E8%A7%A3%E8%AF%BB/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%92%8C%20Event%20Loop%20%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E8%A7%A3%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="JavaScript-并发模式和-Event-Loop-事件循环解读"><a href="#JavaScript-并发模式和-Event-Loop-事件循环解读" class="headerlink" title="JavaScript - 并发模式和 Event Loop 事件循环解读"></a>JavaScript - 并发模式和 Event Loop 事件循环解读</h2><p>[TOC]</p><h3 id="1、Runtime-concepts-执行相关的概念"><a href="#1、Runtime-concepts-执行相关的概念" class="headerlink" title="1、Runtime concepts 执行相关的概念"></a>1、Runtime concepts 执行相关的概念</h3><p><code>Javascript</code> 有一个基于<code>Event Loop</code> 事件循环的并发模型；</p><p>下面讲解一个理论模型，讲解现代浏览器<code>javascript</code> 引擎实现机制和讲解一下描述的一些语义词；</p><p>可视模型代表：</p><p><img src="/images/stack-heap-queue.svg" alt></p><h4 id="1-1、stack-栈"><a href="#1-1、stack-栈" class="headerlink" title="1.1、stack 栈"></a>1.1、stack 栈</h4><p>函数调用形成了一个栈帧</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">return</span> a + b + <span class="number">11</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> y = <span class="number">3</span>;</span><br><span class="line">  <span class="keyword">return</span> foo(x * y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(bar(<span class="number">7</span>)); <span class="comment">// 返回 42</span></span><br></pre></td></tr></table></figure><p><img src="/images/event_stack.jpg" alt="stack"></p><p>简单介绍下函数调用的过程：</p><p>当调用<code>bar(7)</code>时，建立了第一个 <code>stack frame</code> 是 <code>bar</code> (包含参数<code>7</code>和本地变量)；当 <code>bar</code> 调用 <code>foo</code> 时候，建立了第二个 <code>stack frame</code> 是 <code>foo</code>(包含参数 <code>3* 7</code> 和本地变量), 并且放置在 <code>bar</code> 的<code>上方</code>，也就是<code>栈的顶部</code>了。</p><p>当 <code>foo（21）</code> 执行完毕 返回 42 的时候，<code>foo</code> 这个栈帧会被移除掉，只剩下了 <code>bar（7）</code>；然后再执行 <code>bar</code>, 有返回后，整个栈都是空的。</p><h4 id="1-2、Heap-堆"><a href="#1-2、Heap-堆" class="headerlink" title="1.2、Heap 堆"></a>1.2、Heap 堆</h4><p>对象都被关联在<code>Heap</code>里面，即用于表示一大块非结构化的内存区域。</p><h4 id="1-3、Queue-消息队列"><a href="#1-3、Queue-消息队列" class="headerlink" title="1.3、Queue 消息队列"></a>1.3、Queue 消息队列</h4><p>一个 <code>Javascript</code> 运行时使用一系列待处理消息的消息队列。每个消息关联一个函数去处理消息。</p><p><code>如果一个消息，比如click事件却没有回调函数，是不会被加入消息队列的</code>；</p><p>在事件循环的一些时刻，<code>运行时从最先进入队列的消息开始处理队列中的消息</code>。这样做的话，消息从队列中被移除，并作为输入参数调用与之关联的函数。就如上面所说，调用一个函数总是为其创造一个的栈帧。</p><p>函数的执行一直会持续到 <code>stack</code> 变成 空的。然后如果消息队列还有消息的话，事件循环将会执行消息队列的下一个消息。</p><p>总之就是：</p><p>Queue队列中的消息，会以一个个执行；首先会判断 stack 会不会为空，如果为空就执行下一个消息；如果不为空，等待上一个消息处理完。</p><h3 id="2、Event-Loop-事件循环"><a href="#2、Event-Loop-事件循环" class="headerlink" title="2、Event Loop 事件循环"></a>2、Event Loop 事件循环</h3><p>之所以称为事件循环，是因为他的执行实现的方式如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (queue.waitForMessage()) &#123;</span><br><span class="line">  queue.processNextMessage();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果当前没有消息，<code>queue.waitForMessage()</code>会同步等待消息的到达。</p><p>事件循环是指等待队列同步接收消息的过程的术语。 事件循环移入的增量称为’tick’，每次’ticks’时它检查调用堆栈是否为空，如果是，它将事件队列中的top函数添加到调用堆栈并执行它。 完成处理此功能后，它会再次开始计时。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> link = <span class="built_in">document</span>.getElementById(<span class="string">"foo"</span>);</span><br><span class="line"></span><br><span class="line">  link.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> <span class="title">changeColor</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.style.color = <span class="string">"burlywood"</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">init();</span><br></pre></td></tr></table></figure><p><img src="/images/event_loop_2.png" alt></p><p>在这个例子中：</p><p>当用户点击 元素 <code>foo</code> 和 触发 <code>onClick</code> 事件时，一个 <code>message</code> (and <code>callback</code>, <code>changeColor</code>) 被添加到消息队列中。</p><p>当这个消息被移除时，它的回调函数 changeColor 被调用，当 changeColor returns 时（哪怕返回的是一个错误)，<code>call stack</code> 清空，事件循环再次开始；</p><p>只要 <code>changeColor</code> 方法存在，然后指定为元素 <code>foo</code> 的点击回调函数，后续的点击元素会引起更多的消息（关联到回调函数 <code>changeColor</code>）被加入到消息队列。</p><h4 id="2-1、Run-to-completion-运行到结束"><a href="#2-1、Run-to-completion-运行到结束" class="headerlink" title="2.1、Run-to-completion 运行到结束"></a>2.1、Run-to-completion 运行到结束</h4><p>每一个消息都被完全执行结束后，才回去执行下一个消息的处理。</p><p>这为程序的分析提供了一些优秀的特性，包括：无论何时执行一个函数，都不会被抢占，并且会在其他代码执行之前就已经被完全执行（并且可以修改函数操作的数量）。</p><p>这个和 C语言不太一样，比如，如果一个函数运行在一个线程中，一些时候，会被执行系统因在别的线程执行其他代码中断。</p><p>这个模型的缺点时，当一个消息需要太长时间去执行的时候，web用户就无法处理一些，比如<code>click</code>, <code>srcoll</code>的交互。浏览器会弹出一个 <code>“a script is taking too long to run”</code> 这样的对话框来缓解这个情况。一个好的解决办法就是，<code>缩短消息处理的时间，或者把一个消息分割成多个消息</code>。</p><h4 id="2-2、Adding-messages-添加消息"><a href="#2-2、Adding-messages-添加消息" class="headerlink" title="2.2、Adding messages 添加消息"></a>2.2、Adding messages 添加消息</h4><p>在web浏览器里面，<code>只要有事件发生并且有监听器绑定的时候，一定会增加一个消息</code>。如果没有监听器，则事件消失。所以，一个元素的点击并且带有点击事件处理，一定会增加一个消息到消息队列中去。</p><p>setTimeout 函数有两个参数：<code>添加队列的消息</code> 和 <code>时间（默认 0 ）</code>，这个时间值代表着这个消息被添加到消息队列最小的延迟时间。如果消息队列中，没有别的消息，这个消息会在延迟时间达到之后，立马会被处理。如果消息队列有别的消息，<code>setTimeout</code> 这个消息一定要等到别的消息被处理完后才能执行。由于这个原因，所以第二参数表明了<code>最小的时间间隔</code>，而<code>非确切的时间</code>。</p><p>举例说明，当第二个参数的时间过期后，setTimeout 不会被执行：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> s = <span class="keyword">new</span> <span class="built_in">Date</span>().getSeconds();</span><br><span class="line"></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// prints out "2", meaning that the callback is not called immediately after 500 milliseconds.</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Ran after "</span> + (<span class="keyword">new</span> <span class="built_in">Date</span>().getSeconds() - s) + <span class="string">" seconds"</span>);</span><br><span class="line">&#125;, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">new</span> <span class="built_in">Date</span>().getSeconds() - s &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Good, looped for 2 seconds"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>举例说明添加消息的顺序：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"foo"</span>);</span><br><span class="line">  setTimeout(g, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"baz"</span>);</span><br><span class="line">  h();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"bar"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"blix"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f();</span><br></pre></td></tr></table></figure><p>由于 <code>setTimeout</code> 的非阻塞特性，它的回调函数将在 0 毫米后触发，并且不会作为 <code>f()</code>这个消息的一部分来处理。</p><p>在这个例子中，调用 <code>setTimeout</code> ，传递回调函数 <code>g</code> 和 时间延迟 <code>0</code> ms; 当指定的延迟时间到了的时候，一个以 <code>g</code> 为回调函数的单独的消息会被加入到消息队列中。</p><p>生成结果的控制台活动是 <code>“foo”, “baz”, “bilx”</code> 和在下一个事件循环中产生的结果：<code>“bar”</code>;</p><p>如果<code>同一个调用帧</code>，对 <code>setTimeout</code> 进行两次调用，并且 <code>timeout</code> 时间相同，则按执行顺序进行处理。</p><p><img src="/images/stack_3.png" alt></p><h4 id="2-3、Zero-delays-零延迟"><a href="#2-3、Zero-delays-零延迟" class="headerlink" title="2.3、Zero delays 零延迟"></a>2.3、Zero delays 零延迟</h4><p>零延迟不是真实代表着在0毫秒后回调函数会执行。</p><p>setTimeout 的零延迟，在给定的时间间隔后不会执行回调函数。</p><p>是否执行决定于消息队列中的等待任务的数量。</p><p>举例说明：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'this is the start'</span>);</span><br><span class="line"></span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">cb</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Callback 1: this is a msg from call back'</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'this is just a message'</span>);</span><br><span class="line"></span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">cb1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Callback 2: this is a msg from call back'</span>);</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'this is the end'</span>);</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// "this is the start"</span></span><br><span class="line"><span class="comment">// "this is just a message"</span></span><br><span class="line"><span class="comment">// "this is the end"</span></span><br><span class="line"><span class="comment">// 当前函数 note that function return, which is undefined, happens here</span></span><br><span class="line"><span class="comment">// "Callback 1: this is a msg from call back"</span></span><br><span class="line"><span class="comment">// "Callback 2: this is a msg from call back"</span></span><br></pre></td></tr></table></figure><p><code>this is just a message</code> 虽然在回调之后，却会在回调之前输出到打印台上，这是因为这个零延迟只是处理请求的最小延迟，并非一个保证的精确的时间。</p><p>一般地，<code>setTimeout</code> 需要等待所有其他消息队列的代码执行完之后，才会执行，即时你设置了特殊的时间间隔。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 深度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP简介</title>
      <link href="/2019/06/06/%E7%BD%91%E7%BB%9C/http%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/06/06/%E7%BD%91%E7%BB%9C/http%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="HTTP简介"><a href="#HTTP简介" class="headerlink" title="HTTP简介"></a>HTTP简介</h2><p>[TOC]</p><p><code>Hypertext transfer protocol</code>（简称：<code>HTTP</code>）<code>超文本传输协议</code>。<code>HTTP</code>是<code>WWW</code>(world wide web 万维网)在一个<code>超文本</code>里面包含<code>超链接</code>的数据通信的基础。</p><p><code>HTTP</code>的发展起始于1989年被 <code>Tim Berners-Lee</code> 在 <code>CERN</code>创立。HTTP标准的发展是被<code>IEIF(Internet Engineering Task Force)</code>和<code>W3C (world wide web consortium)</code>调整，并在提出 <code>RFCs(request for comments)</code>后达到了顶点。</p><p><code>HTTP</code>的第一个修订版<code>HTTP/1.1</code>,在1997被广泛应用，不过 在 1999 年被 <code>RFC 2616</code>废弃，之后在2014年又出现了 <code>RFC 7230</code>；</p><p>稍后，在2015年，提出了 继任者HTTP/2（之后的继任者是HTTP/3, 建立在 HTTP/2之上）,现在被大部分主要的web服务器和浏览器通过 <code>TSL(Transport Layer Security 传输层安全协议)</code>使用<code>ALPN (Application-Layer Protocol Negotiation 应用层协议协商)</code>扩展支持的。</p><h3 id="1、技术介绍"><a href="#1、技术介绍" class="headerlink" title="1、技术介绍"></a>1、技术介绍</h3><p><code>HTTP</code>方法作为一个<code>请求-响应</code>在<code>客户端-服务器</code>计算模式。举例，比如一个<code>web浏览器</code>,或者是一个<code>客户端</code>或<code>应用程序</code>运行在拥有网站域名的<code>电脑主机上</code>。客户端发起一个 <code>HTTP request</code> 请求，提供资源比如 HTML或者其他资源或代表客户机执行其他行为的<code>一个服务器</code>，返回一个<code>response message</code>响应的消息给客户端。返回的<code>响应信息</code>包含了请求的完整信息状态和或许会包含<code>请求的内容</code>。</p><p>浏览器就是一个用户代理（<code>user agent 简称 UA</code>)。其他的用户代理包括，搜索提供服务的索引浏览器（web爬虫），语音浏览器，移动<code>apps</code>和其他软件，访问、消耗或者展示 网页内容。</p><p>HTTP被设计去允许网络中间件元素去提高或者加强客户端和服务器之间的通信。高并发的网站经常受益在那些传递在上层服务器提高响应时间的<code>web cache(网页缓存)</code>上。网页浏览器缓存之前获取到的资源然后再减少网络拥堵的时候重复使用这些资源。在私有网络边界的HTTP代理服务器能够促进和通过额外的服务器传递消息的客户端的通信。</p><p><code>HTTP</code>是一个设计在<code>互联网协议套件</code>（<code>Internet protocol suite</code>）里的一个应用层协议。它的定义内容假一个潜在的可靠的<code>传输层协议</code>（<code>transport layer protocol 简称 TLP</code> ）和 <code>传输控制协议</code>（<code>Transmission Control Protocol 简称 TCP</code>）被普遍应用。然而，HTTP可以被适用于不可靠额协议比如<code>用户数据报协议</code> <code>（User Dategram Protocol 简称 UDP）</code>,比如，<code>HTTPU 通用即用即插</code> 和<code>简单的服务发现协议</code> <a href="https://en.wikipedia.org/wiki/Simple_Service_Discovery_Protocol" target="_blank" rel="noopener">(Simple Service  Discovery Protocol 简称 SSDP)</a>。</p><p>HTTP资源利用URLs 统一资源存放器（Uniform Resource Locators）定义和存放在网络上，利用URL‘s（Uniform Resource identifiers）统一资源标识符 http 和 https。比如：包含所有的可选择的组件：</p><p><img src="/.io//1559022847926.png" alt></p><p>URLs在HTML 文档中被解码为超链接，所以成为了相关联的超文本文档。</p><p>HTTP/1.1是在原来HTTP(HTTP/1.0)的一次版本更新，在HTTP/1.0，每一次请求服务器资源，都要单独发一次请求连接。在HTTP/1.1,可以在页面被发布后，重复使用一个请求连接去请求下载图片，脚本和样式表等。</p><h3 id="2、历史"><a href="#2、历史" class="headerlink" title="2、历史"></a>2、历史</h3><p>术语 <code>hypertext</code>最早在1985年被<code>Ted Nelson</code> 提出，反而在1930年的 <code>vannevar Bush</code> 的基于微缩胶卷的信息检索和管理的“<code>memex</code>”系统所激励。后来<code>Berners-Lee</code>和他的团队发明的最初的<code>HTTP</code>, 还有<code>Html</code>和相关的网页服务器和基于文本的网页浏览器的相关的技术，终于被认可。</p><p><code>Broners-lee</code>在1989年 第一次提出了 “<code>worldWideWeb</code>”项目，也就是现在著名的 <code>World Wide Web</code>。第一个版本的协议只有一个方法：<code>GET</code>, 可以从一个服务器请一个页面，从服务器返回的一直是一个页面。</p><p>第一个注明的HTTP版本是 <code>HTTP V0.9,</code> <code>Dave Ragget</code>t 创建HTTP工作小组(<code>HTTP WG</code>)，打算扩大协议扩展业务，扩大谈判，丰富媒体元信息，尝试使用一个安全协议，后来通过增加额外的方法和消息头变得更加有效率。<code>RFC 1945</code>官方介绍和发布认证<code>HTTP V1.0</code> 在1996；</p><p><code>HTTP WG</code> 打算在1995年12月发布一些新的标准和对基于开发中的<code>RFC2068</code>的预标准HTTP/1.1提供支持，并在1996早期就被大部分浏览器开发者适用认可。同年三月，预标准 HTTP/1.1 被大部分浏览器支持。</p><p>发展历程：</p><ul><li><code>RFC 7230</code>, HTTP/1.1: Message Syntax and Routing</li><li><code>RFC 7231</code>, HTTP/1.1: Semantics and Content</li><li><code>RFC 7232</code>, HTTP/1.1: Conditional Requests</li><li><code>RFC 7233</code>, HTTP/1.1: Range Requests</li><li><code>RFC 7234</code>, HTTP/1.1: Caching</li><li><code>RFC 7235</code>, HTTP/1.1: Authentication</li></ul><p><code>HTTP/2</code> 作为 <code>RFC 7540</code> 在2015年五月发布。</p><table><thead><tr><th>年份</th><th>HTTP 版本</th></tr></thead><tbody><tr><td>1991</td><td>0.9</td></tr><tr><td>1996</td><td>1.0</td></tr><tr><td>1997</td><td>1.1</td></tr><tr><td>2015</td><td>2.0</td></tr><tr><td>2018</td><td>3.0</td></tr></tbody></table><h3 id="3、HTTP-session-会话"><a href="#3、HTTP-session-会话" class="headerlink" title="3、HTTP session 会话"></a>3、HTTP session 会话</h3><p>一个HTTP回话是一系列网络请求-响应失误。一个HTTP客户端通过一个特殊的服务器端口（一般是80，偶尔是8080）建立一个<a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol" target="_blank" rel="noopener">TCP 连接</a> 。一个HTTP server 监听这个端口等待客户端发出请求信息。一旦是收到请求，服务器返回一个状态码：比如 <code>“HTTP/1.1 200 OK”</code>和它自己的消息。此消息的正文一般是请求的资源，或者也许可能是一些错误消息或者其他信息。</p><p><img src="/.io//1559027962666.png" alt></p><h4 id="3-1-持续连接"><a href="#3-1-持续连接" class="headerlink" title="3.1 持续连接"></a>3.1 持续连接</h4><p>在 <code>HTTP/0.9</code> 和 <code>1.0</code>，每一次单独请求/响应后，连接会被关闭。在 <code>HTTP/1.</code>1，一个 <code>keep-alive-mechanism</code> 保持存活机制被介绍，多次单个请求可以共用一个连接通道。这样的持续的连接明显地减少请求延迟时间，因为客户端在第一个请求发出去之后不需要重新谈判和T<code>CP进行三次握手</code>的连接。一般的，连接因为<code>TCP</code>的<code>slow-start</code>机制变得更加快速。</p><h4 id="3-2-HTTP-会话状态"><a href="#3-2-HTTP-会话状态" class="headerlink" title="3.2 HTTP 会话状态"></a>3.2 HTTP 会话状态</h4><p>HTTP是一个<code>无状态协议</code>。一个无状态的协议不会要求HTTP 服务器在多个请求中去保存每一个用户的信息或者状态。但是，一些网页应用程序实现状态或者服务器端会话用做<code>HTTP cookie</code> 或者隐藏在<code>网页表单</code>里的变量。</p><h3 id="4、HTTP-authentication-认证"><a href="#4、HTTP-authentication-认证" class="headerlink" title="4、HTTP authentication 认证"></a>4、HTTP authentication 认证</h3><p>HTTP 提供多种验证方案如：基本的 <code>访问验证</code> 和 <code>消化访问验证</code>，通过质问-验证机制凭借服务器标识符和在提供其请求内容之前提出一个质问权限的操作。</p><p><strong>Authentication realms 身份验证领域</strong></p><p><code>HTTP</code>身份验证规范提供了一个任意的，实现指定的构造，用于划分单独的资源到一个公共的给定的<code>Root URL</code>; 这个<code>realm</code>值是一个字符串，如果存在，一定是和规范的<code>root URL</code>结合来保护空间抵抗挑战。在一个根目录下，可以单独定义不同的认证作用域。</p><h3 id="5、Message-format-消息格式"><a href="#5、Message-format-消息格式" class="headerlink" title="5、Message format 消息格式"></a>5、Message format 消息格式</h3><p>客户端和服务器之间的通信靠发送纯文本消息（ASCII）。客户端发送到服务器，服务器发送响应信息；</p><h4 id="5-1-request-message-请求消息"><a href="#5-1-request-message-请求消息" class="headerlink" title="5.1 request message 请求消息"></a>5.1 request message 请求消息</h4><p>请求的消息有以下组成部分：</p><ul><li>一个 请求命令行 ，比如 （GET /images/logo.png HTTP/1.1）</li><li>请求头 <a href="./List-of-HTTP-header-fields.md">request header fields</a></li><li>一个空行</li><li>一个可选择的消息正文</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
          <category> HTTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP三次握手和四次挥手过程</title>
      <link href="/2019/06/06/%E7%BD%91%E7%BB%9C/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E8%BF%87%E7%A8%8B/"/>
      <url>/2019/06/06/%E7%BD%91%E7%BB%9C/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="TCP三次握手和四次挥手过程"><a href="#TCP三次握手和四次挥手过程" class="headerlink" title="TCP三次握手和四次挥手过程"></a>TCP三次握手和四次挥手过程</h3><p>[TOC]</p><h4 id="1、三次握手"><a href="#1、三次握手" class="headerlink" title="1、三次握手"></a>1、三次握手</h4><h5 id="（1）三次握手的详述"><a href="#（1）三次握手的详述" class="headerlink" title="（1）三次握手的详述"></a>（1）三次握手的详述</h5><p>首先Client端发送连接请求报文，Server段接受连接后回复ACK报文，并为这次连接分配资源。Client端接收到ACK报文后也向Server段发生ACK报文，并分配资源，这样TCP连接就建立了</p><p><img src="https://images2017.cnblogs.com/blog/985821/201708/985821-20170802101806802-1497343688.png" alt="img"></p><p>最初两端的TCP进程都处于CLOSED关闭状态，A主动打开连接，而B被动打开连接;</p><p>（<strong>A、B关闭状态CLOSED</strong>——<strong>B收听状态LISTEN——A同步已发送状态SYN-SENT——B同步收到状态SYN-RCVD——A、B连接已建立状态ESTABLISHED</strong>）</p><ul><li>B的TCP服务器进程先创建传输控制块TCB，准备接受客户进程的连接请求。然后服务器进程就处于LISTEN（收听）状态，等待客户的连接请求。若有，则作出响应。</li><li><strong>1**</strong>）第一次握手：<strong>A的TCP客户进程也是首先创建传输控制块TCB，然后向B发出连接请求报文段，（首部的</strong>同步位SYN=1<strong>，</strong>初始序号seq=x）**，（SYN=1的报文段不能携带数据）但要消耗掉一个序号，此时TCP客户进程进入SYN-SENT（同步已发送）状态。</li><li><strong>2**</strong>）第二次握手：<strong>B收到连接请求报文段后，如同意建立连接，则向A发送确认，在确认报文段中（</strong>SYN=1，ACK=1，确认号ack=x+1，初始序号seq=y**），测试TCP服务器进程进入SYN-RCVD（同步收到）状态；</li><li><strong>3**</strong>）第三次握手：<strong>TCP客户进程收到B的确认后，要向B给出确认报文段（</strong>ACK=1，确认号ack=y+1，序号seq=x+1**）（初始为seq=x，第二个报文段所以要+1），ACK报文段可以携带数据，不携带数据则不消耗序号。TCP连接已经建立，A进入ESTABLISHED（已建立连接）。</li><li>当B收到A的确认后，也进入ESTABLISHED状态。</li></ul><h5 id="（2）总结三次握手过程："><a href="#（2）总结三次握手过程：" class="headerlink" title="（2）总结三次握手过程："></a>（2）总结三次握手过程：</h5><ul><li><strong>第一次握手</strong>：起初两端都处于CLOSED关闭状态，Client将标志位SYN置为1，随机产生一个值seq=x，并将该数据包发送给Server，Client进入SYN-SENT状态，等待Server确认；</li><li><strong>第二次握手</strong>：Server收到数据包后由标志位SYN=1得知Client请求建立连接，Server将标志位SYN和ACK都置为1，ack=x+1，随机产生一个值seq=y，并将该数据包发送给Client以确认连接请求，Server进入SYN-RCVD状态，此时操作系统为该TCP连接分配TCP缓存和变量；</li><li><strong>第三次握手</strong>：Client收到确认后，检查ack是否为x+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=y+1，并且此时操作系统为该TCP连接分配TCP缓存和变量，并将该数据包发送给Server，Server检查ack是否为y+1，ACK是否为1，如果正确则连接建立成功，Client和Server进入ESTABLISHED状态，完成三次握手，随后Client和Server就可以开始传输数据。</li></ul><p>起初A和B都处于<strong>CLOSED状态</strong>——B创建TCB，处于<strong>LISTEN状态</strong>，等待A请求——A创建TCB，发送连接请求（SYN=1，seq=x），进入<strong>SYN-SENT状态</strong>——B收到连接请求，向A发送确认（SYN=ACK=1，确认号ack=x+1，初始序号seq=y），进入<strong>SYN-RCVD状态</strong>——A收到B的确认后，给B发出确认（ACK=1，ack=y+1，seq=x+1），A进入<strong>ESTABLISHED状态</strong>——B收到A的确认后，进入ESTABLISHED状态。</p><p><strong>TCB**</strong>传输控制块**Transmission Control Block，存储每一个连接中的重要信息，如TCP连接表，到发送和接收缓存的指针，到重传队列的指针，当前的发送和接收序号。</p><h5 id="（3）为什么A还要发送一次确认呢？可以二次握手吗？"><a href="#（3）为什么A还要发送一次确认呢？可以二次握手吗？" class="headerlink" title="（3）为什么A还要发送一次确认呢？可以二次握手吗？"></a>（3）为什么A还要发送一次确认呢？可以二次握手吗？</h5><p>　　答：<strong>主要为了防止已失效的连接请求报文段突然又传送到了B，因而产生错误</strong>。如A发出连接请求，但因连接请求报文丢失而未收到确认，于是A再重传一次连接请求。后来收到了确认，建立了连接。数据传输完毕后，就释放了连接，A工发出了两个连接请求报文段，其中第一个丢失，第二个到达了B，但是第一个丢失的报文段只是在<strong>某些网络结点长时间滞留了，延误到连接释放以后的某个时间才到达B</strong>，此时B误认为A又发出一次新的连接请求，于是就向A发出确认报文段，同意建立连接，不采用三次握手，只要B发出确认，就建立新的连接了，此时A不理睬B的确认且不发送数据，则B一致等待A发送数据，浪费资源。</p><h5 id="（4）Server端易受到SYN攻击？"><a href="#（4）Server端易受到SYN攻击？" class="headerlink" title="（4）Server端易受到SYN攻击？"></a>（4）Server端易受到SYN攻击？</h5><p>服务器端的资源分配是在二次握手时分配的，而客户端的资源是在完成三次握手时分配的，所以服务器容易受到SYN洪泛攻击，SYN攻击就是Client在短时间内伪造大量不存在的IP地址，并向Server不断地发送SYN包，Server则回复确认包，并等待Client确认，由于源地址不存在，因此Server需要不断重发直至超时，这些伪造的SYN包将长时间占用未连接队列，导致正常的SYN请求因为队列满而被丢弃，从而引起网络拥塞甚至系统瘫痪。</p><p>防范SYN攻击措施：降低主机的等待时间使主机尽快的释放半连接的占用，短时间受到某IP的重复SYN则丢弃后续请求。</p><h4 id="2、四次挥手"><a href="#2、四次挥手" class="headerlink" title="2、四次挥手"></a>2、四次挥手</h4><h5 id="（1）四次挥手的详述"><a href="#（1）四次挥手的详述" class="headerlink" title="（1）四次挥手的详述"></a>（1）四次挥手的详述</h5><p>​    假设Client端发起中断连接请求，也就是发送FIN报文。Server端接到FIN报文后，意思是说”我Client端没有数据要发给你了”，但是如果你还有数据没有发送完成，则不必急着关闭Socket，可以继续发送数据。所以你先发送ACK，”告诉Client端，你的请求我收到了，但是我还没准备好，请继续你等我的消息”。这个时候Client端就进入FIN_WAIT状态，继续等待Server端的FIN报文。当Server端确定数据已发送完成，则向Client端发送FIN报文，”告诉Client端，好了，我这边数据发完了，准备好关闭连接了”。Client端收到FIN报文后，”就知道可以关闭连接了，但是他还是不相信网络，怕Server端不知道要关闭，所以发送ACK后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。“，Server端收到ACK后，”就知道可以断开连接了”。Client端等待了2MSL后依然没有收到回复，则证明Server端已正常关闭，那好，我Client端也可以关闭连接了。Ok，TCP连接就这样关闭了！</p><p><img src="https://images2017.cnblogs.com/blog/985821/201708/985821-20170802101823505-1177747613.png" alt="img"></p><p> 数据传输结束后，通信的双方都可释放连接，A和B都处于ESTABLISHED状态。（<strong>A、B连接建立状态ESTABLISHED</strong>——<strong>A终止等待1状态FIN-WAIT-1</strong>——<strong>B关闭等待状态CLOSE-WAIT</strong>——<strong>A终止等待2状态FIN-WAIT-2</strong>——<strong>B最后确认状态LAST-ACK</strong>——<strong>A时间等待状态TIME-WAIT</strong>——<strong>B、A关闭状态CLOSED</strong>）</p><ul><li>1）A的应用进程先向其TCP发出连接释放报文段（<strong>FIN=1，序号seq=u</strong>），并停止再发送数据，主动关闭TCP连接，进入FIN-WAIT-1（终止等待1）状态，等待B的确认。</li><li>2）B收到连接释放报文段后即发出确认报文段，（<strong>ACK=1，确认号ack=u+1，序号seq=v</strong>），B进入CLOSE-WAIT（关闭等待）状态，此时的TCP处于半关闭状态，A到B的连接释放。</li><li>3）A收到B的确认后，进入FIN-WAIT-2（终止等待2）状态，等待B发出的连接释放报文段。</li><li>4）B没有要向A发出的数据，B发出连接释放报文段（<strong>FIN=1，ACK=1，序号seq=w，确认号ack=u+1），</strong>B进入LAST-ACK（最后确认）状态，等待A的确认。</li><li>5）A收到B的连接释放报文段后，对此发出确认报文段（<strong>ACK=1，seq=u+1，ack=w+1</strong>），A进入TIME-WAIT（时间等待）状态。此时TCP未释放掉，需要经过时间等待计时器设置的时间2MSL后，A才进入CLOSED状态。</li></ul><h5 id="（2）总结四次挥手过程："><a href="#（2）总结四次挥手过程：" class="headerlink" title="（2）总结四次挥手过程："></a>（2）总结四次挥手过程：</h5><p>起初A和B处于<strong>ESTABLISHED状态</strong>——A发出连接释放报文段并处于<strong>FIN-WAIT-1状态</strong>——B发出确认报文段且进入<strong>CLOSE-WAIT状态</strong>——A收到确认后，进入<strong>FIN-WAIT-2状态</strong>，等待B的连接释放报文段——B没有要向A发出的数据，B发出连接释放报文段且进入<strong>LAST-ACK状态</strong>——A发出确认报文段且进入<strong>TIME-WAIT状态</strong>——B收到确认报文段后进入<strong>CLOSED状态</strong>——A经过等待计时器时间2MSL后，进入<strong>CLOSED状态</strong>。</p><h5 id="（3）为什么A在TIME-WAIT状态必须等待2MSL的时间？"><a href="#（3）为什么A在TIME-WAIT状态必须等待2MSL的时间？" class="headerlink" title="（3）为什么A在TIME-WAIT状态必须等待2MSL的时间？"></a>（3）为什么A在TIME-WAIT状态必须等待2MSL的时间？</h5><p>MSL最长报文段寿命Maximum Segment Lifetime，MSL=2</p><p>答：　　</p><p>两个理由：<strong>1**</strong>）保证A发送的最后一个ACK报文段能够到达B。2）防止“已失效的连接请求报文段”出现在本连接中。**</p><ul><li>1）这个ACK报文段有可能丢失，使得处于LAST-ACK状态的B收不到对已发送的FIN+ACK报文段的确认，B超时重传FIN+ACK报文段，而A能在2MSL时间内收到这个重传的FIN+ACK报文段，接着A重传一次确认，重新启动2MSL计时器，最后A和B都进入到CLOSED状态，<strong>若A在TIME-WAIT状态不等待一段时间，而是发送完ACK报文段后立即释放连接，则无法收到B重传的FIN+ACK报文段，所以不会再发送一次确认报文段，则B无法正常进入到CLOSED状态。</strong></li><li>2）A在发送完最后一个ACK报文段后，再经过2MSL，就可以使本连接持续的时间内所产生的所有报文段都从网络中消失，使下一个新的连接中不会出现这种旧的连接请求报文段。</li></ul><h5 id="（4）为什么连接的时候是三次握手，关闭的时候却是四次握手？"><a href="#（4）为什么连接的时候是三次握手，关闭的时候却是四次握手？" class="headerlink" title="（4）为什么连接的时候是三次握手，关闭的时候却是四次握手？"></a>（4）为什么连接的时候是三次握手，关闭的时候却是四次握手？</h5><p>答：因为当Server端收到Client端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当Server端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉Client端，”你发的FIN报文我收到了”。只有等到我Server端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步握手。</p><h5 id="（5）为什么TIME-WAIT状态需要经过2MSL-最大报文段生存时间-才能返回到CLOSE状态？"><a href="#（5）为什么TIME-WAIT状态需要经过2MSL-最大报文段生存时间-才能返回到CLOSE状态？" class="headerlink" title="（5）为什么TIME_WAIT状态需要经过2MSL(最大报文段生存时间)才能返回到CLOSE状态？"></a>（5）为什么TIME_WAIT状态需要经过2MSL(最大报文段生存时间)才能返回到CLOSE状态？</h5><p>答：虽然按道理，四个报文都发送完毕，我们可以直接进入CLOSE状态了，但是我们必须假象网络是不可靠的，有可以最后一个ACK丢失。所以TIME_WAIT状态就是用来重发可能丢失的ACK报文。</p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
          <category> HTTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue项目改造抛弃vue-cli配置，重撸webpack4和babel配置</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/Vue%E6%8A%9B%E5%BC%83vue.config.js%E9%85%8D%E7%BD%AE%EF%BC%8C%E9%87%8D%E6%92%B8webpack4%E5%92%8Cbabel%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/Vue%E6%8A%9B%E5%BC%83vue.config.js%E9%85%8D%E7%BD%AE%EF%BC%8C%E9%87%8D%E6%92%B8webpack4%E5%92%8Cbabel%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="Vue项目改造抛弃vue-cli配置，重撸webpack4和babel配置"><a href="#Vue项目改造抛弃vue-cli配置，重撸webpack4和babel配置" class="headerlink" title="Vue项目改造抛弃vue-cli配置，重撸webpack4和babel配置"></a>Vue项目改造抛弃vue-cli配置，重撸webpack4和babel配置</h3><p>抛弃自带的vue.config.js的配置模式，手动使用webpack进行构建：</p><p>[TOC]</p><h4 id="webpack4"><a href="#webpack4" class="headerlink" title="webpack4"></a>webpack4</h4><blockquote><p>webpack4 相关loaders和plugins</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;相关loader&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class="line"></span><br><span class="line">vue-loader</span><br><span class="line">编译.vue文件</span><br><span class="line"></span><br><span class="line">babel-loader</span><br><span class="line">编译成ES5</span><br><span class="line"></span><br><span class="line">file-loader</span><br><span class="line">解决文件中 <span class="keyword">import</span>/<span class="built_in">require</span>() 的资源，转化为URL，再输出到指定文件夹内</span><br><span class="line"></span><br><span class="line">url-loader</span><br><span class="line">把图片转化成 base64 URLs, 可以根据limit大小自由控制</span><br><span class="line"></span><br><span class="line">css-loader</span><br><span class="line">css-loader 解释 @<span class="keyword">import</span> and url() 比如 <span class="keyword">import</span>/<span class="built_in">require</span>() 然后解析他们</span><br><span class="line"></span><br><span class="line">file-loader</span><br><span class="line">file-loader 解析文件中的 <span class="keyword">import</span>/<span class="built_in">require</span>() 成一个URL 然后输出到输出文件中</span><br><span class="line"></span><br><span class="line">vue-style-loader</span><br><span class="line">style-loader</span><br><span class="line">dev环境，把css注入到DOM</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;相关plugin&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class="line"></span><br><span class="line">mini-css-extract-plugin</span><br><span class="line">提取css到单独的文件</span><br><span class="line"></span><br><span class="line">clean-webpack-plugin</span><br><span class="line">清理构建的资源</span><br><span class="line"></span><br><span class="line">webpack-build-notifier</span><br><span class="line">构建完成桌面提醒</span><br><span class="line"></span><br><span class="line">html-webpack-plugin</span><br><span class="line">生成html入口模板</span><br><span class="line"></span><br><span class="line">optimize-css-<span class="regexp">/images-webpack-plugin</span></span><br><span class="line"><span class="regexp">css去重压缩</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">purgecss-webpack-plugin</span></span><br><span class="line"><span class="regexp">去除css中未使用的代码</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">webpack-dev-server</span></span><br><span class="line"><span class="regexp">本地server</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">webpack-spritesmith</span></span><br><span class="line"><span class="regexp">自动整合成雪碧图</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">compression-webpack-plugin</span></span><br><span class="line"><span class="regexp">@gfx/</span>zopfli</span><br><span class="line">压缩代码,根据算法生成gzip</span><br><span class="line"></span><br><span class="line">webpack-bundle-analyzer</span><br><span class="line">生成bundle后分析报告，方便优化</span><br><span class="line"></span><br><span class="line">progress-bar-webpack-plugin</span><br><span class="line">显示构建进度条</span><br></pre></td></tr></table></figure><blockquote><p>安装依赖</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D webpack webpack-cli webpack-dev-server vue-loader babel-loader file-loader css-loader style-loader url-loader mini-css-extract-plugin  clean-webpack-plugin webpack-build-notifier html-webpack-plugin optimize-css-/images-webpack-plugin purgecss-webpack-plugin webpack-spritesmith compression-webpack-plugin webpack-bundle-analyzer</span><br></pre></td></tr></table></figure><h4 id="babel-7"><a href="#babel-7" class="headerlink" title="babel 7"></a>babel 7</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@babel/core</span><br><span class="line">@babel/preset-env</span><br><span class="line">@babel/cli</span><br><span class="line">@babel/polyfill</span><br><span class="line"><span class="comment">// runtime</span></span><br><span class="line">@babel/runtime</span><br><span class="line">@babel/plugin-transform-runtime</span><br><span class="line"><span class="comment">// 动态插入</span></span><br><span class="line">@babel/plugin-syntax-dynamic-<span class="keyword">import</span></span><br><span class="line"><span class="comment">// 支持 ...spread</span></span><br><span class="line">@babel/plugin-syntax-object-rest-spread</span><br><span class="line"><span class="comment">// commonjs</span></span><br><span class="line">@babel/plugin-transform-modules-commonjs</span><br><span class="line"><span class="comment">// 支持 vue jsx语法</span></span><br><span class="line">@babel/plugin-syntax-jsx</span><br><span class="line">babel-plugin-transform-vue-jsx</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 element-ui 按需加载</span></span><br><span class="line">babel-plugin-component</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 lodash 按需加载</span></span><br><span class="line">babel-plugin-lodash</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除 console.log</span></span><br><span class="line">babel-plugin-transform-remove-<span class="built_in">console</span></span><br></pre></td></tr></table></figure><blockquote><p>babel.config.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> removeConsolePlugin = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">'production'</span>) &#123;</span><br><span class="line">    removeConsolePlugin.push(<span class="string">'transform-remove-console'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">// presets: ['@vue/app'],</span></span><br><span class="line">    presets: [</span><br><span class="line">        [</span><br><span class="line">            <span class="string">'@babel/preset-env'</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// transform any</span></span><br><span class="line">                loose: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// 借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的</span></span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="comment">// import</span></span><br><span class="line">        <span class="string">'@babel/plugin-syntax-dynamic-import'</span>,</span><br><span class="line">        <span class="comment">// transform</span></span><br><span class="line">        <span class="string">'@babel/plugin-transform-runtime'</span>,</span><br><span class="line">        <span class="string">'@babel/plugin-transform-modules-commonjs'</span>,</span><br><span class="line">        <span class="comment">// vue jsx语法</span></span><br><span class="line">        <span class="string">'@babel/plugin-syntax-jsx'</span>,</span><br><span class="line"><span class="string">'transform-vue-jsx'</span>,</span><br><span class="line"><span class="string">'lodash'</span>,</span><br><span class="line">        <span class="comment">// spread ...</span></span><br><span class="line">        <span class="comment">// '@babel/plugin-syntax-object-rest-spread',</span></span><br><span class="line">        [</span><br><span class="line">            <span class="string">'component'</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                libraryName: <span class="string">'element-ui'</span>,</span><br><span class="line">                styleLibraryName: <span class="string">'theme-chalk'</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        ...removeConsolePlugin</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>webpack.config.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * webpack 4 config</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author </span>master2011zhao<span class="doctag">@gmail</span>.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date </span>20190910</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="comment">// webpack4 使用 mini-css-extract-plugin</span></span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="comment">// extract 被废弃</span></span><br><span class="line"><span class="comment">// const ExtractTextPlugin = require('extract-text-webpack-plugin');</span></span><br><span class="line"><span class="comment">// clean project</span></span><br><span class="line"><span class="keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"><span class="comment">// 压缩css</span></span><br><span class="line"><span class="keyword">const</span> OptimizeCss/imagesPlugin = <span class="built_in">require</span>(<span class="string">'optimize-css-/images-webpack-plugin'</span>);</span><br><span class="line"><span class="comment">// notifier</span></span><br><span class="line"><span class="keyword">const</span> WebpackBuildNotifierPlugin = <span class="built_in">require</span>(<span class="string">'webpack-build-notifier'</span>);</span><br><span class="line"><span class="comment">// 压缩代码</span></span><br><span class="line"><span class="keyword">const</span> CompressionWebpackPlugin = <span class="built_in">require</span>(<span class="string">'compression-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> zopfli = <span class="built_in">require</span>(<span class="string">'@gfx/zopfli'</span>);</span><br><span class="line"><span class="comment">// vue loader</span></span><br><span class="line"><span class="keyword">const</span> VueLoaderPlugin = <span class="built_in">require</span>(<span class="string">'vue-loader/lib/plugin'</span>);</span><br><span class="line"><span class="comment">// 图片整合成雪碧图</span></span><br><span class="line"><span class="keyword">const</span> SpritesmithPlugin = <span class="built_in">require</span>(<span class="string">'webpack-spritesmith'</span>);</span><br><span class="line"><span class="comment">// bundle分析</span></span><br><span class="line"><span class="keyword">const</span> BundleAnalyzerPlugin = <span class="built_in">require</span>(<span class="string">'webpack-bundle-analyzer'</span>).BundleAnalyzerPlugin;</span><br><span class="line"></span><br><span class="line"><span class="comment">// path function</span></span><br><span class="line"><span class="keyword">const</span> resolve = <span class="function"><span class="params">src</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> path.resolve(__dirname, src);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// nginx 配置二级目录 base url</span></span><br><span class="line"><span class="keyword">let</span> serverBaseUrl = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// customerTemplate</span></span><br><span class="line"><span class="keyword">const</span> templateFunction = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log('---', data)</span></span><br><span class="line">    <span class="keyword">const</span> shared = <span class="string">`.sprite_ico &#123; background-image: url(I);display:inline-block;background-size: Wpx Hpx;&#125;`</span></span><br><span class="line">        .replace(<span class="string">'I'</span>, data.sprites[<span class="number">0</span>].image)</span><br><span class="line">        .replace(<span class="string">'W'</span>, data.spritesheet.width)</span><br><span class="line">        .replace(<span class="string">'H'</span>, data.spritesheet.height);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> perSprite = data.sprites</span><br><span class="line">        .map(<span class="function"><span class="keyword">function</span>(<span class="params">sprite</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">`.sprite_ico_N &#123; width: Wpx; height: Hpx; background-position: Xpx Ypx;&#125;`</span></span><br><span class="line">                .replace(<span class="string">'N'</span>, sprite.name)</span><br><span class="line">                .replace(<span class="string">'W'</span>, sprite.width)</span><br><span class="line">                .replace(<span class="string">'H'</span>, sprite.height)</span><br><span class="line">                .replace(<span class="string">'X'</span>, sprite.offset_x)</span><br><span class="line">                .replace(<span class="string">'Y'</span>, sprite.offset_y);</span><br><span class="line">        &#125;)</span><br><span class="line">        .join(<span class="string">'\n'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'//out:false'</span> + <span class="string">'\n'</span> + shared + <span class="string">'\n'</span> + perSprite;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">env, argv</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> isProduction = argv.mode === <span class="string">'production'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'isProduction'</span>, isProduction);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 传递给 babel.config.js</span></span><br><span class="line">    process.env.NODE_ENV = argv.mode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(process.env.NODE_ENV);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> plugins = [<span class="keyword">new</span> VueLoaderPlugin()];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成模板</span></span><br><span class="line">    <span class="keyword">let</span> HtmlTemplates = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生产环境</span></span><br><span class="line">    <span class="keyword">if</span> (isProduction) &#123;</span><br><span class="line">        <span class="comment">// 清理项目, 清理不干净，需要使用 rm.sh</span></span><br><span class="line">        plugins.push(</span><br><span class="line">            <span class="keyword">new</span> CleanWebpackPlugin(&#123;</span><br><span class="line">                dry: <span class="literal">false</span>,</span><br><span class="line">                verbose: <span class="literal">true</span></span><br><span class="line">            &#125;)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 雪碧图</span></span><br><span class="line">        plugins.push(</span><br><span class="line">            <span class="keyword">new</span> SpritesmithPlugin(&#123;</span><br><span class="line">                src: &#123;</span><br><span class="line">                    <span class="comment">//下面的路径，根据自己的实际路径配置</span></span><br><span class="line">                    cwd: path.resolve(__dirname, <span class="string">'src//images/icons'</span>),</span><br><span class="line">                    glob: <span class="string">'*.png'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="comment">// 输出雪碧图文件及样式文件</span></span><br><span class="line">                target: &#123;</span><br><span class="line">                    <span class="comment">//下面的路径，根据自己的实际路径配置</span></span><br><span class="line">                    image: path.resolve(__dirname, <span class="string">'src//images/sprite.png'</span>),</span><br><span class="line">                    css: [</span><br><span class="line">                        [</span><br><span class="line">                            path.resolve(__dirname, <span class="string">'src/less/sprite.less'</span>),</span><br><span class="line">                            &#123;</span><br><span class="line">                                format: <span class="string">'function_based_template'</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    ]</span><br><span class="line">                    <span class="comment">// css: path.resolve(__dirname, './src/less/sprite.less')</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="comment">// 自定义模板</span></span><br><span class="line">                customTemplates: &#123;</span><br><span class="line">                    function_based_template: templateFunction</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="comment">// 样式文件中调用雪碧图地址写法</span></span><br><span class="line">                apiOptions: &#123;</span><br><span class="line">                    <span class="comment">// 这个路径根据自己页面配置</span></span><br><span class="line">                    cssImageRef: <span class="string">'./images/sprite.png'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                spritesmithOptions: &#123;</span><br><span class="line">                    <span class="comment">// algorithm: 'top-down'</span></span><br><span class="line">                    padding: <span class="number">5</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建完成提醒</span></span><br><span class="line">        plugins.push(</span><br><span class="line">            <span class="keyword">new</span> WebpackBuildNotifierPlugin(&#123;</span><br><span class="line">                title: <span class="string">'project build'</span>,</span><br><span class="line">                suppressSuccess: <span class="literal">true</span>,</span><br><span class="line">                suppressWarning: <span class="literal">true</span>,</span><br><span class="line">                messageFormatter: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">'build completely'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分离css</span></span><br><span class="line">        <span class="comment">// plugins.push(new ExtractTextPlugin('css/[name].[hash:8].css'));</span></span><br><span class="line">        plugins.push(</span><br><span class="line">            <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">                <span class="comment">// Options similar to the same options in webpackOptions.output</span></span><br><span class="line">                <span class="comment">// all options are optional</span></span><br><span class="line">                filename: <span class="string">'css/[name].[hash:8].css'</span>,</span><br><span class="line">                chunkFilename: <span class="string">'css/[name].[hash:8].css'</span>,</span><br><span class="line">                publicPath: <span class="string">'./'</span> + serverBaseUrl,</span><br><span class="line">                ignoreOrder: <span class="literal">false</span> <span class="comment">// Enable to remove warnings about conflicting order</span></span><br><span class="line">            &#125;)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 去除重复的 less, 比如 common</span></span><br><span class="line">        plugins.push(</span><br><span class="line">            <span class="keyword">new</span> OptimizeCss/imagesPlugin(&#123;</span><br><span class="line">                assetNameRegExp: <span class="regexp">/\.css$/g</span>,</span><br><span class="line">                cssProcessor: <span class="built_in">require</span>(<span class="string">'cssnano'</span>),</span><br><span class="line">                cssProcessorPluginOptions: &#123;</span><br><span class="line">                    preset: [</span><br><span class="line">                        <span class="string">'default'</span>,</span><br><span class="line">                        &#123;</span><br><span class="line">                            discardComments: &#123;</span><br><span class="line">                                removeAll: <span class="literal">true</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">                canPrint: <span class="literal">true</span></span><br><span class="line">            &#125;)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">//再次压缩代码</span></span><br><span class="line">        plugins.push(</span><br><span class="line">            <span class="keyword">new</span> CompressionWebpackPlugin(&#123;</span><br><span class="line">                deleteOriginal/images: <span class="literal">false</span>,</span><br><span class="line">                test: <span class="regexp">/\.(js|css|html|woff|ttf|png|jpg|jpeg)$/</span>,</span><br><span class="line">                compressionOptions: &#123;</span><br><span class="line">                    numiterations: <span class="number">15</span></span><br><span class="line">                &#125;,</span><br><span class="line">                threshold: <span class="number">10240</span>,</span><br><span class="line">                minRatio: <span class="number">0.8</span>,</span><br><span class="line">                algorithm(input, compressionOptions, callback) &#123;</span><br><span class="line">                    <span class="keyword">return</span> zopfli.gzip(input, compressionOptions, callback);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 公共提取的chunk</span></span><br><span class="line">        <span class="keyword">const</span> commonChunks = [<span class="string">'chunk-vendors'</span>, <span class="string">'runtime'</span>, <span class="string">'chunk-commons'</span>, <span class="string">'css-commons'</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> minify = &#123;</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">            removeComments: <span class="literal">true</span>,</span><br><span class="line">            removeRedundantAttributes: <span class="literal">true</span>,</span><br><span class="line">            removeScriptTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            removeStyleLinkTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            useShortDoctype: <span class="literal">true</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成模板</span></span><br><span class="line">        HtmlTemplates = [</span><br><span class="line">            <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">                title: <span class="string">'Index'</span>,</span><br><span class="line">                template: resolve(<span class="string">'public/index.html'</span>),</span><br><span class="line">                filename: <span class="string">'index.html'</span>,</span><br><span class="line">                hash: <span class="literal">true</span>,</span><br><span class="line">                minify,</span><br><span class="line">                chunks: [...commonChunks, <span class="string">'index'</span>],</span><br><span class="line">                favicon: resolve(<span class="string">'public/favicon.ico'</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分析生成的包</span></span><br><span class="line">        plugins.push(</span><br><span class="line">            <span class="keyword">new</span> BundleAnalyzerPlugin(&#123;</span><br><span class="line">                <span class="comment">// 生成report.html</span></span><br><span class="line">                analyzerMode: <span class="string">'static'</span></span><br><span class="line">            &#125;)</span><br><span class="line">        );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 生成模板</span></span><br><span class="line">        HtmlTemplates = [</span><br><span class="line">            <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">                title: <span class="string">'Index'</span>,</span><br><span class="line">                template: resolve(<span class="string">'./public/index.html'</span>),</span><br><span class="line">                filename: <span class="string">'index.html'</span>,</span><br><span class="line">                favicon: resolve(<span class="string">'public/favicon.ico'</span>),</span><br><span class="line">                chunks: [<span class="string">'index'</span>, <span class="string">'runtime'</span>]</span><br><span class="line">            &#125;)</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        entry: &#123;</span><br><span class="line">            index: resolve(<span class="string">'src/main.js'</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        output: &#123;</span><br><span class="line">            path: resolve(<span class="string">'cdn'</span>),</span><br><span class="line">            filename: <span class="string">'js/[name].[hash:8].js'</span>,</span><br><span class="line">            publicPath: isProduction ? <span class="string">'./'</span> + serverBaseUrl : <span class="string">''</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 本地调试</span></span><br><span class="line">        devtool: !isProduction ? <span class="string">'inline-source-map'</span> : <span class="string">''</span>,</span><br><span class="line">        devServer: &#123;</span><br><span class="line">            port: <span class="number">3000</span>,</span><br><span class="line">            open: <span class="literal">true</span>,</span><br><span class="line">            hot: <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">// 配置 browserHistory 路由，防止刷新就 404</span></span><br><span class="line">            historyApiFallback: <span class="literal">true</span>,</span><br><span class="line">            compress: <span class="literal">true</span>,</span><br><span class="line">            contentBase: path.resolve(__dirname, <span class="string">''</span>),</span><br><span class="line">            noInfo: <span class="literal">false</span>,</span><br><span class="line">            overlay: &#123;</span><br><span class="line">                warnings: <span class="literal">true</span>,</span><br><span class="line">                errors: <span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            proxy: &#123;</span><br><span class="line">                <span class="string">'/api/v1'</span>: &#123;</span><br><span class="line">                    target: <span class="string">'http://192.168.1.100:18080'</span>,</span><br><span class="line">                    changeOrigin: <span class="literal">true</span>,</span><br><span class="line">                    router: &#123;</span><br><span class="line">                        <span class="string">'/shareIndex'</span>: <span class="string">'http://192.168.1.110:18080'</span>,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        resolve: &#123;</span><br><span class="line">            <span class="comment">// 别名</span></span><br><span class="line">            alias: &#123;</span><br><span class="line">                <span class="string">'@'</span>: resolve(<span class="string">'src'</span>),</span><br><span class="line">                <span class="string">'@c'</span>: resolve(<span class="string">'src/components'</span>),</span><br><span class="line">                <span class="string">'@less'</span>: resolve(<span class="string">'src/less'</span>),</span><br><span class="line">                <span class="string">'@util'</span>: resolve(<span class="string">'src/utils'</span>),</span><br><span class="line">                <span class="string">'@/images'</span>: resolve(<span class="string">'src//images'</span>),</span><br><span class="line">                <span class="string">'@pages'</span>: resolve(<span class="string">'src/pages'</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 自动添加后缀</span></span><br><span class="line">            extensions: [<span class="string">'.vue'</span>, <span class="string">'.js'</span>, <span class="string">'.less'</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="built_in">module</span>: &#123;</span><br><span class="line">            rules: [</span><br><span class="line">                &#123;</span><br><span class="line">                    test: <span class="regexp">/\.vue?$/</span>,</span><br><span class="line">                    use: <span class="string">'vue-loader'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    test: <span class="regexp">/\.js?$/</span>,</span><br><span class="line">                    use: <span class="string">'babel-loader'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    test: <span class="regexp">/\.css?$/</span>,</span><br><span class="line">                    use: [</span><br><span class="line">                        isProduction ? MiniCssExtractPlugin.loader : <span class="string">'vue-style-loader'</span>,</span><br><span class="line">                        &#123;</span><br><span class="line">                            loader: <span class="string">'css-loader'</span>,</span><br><span class="line">                            options: &#123;&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                    use: [</span><br><span class="line">                        isProduction ? MiniCssExtractPlugin.loader : <span class="string">'vue-style-loader'</span>,</span><br><span class="line">                        <span class="string">'css-loader'</span>,</span><br><span class="line">                        &#123;</span><br><span class="line">                            loader: <span class="string">'less-loader'</span>,</span><br><span class="line">                            options: &#123;</span><br><span class="line">                                javascriptEnabled: <span class="literal">true</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    test: <span class="regexp">/\.(png|jpg|svg|gif|ico|woff|ttf)?$/</span>,</span><br><span class="line">                    use: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                            options: &#123;</span><br><span class="line">                                <span class="comment">// 这里的options选项参数可以定义多大的图片转换为base64</span></span><br><span class="line">                                fallback: <span class="string">'file-loader'</span>,</span><br><span class="line">                                limit: <span class="number">10</span> * <span class="number">1024</span>, <span class="comment">// 表示小于10kb的图片转为base64,大于10kb的是路径</span></span><br><span class="line">                                outputPath: <span class="string">'images'</span>, <span class="comment">//定义输出的图片文件夹名字</span></span><br><span class="line">                                publicPath: <span class="string">'../images'</span>, <span class="comment">//css中的路径</span></span><br><span class="line">                                <span class="comment">// name: '[name].[contenthash:8].[ext]'</span></span><br><span class="line">                                name: <span class="string">'[sha512:contenthash:base64:8].[ext]'</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        plugins: [...plugins, ...HtmlTemplates],</span><br><span class="line">        optimization: &#123;</span><br><span class="line">            splitChunks: &#123;</span><br><span class="line">                <span class="comment">// 静态资源缓存</span></span><br><span class="line">                <span class="comment">// test, priority and reuseExistingChunk can only be configured on cache group level.</span></span><br><span class="line">                cacheGroups: &#123;</span><br><span class="line">                    <span class="comment">// 提取 node_modules 里面依赖的代码</span></span><br><span class="line">                    vendors: &#123;</span><br><span class="line">                        test: <span class="regexp">/[\\/]node_modules[\\/]/</span>,</span><br><span class="line">                        name: <span class="string">'chunk-vendors'</span>,</span><br><span class="line">                        chunks: <span class="string">'all'</span>,</span><br><span class="line">                        minSize: <span class="number">0</span>,</span><br><span class="line">                        minChunks: <span class="number">2</span>, <span class="comment">//2个共享以及以上都提取</span></span><br><span class="line">                        priority: <span class="number">-10</span> <span class="comment">//优先级</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="comment">// 提出每个模块公共的代码</span></span><br><span class="line">                    commons: &#123;</span><br><span class="line">                        name: <span class="string">'chunk-commons'</span>,</span><br><span class="line">                        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                        chunks: <span class="string">'initial'</span>,</span><br><span class="line">                        minChunks: <span class="number">2</span>, <span class="comment">//两个共享以及以上都提取,</span></span><br><span class="line">                        minSize: <span class="number">0</span>,</span><br><span class="line">                        priority: <span class="number">-20</span>, <span class="comment">//优先级</span></span><br><span class="line">                        reuseExistingChunk: <span class="literal">true</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    css: &#123;</span><br><span class="line">                        name: <span class="string">'css-commons'</span>,</span><br><span class="line">                        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                        minChunks: <span class="number">2</span>,</span><br><span class="line">                        minSize: <span class="number">0</span>,</span><br><span class="line">                        priority: <span class="number">-30</span>,</span><br><span class="line">                        chunks: <span class="string">'initial'</span>,</span><br><span class="line">                        reuseExistingChunk: <span class="literal">true</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// I pull the Webpack runtime out into its own bundle file so that the</span></span><br><span class="line">            <span class="comment">// contentHash of each subsequent bundle will remain the same as long as the</span></span><br><span class="line">            <span class="comment">// source code of said bundles remain the same.</span></span><br><span class="line">            runtimeChunk: <span class="string">'single'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>package.json</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scripts:&#123;</span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"webpack-dev-server --mode development"</span>,</span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"webpack --mode production"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/1569495769879.png" alt="1569495769879"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三分钟教会你自制IconFont字体图标库</title>
      <link href="/2019/06/06/%E5%89%8D%E7%AB%AF/iconFont%E7%94%9F%E6%88%90%E6%95%99%E7%A8%8B/"/>
      <url>/2019/06/06/%E5%89%8D%E7%AB%AF/iconFont%E7%94%9F%E6%88%90%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="三分钟教会你自制IconFont字体图标库"><a href="#三分钟教会你自制IconFont字体图标库" class="headerlink" title="三分钟教会你自制IconFont字体图标库"></a>三分钟教会你自制IconFont字体图标库</h3><p><code>app</code>开发的时候，我们大多会用到字体<code>icon</code>，下面我们就讲解一下，如何自定义生成 <code>iconFont</code></p><p>一般情况，我们优先选择在 <a href="https://www.iconfont.cn/collections/index?spm=a313x.7781069.1998910419.4&type=1" target="_blank" rel="noopener">Iconfont-阿里巴巴矢量图标库</a> 下载我们需要的矢量icon的svg格式, 如果这里没有你需要的icon，也可以自己切图把png格式的图片转化为svg;</p><p><img src="/.io//1571900747688.png" alt="1571900747688"></p><h4 id="svg-导入并生成-font"><a href="#svg-导入并生成-font" class="headerlink" title="svg 导入并生成 font"></a>svg 导入并生成 font</h4><p>网址：<a href="https://icomoon.io/app/#/select" target="_blank" rel="noopener">https://icomoon.io/app/#/select</a></p><p><img src="/.io//1571898904170.png" alt="1571898904170"></p><p>导入多个<code>svg</code>图片</p><p><img src="/.io//1571898834932.png" alt="1571898834932"></p><p>点击右下角</p><p><img src="/.io//1571898949883.png" alt="1571898949883"></p><p>记好每个icon的<code>code</code></p><p><img src="/.io//1571899023086.png" alt="1571899023086"></p><p>然后点击 <code>download</code></p><p>如图：</p><p><img src="/.io//1571899147150.png" alt="1571899147150"></p><p>然后我们写 less（或者css），定义这些icon的样式：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@assets:</span> <span class="string">'../assets/fonts'</span>;</span><br><span class="line"><span class="variable">@version:</span> <span class="string">'?v=1.1.0'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">'icomoon'</span>;</span><br><span class="line">    <span class="comment">/* 自行安装第三方字体图标库 */</span></span><br><span class="line">    <span class="attribute">src</span>: url(<span class="string">'@&#123;assets&#125;/icomoon.eot@&#123;version&#125;'</span>);</span><br><span class="line">    <span class="attribute">src</span>: url(<span class="string">'@&#123;assets&#125;/icomoon.woff@&#123;version&#125;'</span>) format(<span class="string">'woff'</span>),</span><br><span class="line">    url(<span class="string">'@&#123;assets&#125;/icomoon.ttf@&#123;version&#125;'</span>) format(<span class="string">'truetype'</span>),</span><br><span class="line">    url(<span class="string">'@&#123;assets&#125;/icomoon.svg@&#123;version&#125;'</span>) format(<span class="string">'svg'</span>);</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 根据第三方字体图标库编写 */</span></span><br><span class="line"><span class="comment">/* 举例：fa 就是 prefixClass 的值，下面的的图标 css class 命名都要用 fa- 开头  */</span></span><br><span class="line"><span class="selector-class">.fa</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="comment">/* 以下的 font 与上面 @font-face 的 font-family 要一致*/</span></span><br><span class="line">    <span class="attribute">font</span>: normal normal normal <span class="number">14px</span>/<span class="number">1</span> icomoon;</span><br><span class="line">    <span class="attribute">font-size</span>: inherit;</span><br><span class="line">    <span class="attribute">text-rendering</span>: auto;</span><br><span class="line">    <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">    <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fa-home</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"\e900"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fa-doc</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"\e903"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fa-knowledge</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"\e906"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fa-discuss</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"\e901"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fa-question</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"\e902"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就可以把这个less引入到我们的入口文件里面；</p><p>调用举例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">"fa fa-home"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">/**更改大小和颜色**/</span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">"fa fa-home"</span> <span class="attr">style</span>=<span class="string">"font-size:30;color: blue"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实际效果：</p><p><img src="/.io//1571900156424.png" alt="1571900156424"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> ICONFONT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端技巧 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
